/*! For license information please see app.bundle.js.LICENSE.txt */
(()=>{var e={402:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=n(15),s=n.n(r),i=n(645),a=n.n(i)()(s());a.push([e.id,':root { \n    font-family: sans-serif;\n   \n    --margin-regular: 25px 25px 25px 25px;\n    --margin-big: 50px 50px 50px 50px;\n    --vertical-spacer-big: 50px 0px 50px 0px;  \n    --vertical-spacer: 25px 0px; \n\n    --padding-regular: 10px 20px; \n    --padding-big: 25px 50px;\n   \n    --color-main: rgba(173, 207, 219, 0.904); \n    --color-secondary: rgb(21, 85, 94);\n    --color-accent: rgb(196, 212, 224); \n\n    --box-shadow-default: .1em .1em .5em rgba(0,0,0,.45);\n}\n\n.paragraph {\n    margin: var(--vertical-spacer);\n}\n\n.paragraph-even {\n    background: rgb(17 114 144 / 10%);\n}\n\n.paragraph-odd {\n    background: rgb(52 201 245 / 15%);  \n}\n\n#logocontainer {\n    display: flex;\n    align-items: center;\n    padding: var(--padding-regular);\n}\n\n.logotext1 {\n    font-size: 10pt;\n    font-weight: bold;\n    color: rgb(192, 199, 206);\n    align-self: center;\n}\n.logotext2 {\n    font-weight: bold;\n    color: rgb(192, 199, 206);\n    font-size: 10pt;\n    align-self: flex-end;\n}\n\n.lessonnumbertext {\n    color:rgb(192, 199, 206);\n    font-weight: bold;\n    padding: var(--padding-regular);\n}\n\n.logo1 {\n    margin-right: 10px; \n    padding: 5px;\n    height: 35px;\n}\n\n.logo2 {\n    padding: 5px; \n    height: 90px;\n     \n   \n}\n\nbody {\n    background: var(--color-secondary);\n    margin: auto;\n}\n\n.section {\n    background: whitesmoke;\n    padding: var(--padding-big);\n    width: 75vw;\n    margin: auto; \n}\n\n#lessons {\n    margin: var(--vertical-spacer-big);\n}\n\nnav {\n    text-align: center;\n}\n\nnav a {\n    text-decoration: none; \n    font-weight: bold;\n    font-size: 20pt;\n}\n\na:hover {\n    background: #f6b93b;\n}\n\n#navbar {\n    display: flex;\n    justify-content: space-between;\n    \n    align-items: baseline;\n}\n\n#nav_menu {\n    display: flex;\n    align-items: center;\n    padding: var(--padding-big);\n}\n\n.menu-item {\n    font-size: 24pt;\n    padding: 5px;\n    color: #ffffff;\n    text-decoration: none;\n}\n\n.title { \n    font-size: 26pt; \n    font-weight: 700;\n}\n\n.container {\n    margin: var(--vertical-spacer-big);\n}\n.code {\n    margin: var(--vertical-spacer);\n}\n\npre {\n /*white-space: pre-wrap;*/\n  \n  overflow-x: auto;\n  font-size: 12pt;\n  background-color: #fff;\n  padding: 0.5em;\n  border-radius: .25em;\n  box-shadow: var(--box-shadow-default);\n  position: relative;   \n}\n\n.buttonBox{\n  justify-content: space-between;\n}\n\n.button-next,.button-previous {\n    color: #494949 !important;\n    text-transform: uppercase;\n    text-decoration: none;\n    background: #ffffff;\n    padding: 10px;\n    margin: 25px 0px;\n    border: 4px solid #494949 !important;\n    display: inline-block;\n    transition: all 0.4s ease 0s;\n    font-weight: bold; \n}\n\n.button-next:hover, .button-previous:hover {\n    color: #ffffff !important;\n    background: #494949;\n    border-color: #494949 !important;\n        transition: all 0.4s ease 0s;\n}\n\n.button-next:active, .button-previous:active {\n    background: rgb(173, 207, 219); \n}\n.button-next {\n    margin-left: auto;\n}\n\n.caret::before {\n    content: "\\25B6";\n    color: black;\n    display: inline-block;\n    margin-right: 6px;  \n  }\n\n  .caret-down::before {\n    content: "\\25B6";\n    color: black;\n    display: inline-block;\n    margin-right: 6px;\n    transform: rotate(90deg);  \n  }\n\n  pre button {\n    position: absolute;\n    top: 15px;\n    right: 15px;\n  }\n\n',"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,uBAAuB;;IAEvB,qCAAqC;IACrC,iCAAiC;IACjC,wCAAwC;IACxC,2BAA2B;;IAE3B,4BAA4B;IAC5B,wBAAwB;;IAExB,wCAAwC;IACxC,kCAAkC;IAClC,kCAAkC;;IAElC,oDAAoD;AACxD;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,+BAA+B;AACnC;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,yBAAyB;IACzB,kBAAkB;AACtB;AACA;IACI,iBAAiB;IACjB,yBAAyB;IACzB,eAAe;IACf,oBAAoB;AACxB;;AAEA;IACI,wBAAwB;IACxB,iBAAiB;IACjB,+BAA+B;AACnC;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,YAAY;;;AAGhB;;AAEA;IACI,kCAAkC;IAClC,YAAY;AAChB;;AAEA;IACI,sBAAsB;IACtB,2BAA2B;IAC3B,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,8BAA8B;;IAE9B,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;AAC/B;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,cAAc;IACd,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,kCAAkC;AACtC;AACA;IACI,8BAA8B;AAClC;;AAEA;CACC,yBAAyB;;EAExB,gBAAgB;EAChB,eAAe;EACf,sBAAsB;EACtB,cAAc;EACd,oBAAoB;EACpB,qCAAqC;EACrC,kBAAkB;AACpB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;IACI,yBAAyB;IACzB,yBAAyB;IACzB,qBAAqB;IACrB,mBAAmB;IACnB,aAAa;IACb,gBAAgB;IAChB,oCAAoC;IACpC,qBAAqB;IACrB,4BAA4B;IAC5B,iBAAiB;AACrB;;AAEA;IACI,yBAAyB;IACzB,mBAAmB;IACnB,gCAAgC;QAC5B,4BAA4B;AACpC;;AAEA;IACI,8BAA8B;AAClC;AACA;IACI,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,qBAAqB;IACrB,iBAAiB;EACnB;;EAEA;IACE,gBAAgB;IAChB,YAAY;IACZ,qBAAqB;IACrB,iBAAiB;IACjB,wBAAwB;EAC1B;;EAEA;IACE,kBAAkB;IAClB,SAAS;IACT,WAAW;EACb",sourcesContent:[':root { \n    font-family: sans-serif;\n   \n    --margin-regular: 25px 25px 25px 25px;\n    --margin-big: 50px 50px 50px 50px;\n    --vertical-spacer-big: 50px 0px 50px 0px;  \n    --vertical-spacer: 25px 0px; \n\n    --padding-regular: 10px 20px; \n    --padding-big: 25px 50px;\n   \n    --color-main: rgba(173, 207, 219, 0.904); \n    --color-secondary: rgb(21, 85, 94);\n    --color-accent: rgb(196, 212, 224); \n\n    --box-shadow-default: .1em .1em .5em rgba(0,0,0,.45);\n}\n\n.paragraph {\n    margin: var(--vertical-spacer);\n}\n\n.paragraph-even {\n    background: rgb(17 114 144 / 10%);\n}\n\n.paragraph-odd {\n    background: rgb(52 201 245 / 15%);  \n}\n\n#logocontainer {\n    display: flex;\n    align-items: center;\n    padding: var(--padding-regular);\n}\n\n.logotext1 {\n    font-size: 10pt;\n    font-weight: bold;\n    color: rgb(192, 199, 206);\n    align-self: center;\n}\n.logotext2 {\n    font-weight: bold;\n    color: rgb(192, 199, 206);\n    font-size: 10pt;\n    align-self: flex-end;\n}\n\n.lessonnumbertext {\n    color:rgb(192, 199, 206);\n    font-weight: bold;\n    padding: var(--padding-regular);\n}\n\n.logo1 {\n    margin-right: 10px; \n    padding: 5px;\n    height: 35px;\n}\n\n.logo2 {\n    padding: 5px; \n    height: 90px;\n     \n   \n}\n\nbody {\n    background: var(--color-secondary);\n    margin: auto;\n}\n\n.section {\n    background: whitesmoke;\n    padding: var(--padding-big);\n    width: 75vw;\n    margin: auto; \n}\n\n#lessons {\n    margin: var(--vertical-spacer-big);\n}\n\nnav {\n    text-align: center;\n}\n\nnav a {\n    text-decoration: none; \n    font-weight: bold;\n    font-size: 20pt;\n}\n\na:hover {\n    background: #f6b93b;\n}\n\n#navbar {\n    display: flex;\n    justify-content: space-between;\n    \n    align-items: baseline;\n}\n\n#nav_menu {\n    display: flex;\n    align-items: center;\n    padding: var(--padding-big);\n}\n\n.menu-item {\n    font-size: 24pt;\n    padding: 5px;\n    color: #ffffff;\n    text-decoration: none;\n}\n\n.title { \n    font-size: 26pt; \n    font-weight: 700;\n}\n\n.container {\n    margin: var(--vertical-spacer-big);\n}\n.code {\n    margin: var(--vertical-spacer);\n}\n\npre {\n /*white-space: pre-wrap;*/\n  \n  overflow-x: auto;\n  font-size: 12pt;\n  background-color: #fff;\n  padding: 0.5em;\n  border-radius: .25em;\n  box-shadow: var(--box-shadow-default);\n  position: relative;   \n}\n\n.buttonBox{\n  justify-content: space-between;\n}\n\n.button-next,.button-previous {\n    color: #494949 !important;\n    text-transform: uppercase;\n    text-decoration: none;\n    background: #ffffff;\n    padding: 10px;\n    margin: 25px 0px;\n    border: 4px solid #494949 !important;\n    display: inline-block;\n    transition: all 0.4s ease 0s;\n    font-weight: bold; \n}\n\n.button-next:hover, .button-previous:hover {\n    color: #ffffff !important;\n    background: #494949;\n    border-color: #494949 !important;\n        transition: all 0.4s ease 0s;\n}\n\n.button-next:active, .button-previous:active {\n    background: rgb(173, 207, 219); \n}\n.button-next {\n    margin-left: auto;\n}\n\n.caret::before {\n    content: "\\25B6";\n    color: black;\n    display: inline-block;\n    margin-right: 6px;  \n  }\n\n  .caret-down::before {\n    content: "\\25B6";\n    color: black;\n    display: inline-block;\n    margin-right: 6px;\n    transform: rotate(90deg);  \n  }\n\n  pre button {\n    position: absolute;\n    top: 15px;\n    right: 15px;\n  }\n\n'],sourceRoot:""}]);const o=a},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var s={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(s[a]=!0)}for(var o=0;o<e.length;o++){var u=[].concat(e[o]);r&&s[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},15:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,s=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,s=!1,i=void 0;try{for(var a,o=e[Symbol.iterator]();!(r=(a=o.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){s=!0,i=e}finally{try{r||null==o.return||o.return()}finally{if(s)throw i}}return n}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=s[1],a=s[3];if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),c="/*# ".concat(u," */"),l=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[i].concat(l).concat([c]).join("\n")}return[i].join("\n")}},182:function(e,t,n){e.exports=function(){"use strict";var e=function(e,t){const n=new SyntaxError(e+" ("+t.start.line+":"+t.start.column+")");return n.loc=t,n};const t=e=>!Number.isNaN(e)&&e>=4352&&(e<=4447||9001===e||9002===e||11904<=e&&e<=12871&&12351!==e||12880<=e&&e<=19903||19968<=e&&e<=42182||43360<=e&&e<=43388||44032<=e&&e<=55203||63744<=e&&e<=64255||65040<=e&&e<=65049||65072<=e&&e<=65131||65281<=e&&e<=65376||65504<=e&&e<=65510||110592<=e&&e<=110593||127488<=e&&e<=127569||131072<=e&&e<=262141);var r=t,s=t;r.default=s;const i=e=>{if("string"!=typeof(e=e.replace(/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g,"  "))||0===e.length)return 0;e=(e=>"string"==typeof e?e.replace((({onlyFirst:e=!1}={})=>{const t=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(t,e?void 0:"g")})(),""):e)(e);let t=0;for(let n=0;n<e.length;n++){const s=e.codePointAt(n);s<=31||s>=127&&s<=159||s>=768&&s<=879||(s>65535&&n++,t+=r(s)?2:1)}return t};var a=i,o=i;a.default=o;var u=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")};function c(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var l=void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};function p(){throw new Error("setTimeout has not been defined")}function h(){throw new Error("clearTimeout has not been defined")}var d=p,f=h;function D(e){if(d===setTimeout)return setTimeout(e,0);if((d===p||!d)&&setTimeout)return d=setTimeout,setTimeout(e,0);try{return d(e,0)}catch(t){try{return d.call(null,e,0)}catch(t){return d.call(this,e,0)}}}"function"==typeof l.setTimeout&&(d=setTimeout),"function"==typeof l.clearTimeout&&(f=clearTimeout);var m,g=[],y=!1,E=-1;function C(){y&&m&&(y=!1,m.length?g=m.concat(g):E=-1,g.length&&A())}function A(){if(!y){var e=D(C);y=!0;for(var t=g.length;t;){for(m=g,g=[];++E<t;)m&&m[E].run();E=-1,t=g.length}m=null,y=!1,function(e){if(f===clearTimeout)return clearTimeout(e);if((f===h||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(e);try{f(e)}catch(t){try{return f.call(null,e)}catch(t){return f.call(this,e)}}}(e)}}function b(e,t){this.fun=e,this.array=t}function F(){}b.prototype.run=function(){this.fun.apply(null,this.array)};var x=F,v=F,S=F,T=F,w=F,B=F,P=F,N=l.performance||{},k=N.now||N.mozNow||N.msNow||N.oNow||N.webkitNow||function(){return(new Date).getTime()},I=new Date,L={nextTick:function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];g.push(new b(e,t)),1!==g.length||y||D(A)},title:"browser",browser:!0,env:{},argv:[],version:"",versions:{},on:x,addListener:v,once:S,off:T,removeListener:w,removeAllListeners:B,emit:P,binding:function(e){throw new Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(e){throw new Error("process.chdir is not supported")},umask:function(){return 0},hrtime:function(e){var t=.001*k.call(N),n=Math.floor(t),r=Math.floor(t%1*1e9);return e&&(n-=e[0],(r-=e[1])<0&&(n--,r+=1e9)),[n,r]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-I)/1e3}},O="object"==typeof L&&L.env&&L.env.NODE_DEBUG&&/\bsemver\b/i.test(L.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{},_={SEMVER_SPEC_VERSION:"2.0.0",MAX_LENGTH:256,MAX_SAFE_INTEGER:Number.MAX_SAFE_INTEGER||9007199254740991,MAX_SAFE_COMPONENT_LENGTH:16};function M(e,t,n){return e(n={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&n.path)}},n.exports),n.exports}var R=M((function(e,t){const{MAX_SAFE_COMPONENT_LENGTH:n}=_,r=(t=e.exports={}).re=[],s=t.src=[],i=t.t={};let a=0;const o=(e,t,n)=>{const o=a++;O(o,t),i[e]=o,s[o]=t,r[o]=new RegExp(t,n?"g":void 0)};o("NUMERICIDENTIFIER","0|[1-9]\\d*"),o("NUMERICIDENTIFIERLOOSE","[0-9]+"),o("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),o("MAINVERSION","(".concat(s[i.NUMERICIDENTIFIER],")\\.")+"(".concat(s[i.NUMERICIDENTIFIER],")\\.")+"(".concat(s[i.NUMERICIDENTIFIER],")")),o("MAINVERSIONLOOSE","(".concat(s[i.NUMERICIDENTIFIERLOOSE],")\\.")+"(".concat(s[i.NUMERICIDENTIFIERLOOSE],")\\.")+"(".concat(s[i.NUMERICIDENTIFIERLOOSE],")")),o("PRERELEASEIDENTIFIER","(?:".concat(s[i.NUMERICIDENTIFIER],"|").concat(s[i.NONNUMERICIDENTIFIER],")")),o("PRERELEASEIDENTIFIERLOOSE","(?:".concat(s[i.NUMERICIDENTIFIERLOOSE],"|").concat(s[i.NONNUMERICIDENTIFIER],")")),o("PRERELEASE","(?:-(".concat(s[i.PRERELEASEIDENTIFIER],"(?:\\.").concat(s[i.PRERELEASEIDENTIFIER],")*))")),o("PRERELEASELOOSE","(?:-?(".concat(s[i.PRERELEASEIDENTIFIERLOOSE],"(?:\\.").concat(s[i.PRERELEASEIDENTIFIERLOOSE],")*))")),o("BUILDIDENTIFIER","[0-9A-Za-z-]+"),o("BUILD","(?:\\+(".concat(s[i.BUILDIDENTIFIER],"(?:\\.").concat(s[i.BUILDIDENTIFIER],")*))")),o("FULLPLAIN","v?".concat(s[i.MAINVERSION]).concat(s[i.PRERELEASE],"?").concat(s[i.BUILD],"?")),o("FULL","^".concat(s[i.FULLPLAIN],"$")),o("LOOSEPLAIN","[v=\\s]*".concat(s[i.MAINVERSIONLOOSE]).concat(s[i.PRERELEASELOOSE],"?").concat(s[i.BUILD],"?")),o("LOOSE","^".concat(s[i.LOOSEPLAIN],"$")),o("GTLT","((?:<|>)?=?)"),o("XRANGEIDENTIFIERLOOSE","".concat(s[i.NUMERICIDENTIFIERLOOSE],"|x|X|\\*")),o("XRANGEIDENTIFIER","".concat(s[i.NUMERICIDENTIFIER],"|x|X|\\*")),o("XRANGEPLAIN","[v=\\s]*(".concat(s[i.XRANGEIDENTIFIER],")")+"(?:\\.(".concat(s[i.XRANGEIDENTIFIER],")")+"(?:\\.(".concat(s[i.XRANGEIDENTIFIER],")")+"(?:".concat(s[i.PRERELEASE],")?").concat(s[i.BUILD],"?")+")?)?"),o("XRANGEPLAINLOOSE","[v=\\s]*(".concat(s[i.XRANGEIDENTIFIERLOOSE],")")+"(?:\\.(".concat(s[i.XRANGEIDENTIFIERLOOSE],")")+"(?:\\.(".concat(s[i.XRANGEIDENTIFIERLOOSE],")")+"(?:".concat(s[i.PRERELEASELOOSE],")?").concat(s[i.BUILD],"?")+")?)?"),o("XRANGE","^".concat(s[i.GTLT],"\\s*").concat(s[i.XRANGEPLAIN],"$")),o("XRANGELOOSE","^".concat(s[i.GTLT],"\\s*").concat(s[i.XRANGEPLAINLOOSE],"$")),o("COERCE","".concat("(^|[^\\d])(\\d{1,").concat(n,"})")+"(?:\\.(\\d{1,".concat(n,"}))?")+"(?:\\.(\\d{1,".concat(n,"}))?")+"(?:$|[^\\d])"),o("COERCERTL",s[i.COERCE],!0),o("LONETILDE","(?:~>?)"),o("TILDETRIM","(\\s*)".concat(s[i.LONETILDE],"\\s+"),!0),t.tildeTrimReplace="$1~",o("TILDE","^".concat(s[i.LONETILDE]).concat(s[i.XRANGEPLAIN],"$")),o("TILDELOOSE","^".concat(s[i.LONETILDE]).concat(s[i.XRANGEPLAINLOOSE],"$")),o("LONECARET","(?:\\^)"),o("CARETTRIM","(\\s*)".concat(s[i.LONECARET],"\\s+"),!0),t.caretTrimReplace="$1^",o("CARET","^".concat(s[i.LONECARET]).concat(s[i.XRANGEPLAIN],"$")),o("CARETLOOSE","^".concat(s[i.LONECARET]).concat(s[i.XRANGEPLAINLOOSE],"$")),o("COMPARATORLOOSE","^".concat(s[i.GTLT],"\\s*(").concat(s[i.LOOSEPLAIN],")$|^$")),o("COMPARATOR","^".concat(s[i.GTLT],"\\s*(").concat(s[i.FULLPLAIN],")$|^$")),o("COMPARATORTRIM","(\\s*)".concat(s[i.GTLT],"\\s*(").concat(s[i.LOOSEPLAIN],"|").concat(s[i.XRANGEPLAIN],")"),!0),t.comparatorTrimReplace="$1$2$3",o("HYPHENRANGE","^\\s*(".concat(s[i.XRANGEPLAIN],")")+"\\s+-\\s+"+"(".concat(s[i.XRANGEPLAIN],")")+"\\s*$"),o("HYPHENRANGELOOSE","^\\s*(".concat(s[i.XRANGEPLAINLOOSE],")")+"\\s+-\\s+"+"(".concat(s[i.XRANGEPLAINLOOSE],")")+"\\s*$"),o("STAR","(<|>)?=?\\s*\\*"),o("GTE0","^\\s*>=\\s*0.0.0\\s*$"),o("GTE0PRE","^\\s*>=\\s*0.0.0-0\\s*$")}));const j=/^[0-9]+$/,q=(e,t)=>{const n=j.test(e),r=j.test(t);return n&&r&&(e=+e,t=+t),e===t?0:n&&!r?-1:r&&!n?1:e<t?-1:1};var U={compareIdentifiers:q,rcompareIdentifiers:(e,t)=>q(t,e)};const{MAX_LENGTH:$,MAX_SAFE_INTEGER:V}=_,{re:W,t:z}=R,{compareIdentifiers:H}=U;class G{constructor(e,t){if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof G){if(e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease)return e;e=e.version}else if("string"!=typeof e)throw new TypeError("Invalid Version: ".concat(e));if(e.length>$)throw new TypeError("version is longer than ".concat($," characters"));O("SemVer",e,t),this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease;const n=e.trim().match(t.loose?W[z.LOOSE]:W[z.FULL]);if(!n)throw new TypeError("Invalid Version: ".concat(e));if(this.raw=e,this.major=+n[1],this.minor=+n[2],this.patch=+n[3],this.major>V||this.major<0)throw new TypeError("Invalid major version");if(this.minor>V||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>V||this.patch<0)throw new TypeError("Invalid patch version");n[4]?this.prerelease=n[4].split(".").map((e=>{if(/^[0-9]+$/.test(e)){const t=+e;if(t>=0&&t<V)return t}return e})):this.prerelease=[],this.build=n[5]?n[5].split("."):[],this.format()}format(){return this.version="".concat(this.major,".").concat(this.minor,".").concat(this.patch),this.prerelease.length&&(this.version+="-".concat(this.prerelease.join("."))),this.version}toString(){return this.version}compare(e){if(O("SemVer.compare",this.version,this.options,e),!(e instanceof G)){if("string"==typeof e&&e===this.version)return 0;e=new G(e,this.options)}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof G||(e=new G(e,this.options)),H(this.major,e.major)||H(this.minor,e.minor)||H(this.patch,e.patch)}comparePre(e){if(e instanceof G||(e=new G(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let t=0;do{const n=this.prerelease[t],r=e.prerelease[t];if(O("prerelease compare",t,n,r),void 0===n&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===n)return-1;if(n!==r)return H(n,r)}while(++t)}compareBuild(e){e instanceof G||(e=new G(e,this.options));let t=0;do{const n=this.build[t],r=e.build[t];if(O("prerelease compare",t,n,r),void 0===n&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===n)return-1;if(n!==r)return H(n,r)}while(++t)}inc(e,t){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t),this.inc("pre",t);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t),this.inc("pre",t);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{let e=this.prerelease.length;for(;--e>=0;)"number"==typeof this.prerelease[e]&&(this.prerelease[e]++,e=-2);-1===e&&this.prerelease.push(0)}t&&(this.prerelease[0]===t?isNaN(this.prerelease[1])&&(this.prerelease=[t,0]):this.prerelease=[t,0]);break;default:throw new Error("invalid increment argument: ".concat(e))}return this.format(),this.raw=this.version,this}}var X=G,J=(e,t,n)=>new X(e,n).compare(new X(t,n)),K=M((function(e,t){function n(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t]}function r(){return"undefined"!=typeof WeakMap?new WeakMap:{add:n,delete:n,get:n,set:n,has:function(e){return!1}}}Object.defineProperty(t,"__esModule",{value:!0});var s=Object.prototype.hasOwnProperty,i=function(e,t){return s.call(e,t)};function a(e,t){for(var n in t)i(t,n)&&(e[n]=t[n]);return e}var o=/^[ \t]*(?:\r\n|\r|\n)/,u=/(?:\r\n|\r|\n)[ \t]*$/,c=/^(?:[\r\n]|$)/,l=/(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/,p=/^[ \t]*[\r\n][ \t\r\n]*$/;function h(e,t,n){var r=0,s=e[0].match(l);s&&(r=s[1].length);var i=new RegExp("(\\r\\n|\\r|\\n).{0,"+r+"}","g");t&&(e=e.slice(1));var a=n.newline,c=n.trimLeadingNewline,p=n.trimTrailingNewline,h="string"==typeof a,d=e.length;return e.map((function(e,t){return e=e.replace(i,"$1"),0===t&&c&&(e=e.replace(o,"")),t===d-1&&p&&(e=e.replace(u,"")),h&&(e=e.replace(/\r\n|\n|\r/g,(function(e){return a}))),e}))}function d(e,t){for(var n="",r=0,s=e.length;r<s;r++)n+=e[r],r<s-1&&(n+=t[r]);return n}function f(e){return i(e,"raw")&&i(e,"length")}var D=function e(t){var n=r(),s=r();return a((function r(i){for(var o=[],u=1;u<arguments.length;u++)o[u-1]=arguments[u];if(f(i)){var l=i,m=(o[0]===r||o[0]===D)&&p.test(l[0])&&c.test(l[1]),g=m?s:n,y=g.get(l);return y||(y=h(l,m,t),g.set(l,y)),0===o.length?y[0]:d(y,m?o.slice(1):o)}return e(a(a({},t),i||{}))}),{string:function(e){return h([e],!1,t)[0]}})}({trimLeadingNewline:!0,trimTrailingNewline:!0});t.outdent=D,t.default=D;try{e.exports=D,Object.defineProperty(D,"__esModule",{value:!0}),D.default=D,D.outdent=D}catch(e){}}));function Y(){const e=c(["\n      Require either '@prettier' or '@format' to be present in the file's first docblock comment\n      in order for it to be formatted.\n    "]);return Y=function(){return e},e}function Q(){const e=c(["\n      Format code starting at a given character offset.\n      The range will extend backwards to the start of the first line containing the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]);return Q=function(){return e},e}function Z(){const e=c(["\n      Format code ending at a given character offset (exclusive).\n      The range will extend forwards to the end of the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]);return Z=function(){return e},e}function ee(){const e=c(["\n      Custom directory that contains prettier plugins in node_modules subdirectory.\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\n      Multiple values are accepted.\n    "]);return ee=function(){return e},e}function te(){const e=c(["\n          Maintain existing\n          (mixed values within one file are normalised by looking at what's used after the first line)\n        "]);return te=function(){return e},e}function ne(){const e=c(["\n      Print (to stderr) where a cursor at the given position would move to after formatting.\n      This option cannot be used with --range-start and --range-end.\n    "]);return ne=function(){return e},e}const{outdent:re}=K,se="Config",ie="Editor",ae="Other",oe="Global",ue="Special",ce={cursorOffset:{since:"1.4.0",category:ue,type:"int",default:-1,range:{start:-1,end:1/0,step:1},description:re(ne()),cliCategory:ie},endOfLine:{since:"1.15.0",category:oe,type:"choice",default:[{since:"1.15.0",value:"auto"},{since:"2.0.0",value:"lf"}],description:"Which end of line characters to apply.",choices:[{value:"lf",description:"Line Feed only (\\n), common on Linux and macOS as well as inside git repos"},{value:"crlf",description:"Carriage Return + Line Feed characters (\\r\\n), common on Windows"},{value:"cr",description:"Carriage Return character only (\\r), used very rarely"},{value:"auto",description:re(te())}]},filepath:{since:"1.4.0",category:ue,type:"path",description:"Specify the input filepath. This will be used to do parser inference.",cliName:"stdin-filepath",cliCategory:ae,cliDescription:"Path to the file to pretend that stdin comes from."},insertPragma:{since:"1.8.0",category:ue,type:"boolean",default:!1,description:"Insert @format pragma into file's first docblock comment.",cliCategory:ae},parser:{since:"0.0.10",category:oe,type:"choice",default:[{since:"0.0.10",value:"babylon"},{since:"1.13.0",value:void 0}],description:"Which parser to use.",exception:e=>"string"==typeof e||"function"==typeof e,choices:[{value:"flow",description:"Flow"},{value:"babel",since:"1.16.0",description:"JavaScript"},{value:"babel-flow",since:"1.16.0",description:"Flow"},{value:"babel-ts",since:"2.0.0",description:"TypeScript"},{value:"typescript",since:"1.4.0",description:"TypeScript"},{value:"espree",since:"2.2.0",description:"JavaScript"},{value:"meriyah",since:"2.2.0",description:"JavaScript"},{value:"css",since:"1.7.1",description:"CSS"},{value:"less",since:"1.7.1",description:"Less"},{value:"scss",since:"1.7.1",description:"SCSS"},{value:"json",since:"1.5.0",description:"JSON"},{value:"json5",since:"1.13.0",description:"JSON5"},{value:"json-stringify",since:"1.13.0",description:"JSON.stringify"},{value:"graphql",since:"1.5.0",description:"GraphQL"},{value:"markdown",since:"1.8.0",description:"Markdown"},{value:"mdx",since:"1.15.0",description:"MDX"},{value:"vue",since:"1.10.0",description:"Vue"},{value:"yaml",since:"1.14.0",description:"YAML"},{value:"glimmer",since:null,description:"Handlebars"},{value:"html",since:"1.15.0",description:"HTML"},{value:"angular",since:"1.15.0",description:"Angular"},{value:"lwc",since:"1.17.0",description:"Lightning Web Components"}]},plugins:{since:"1.10.0",type:"path",array:!0,default:[{value:[]}],category:oe,description:"Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",exception:e=>"string"==typeof e||"object"==typeof e,cliName:"plugin",cliCategory:se},pluginSearchDirs:{since:"1.13.0",type:"path",array:!0,default:[{value:[]}],category:oe,description:re(ee()),exception:e=>"string"==typeof e||"object"==typeof e,cliName:"plugin-search-dir",cliCategory:se},printWidth:{since:"0.0.0",category:oe,type:"int",default:80,description:"The line length where Prettier will try wrap.",range:{start:0,end:1/0,step:1}},rangeEnd:{since:"1.4.0",category:ue,type:"int",default:1/0,range:{start:0,end:1/0,step:1},description:re(Z()),cliCategory:ie},rangeStart:{since:"1.4.0",category:ue,type:"int",default:0,range:{start:0,end:1/0,step:1},description:re(Q()),cliCategory:ie},requirePragma:{since:"1.7.0",category:ue,type:"boolean",default:!1,description:re(Y()),cliCategory:ae},tabWidth:{type:"int",category:oe,default:2,description:"Number of spaces per indentation level.",range:{start:0,end:1/0,step:1}},useTabs:{since:"1.0.0",category:oe,type:"boolean",default:!1,description:"Indent with tabs instead of spaces."},embeddedLanguageFormatting:{since:"2.1.0",category:oe,type:"choice",default:[{since:"2.1.0",value:"auto"}],description:"Control how Prettier formats quoted code embedded in the file.",choices:[{value:"auto",description:"Format embedded code if Prettier can automatically identify it."},{value:"off",description:"Never automatically format embedded code."}]}},le=J,pe=(e,t,n)=>J(e,t,n)<0,he=(e,t,n)=>J(e,t,n)>=0,de="2.2.1",fe=ce;var De={getSupportInfo:function({plugins:e=[],showUnreleased:t=!1,showDeprecated:n=!1,showInternal:r=!1}={}){const s=de.split("-",1)[0],i=e.reduce(((e,t)=>e.concat(t.languages||[])),[]).filter(u),a=(o=Object.assign({},...e.map((({options:e})=>e)),fe),"name",Object.entries(o).map((([e,t])=>Object.assign({name:e},t)))).filter((e=>u(e)&&c(e))).sort(((e,t)=>e.name===t.name?0:e.name<t.name?-1:1)).map((function(e){return r?e:function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,["cliName","cliCategory","cliDescription"])})).map((t=>{t=Object.assign({},t),Array.isArray(t.default)&&(t.default=1===t.default.length?t.default[0].value:t.default.filter(u).sort(((e,t)=>le(t.since,e.since)))[0].value),Array.isArray(t.choices)&&(t.choices=t.choices.filter((e=>u(e)&&c(e))),"parser"===t.name&&function(e,t,n){const r=new Set(e.choices.map((e=>e.value)));for(const s of t)if(s.parsers)for(const t of s.parsers)if(!r.has(t)){r.add(t);const i=n.find((e=>e.parsers&&e.parsers[t]));let a=s.name;i&&i.name&&(a+=" (plugin: ".concat(i.name,")")),e.choices.push({value:t,description:a})}}(t,i,e));const n=e.filter((e=>e.defaultOptions&&void 0!==e.defaultOptions[t.name])).reduce(((e,n)=>(e[n.name]=n.defaultOptions[t.name],e)),{});return Object.assign({},t,{pluginDefaults:n})}));var o;return{languages:i,options:a};function u(e){return t||!("since"in e)||e.since&&he(s,e.since)}function c(e){return n||!("deprecated"in e)||e.deprecated&&pe(s,e.deprecated)}}};const{getSupportInfo:me}=De,ge=/[^\x20-\x7F]/;function ye(e){return(t,n,r)=>{const s=r&&r.backwards;if(!1===n)return!1;const{length:i}=t;let a=n;for(;a>=0&&a<i;){const n=t.charAt(a);if(e instanceof RegExp){if(!e.test(n))return a}else if(!e.includes(n))return a;s?a--:a++}return(-1===a||a===i)&&a}}const Ee=ye(/\s/),Ce=ye(" \t"),Ae=ye(",; \t"),be=ye(/[^\n\r]/);function Fe(e,t){if(!1===t)return!1;if("/"===e.charAt(t)&&"*"===e.charAt(t+1))for(let n=t+2;n<e.length;++n)if("*"===e.charAt(n)&&"/"===e.charAt(n+1))return n+2;return t}function xe(e,t){return!1!==t&&("/"===e.charAt(t)&&"/"===e.charAt(t+1)?be(e,t):t)}function ve(e,t,n){const r=n&&n.backwards;if(!1===t)return!1;const s=e.charAt(t);if(r){if("\r"===e.charAt(t-1)&&"\n"===s)return t-2;if("\n"===s||"\r"===s||"\u2028"===s||"\u2029"===s)return t-1}else{if("\r"===s&&"\n"===e.charAt(t+1))return t+2;if("\n"===s||"\r"===s||"\u2028"===s||"\u2029"===s)return t+1}return t}function Se(e,t,n){const r=Ce(e,(n=n||{}).backwards?t-1:t,n);return r!==ve(e,r,n)}function Te(e,t){let n=null,r=t;for(;r!==n;)n=r,r=Ae(e,r),r=Fe(e,r),r=Ce(e,r);return r=xe(e,r),r=ve(e,r),!1!==r&&Se(e,r)}function we(e,t){let n=null,r=t;for(;r!==n;)n=r,r=Ce(e,r),r=Fe(e,r),r=xe(e,r),r=ve(e,r);return r}function Be(e,t,n){return we(e,n(t))}function Pe(e,t,n){let r=0;for(let s=n=n||0;s<e.length;++s)"\t"===e[s]?r=r+t-r%t:r++;return r}function Ne(e,t){const n=e.slice(1,-1),r={quote:'"',regex:/"/g},s={quote:"'",regex:/'/g},i="'"===t?s:r,a=i===s?r:s;let o=i.quote;return(n.includes(i.quote)||n.includes(a.quote))&&(o=(n.match(i.regex)||[]).length>(n.match(a.regex)||[]).length?a.quote:i.quote),o}function ke(e,t,n){const r='"'===t?"'":'"',s=e.replace(/\\([\S\s])|(["'])/g,((e,s,i)=>s===r?s:i===t?"\\"+i:i||(n&&/^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(s)?s:"\\"+s)));return t+s+t}function Ie(e,t){(e.comments||(e.comments=[])).push(t),t.printed=!1,"JSXText"===e.type&&(t.printed=!0)}var Le={inferParserByLanguage:function(e,t){const{languages:n}=me({plugins:t.plugins}),r=n.find((({name:t})=>t.toLowerCase()===e))||n.find((({aliases:t})=>Array.isArray(t)&&t.includes(e)))||n.find((({extensions:t})=>Array.isArray(t)&&t.includes(".".concat(e))));return r&&r.parsers[0]},replaceEndOfLineWith:function(e,t){const n=[];for(const r of e.split("\n"))0!==n.length&&n.push(t),n.push(r);return n},getStringWidth:function(e){return e?ge.test(e)?a(e):e.length:0},getMaxContinuousCount:function(e,t){const n=e.match(new RegExp("(".concat(u(t),")+"),"g"));return null===n?0:n.reduce(((e,n)=>Math.max(e,n.length/t.length)),0)},getMinNotPresentContinuousCount:function(e,t){const n=e.match(new RegExp("(".concat(u(t),")+"),"g"));if(null===n)return 0;const r=new Map;let s=0;for(const e of n){const n=e.length/t.length;r.set(n,!0),n>s&&(s=n)}for(let e=1;e<s;e++)if(!r.get(e))return e;return s+1},getPenultimate:e=>e[e.length-2],getLast:e=>e[e.length-1],getNextNonSpaceNonCommentCharacterIndexWithStartIndex:we,getNextNonSpaceNonCommentCharacterIndex:Be,getNextNonSpaceNonCommentCharacter:function(e,t,n){return e.charAt(Be(e,t,n))},skip:ye,skipWhitespace:Ee,skipSpaces:Ce,skipToLineEnd:Ae,skipEverythingButNewLine:be,skipInlineComment:Fe,skipTrailingComment:xe,skipNewline:ve,isNextLineEmptyAfterIndex:Te,isNextLineEmpty:function(e,t,n){return Te(e,n(t))},isPreviousLineEmpty:function(e,t,n){let r=n(t)-1;return r=Ce(e,r,{backwards:!0}),r=ve(e,r,{backwards:!0}),r=Ce(e,r,{backwards:!0}),r!==ve(e,r,{backwards:!0})},hasNewline:Se,hasNewlineInRange:function(e,t,n){for(let r=t;r<n;++r)if("\n"===e.charAt(r))return!0;return!1},hasSpaces:function(e,t,n){return Ce(e,(n=n||{}).backwards?t-1:t,n)!==t},getAlignmentSize:Pe,getIndentSize:function(e,t){const n=e.lastIndexOf("\n");return-1===n?0:Pe(e.slice(n+1).match(/^[\t ]*/)[0],t)},getPreferredQuote:Ne,printString:function(e,t,n){const r=e.slice(1,-1),s=!r.includes('"')&&!r.includes("'"),i="json"===t.parser?'"':t.__isInHtmlAttribute?"'":Ne(e,t.singleQuote?"'":'"');return n?s?i+r+i:e:ke(r,i,!("css"===t.parser||"less"===t.parser||"scss"===t.parser||t.embeddedInHtml))},printNumber:function(e){return e.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/,"$1$2$3").replace(/^([+-]?[\d.]+)e[+-]?0+$/,"$1").replace(/^([+-])?\./,"$10.").replace(/(\.\d+?)0+(?=e|$)/,"$1").replace(/\.(?=e|$)/,"")},isNodeIgnoreComment:function(e){return"prettier-ignore"===e.value.trim()},makeString:ke,addLeadingComment:function(e,t){t.leading=!0,t.trailing=!1,Ie(e,t)},addDanglingComment:function(e,t,n){t.leading=!1,t.trailing=!1,n&&(t.marker=n),Ie(e,t)},addTrailingComment:function(e,t){t.leading=!1,t.trailing=!0,Ie(e,t)},isFrontMatterNode:function(e){return e&&"front-matter"===e.type},getShebang:function(e){if(!e.startsWith("#!"))return"";const t=e.indexOf("\n");return-1===t?e:e.slice(0,t)}},Oe=Object.freeze({__proto__:null,default:{EOL:"\n",platform:()=>"browser",cpus:()=>[{model:"Prettier"}]}});const _e=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");const t=e.match(/(?:\r?\n)/g)||[];if(0===t.length)return;const n=t.filter((e=>"\r\n"===e)).length;return n>t.length-n?"\r\n":"\n"};var Me=_e;Me.graceful=e=>"string"==typeof e&&_e(e)||"\n";var Re=function(e){return e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}(Oe),je=M((function(e,t){function n(){const e=Re;return n=function(){return e},e}function r(){const e=(t=Me)&&t.__esModule?t:{default:t};var t;return r=function(){return e},e}Object.defineProperty(t,"__esModule",{value:!0}),t.extract=function(e){const t=e.match(a);return t?t[0].trimLeft():""},t.strip=function(e){const t=e.match(a);return t&&t[0]?e.substring(t[0].length):e},t.parse=function(e){return d(e).pragmas},t.parseWithComments=d,t.print=function({comments:e="",pragmas:t={}}){const s=(0,r().default)(e)||n().EOL,i=Object.keys(t),a=i.map((e=>f(e,t[e]))).reduce(((e,t)=>e.concat(t)),[]).map((e=>" * "+e+s)).join("");if(!e){if(0===i.length)return"";if(1===i.length&&!Array.isArray(t[i[0]])){const e=t[i[0]];return"".concat("/**"," ").concat(f(i[0],e)[0]).concat(" */")}}const o=e.split(s).map((e=>"".concat(" *"," ").concat(e))).join(s)+s;return"/**"+s+(e?o:"")+(e&&i.length?" *"+s:"")+a+" */"};const s=/\*\/$/,i=/^\/\*\*/,a=/^\s*(\/\*\*?(.|\r?\n)*?\*\/)/,o=/(^|\s+)\/\/([^\r\n]*)/g,u=/^(\r?\n)+/,c=/(?:^|\r?\n) *(@[^\r\n]*?) *\r?\n *(?![^@\r\n]*\/\/[^]*)([^@\r\n\s][^@\r\n]+?) *\r?\n/g,l=/(?:^|\r?\n) *@(\S+) *([^\r\n]*)/g,p=/(\r?\n|^) *\* ?/g,h=[];function d(e){const t=(0,r().default)(e)||n().EOL;e=e.replace(i,"").replace(s,"").replace(p,"$1");let a="";for(;a!==e;)a=e,e=e.replace(c,"".concat(t,"$1 $2").concat(t));e=e.replace(u,"").trimRight();const d=Object.create(null),f=e.replace(l,"").replace(u,"").trimRight();let D;for(;D=l.exec(e);){const e=D[2].replace(o,"");"string"==typeof d[D[1]]||Array.isArray(d[D[1]])?d[D[1]]=h.concat(d[D[1]],e):d[D[1]]=e}return{comments:f,pragmas:d}}function f(e,t){return h.concat(t).map((t=>"@".concat(e," ").concat(t).trim()))}})),qe={guessEndOfLine:function(e){const t=e.indexOf("\r");return t>=0?"\n"===e.charAt(t+1)?"crlf":"cr":"lf"},convertEndOfLineToChars:function(e){switch(e){case"cr":return"\r";case"crlf":return"\r\n";default:return"\n"}},countEndOfLineChars:function(e,t){let n;if("\n"===t)n=/\n/g;else if("\r"===t)n=/\r/g;else{if("\r\n"!==t)throw new Error('Unexpected "eol" '.concat(JSON.stringify(t),"."));n=/\r\n/g}const r=e.match(n);return r?r.length:0},normalizeEndOfLine:function(e){return e.replace(/\r\n?/g,"\n")}};const{parseWithComments:Ue,strip:$e,extract:Ve,print:We}=je,{getShebang:ze}=Le,{normalizeEndOfLine:He}=qe;function Ge(e){const t=ze(e);t&&(e=e.slice(t.length+1));const n=Ve(e),{pragmas:r,comments:s}=Ue(n);return{shebang:t,text:e,pragmas:r,comments:s}}var Xe={hasPragma:function(e){const t=Object.keys(Ge(e).pragmas);return t.includes("prettier")||t.includes("format")},insertPragma:function(e){const{shebang:t,text:n,pragmas:r,comments:s}=Ge(e),i=$e(n),a=We({pragmas:Object.assign({format:""},r),comments:s.trimStart()});return(t?"".concat(t,"\n"):"")+He(a)+(i.startsWith("\n")?"\n":"\n\n")+i}};function Je(e,t){const{ignoreDecorators:n}=t||{};if(!n){const t=e.declaration&&e.declaration.decorators||e.decorators;if(t&&t.length>0)return Je(t[0])}return e.range?e.range[0]:e.start}function Ke(e){const t=e.range?e.range[1]:e.end;return e.typeAnnotation?Math.max(t,Ke(e.typeAnnotation)):t}function Ye(e,t){return Je(e)===Je(t)}var Qe={locStart:Je,locEnd:Ke,composeLoc:function(e,t=e){const n=Je(e);return[n,"number"==typeof t?n+t:Ke(t)]},hasSameLocStart:Ye,hasSameLoc:function(e,t){return Ye(e,t)&&function(e,t){return Ke(e)===Ke(t)}(e,t)}},Ze=M((function(e){!function(){function t(e){if(null==e)return!1;switch(e.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return!0}return!1}function n(e){switch(e.type){case"IfStatement":return null!=e.alternate?e.alternate:e.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return e.body}return null}e.exports={isExpression:function(e){if(null==e)return!1;switch(e.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return!0}return!1},isStatement:t,isIterationStatement:function(e){if(null==e)return!1;switch(e.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return!0}return!1},isSourceElement:function(e){return t(e)||null!=e&&"FunctionDeclaration"===e.type},isProblematicIfStatement:function(e){var t;if("IfStatement"!==e.type)return!1;if(null==e.alternate)return!1;t=e.consequent;do{if("IfStatement"===t.type&&null==t.alternate)return!0;t=n(t)}while(t);return!1},trailingStatement:n}}()})),et=M((function(e){!function(){var t,n,r,s,i,a;function o(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(Math.floor((e-65536)/1024)+55296)+String.fromCharCode((e-65536)%1024+56320)}for(n={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,NonAsciiIdentifierPart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/},t={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/},r=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],s=new Array(128),a=0;a<128;++a)s[a]=a>=97&&a<=122||a>=65&&a<=90||36===a||95===a;for(i=new Array(128),a=0;a<128;++a)i[a]=a>=97&&a<=122||a>=65&&a<=90||a>=48&&a<=57||36===a||95===a;e.exports={isDecimalDigit:function(e){return 48<=e&&e<=57},isHexDigit:function(e){return 48<=e&&e<=57||97<=e&&e<=102||65<=e&&e<=70},isOctalDigit:function(e){return e>=48&&e<=55},isWhiteSpace:function(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&r.indexOf(e)>=0},isLineTerminator:function(e){return 10===e||13===e||8232===e||8233===e},isIdentifierStartES5:function(e){return e<128?s[e]:n.NonAsciiIdentifierStart.test(o(e))},isIdentifierPartES5:function(e){return e<128?i[e]:n.NonAsciiIdentifierPart.test(o(e))},isIdentifierStartES6:function(e){return e<128?s[e]:t.NonAsciiIdentifierStart.test(o(e))},isIdentifierPartES6:function(e){return e<128?i[e]:t.NonAsciiIdentifierPart.test(o(e))}}}()})),tt=M((function(e){!function(){var t=et;function n(e,t){return!(!t&&"yield"===e)&&r(e,t)}function r(e,t){if(t&&function(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return!0;default:return!1}}(e))return!0;switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}}function s(e,t){return"null"===e||"true"===e||"false"===e||n(e,t)}function i(e,t){return"null"===e||"true"===e||"false"===e||r(e,t)}function a(e){var n,r,s;if(0===e.length)return!1;if(s=e.charCodeAt(0),!t.isIdentifierStartES5(s))return!1;for(n=1,r=e.length;n<r;++n)if(s=e.charCodeAt(n),!t.isIdentifierPartES5(s))return!1;return!0}function o(e){var n,r,s,i,a;if(0===e.length)return!1;for(a=t.isIdentifierStartES6,n=0,r=e.length;n<r;++n){if(55296<=(s=e.charCodeAt(n))&&s<=56319){if(++n>=r)return!1;if(!(56320<=(i=e.charCodeAt(n))&&i<=57343))return!1;s=1024*(s-55296)+(i-56320)+65536}if(!a(s))return!1;a=t.isIdentifierPartES6}return!0}e.exports={isKeywordES5:n,isKeywordES6:r,isReservedWordES5:s,isReservedWordES6:i,isRestrictedWord:function(e){return"eval"===e||"arguments"===e},isIdentifierNameES5:a,isIdentifierNameES6:o,isIdentifierES5:function(e,t){return a(e)&&!s(e,t)},isIdentifierES6:function(e,t){return o(e)&&!i(e,t)}}}()}));const nt=M((function(e,t){t.ast=Ze,t.code=et,t.keyword=tt})).keyword.isIdentifierNameES5,{getLast:rt,hasNewline:st,hasNewlineInRange:it,skipWhitespace:at}=Le,{locStart:ot,locEnd:ut,hasSameLocStart:ct}=Qe,lt="(?:(?=.)\\s)",pt=new RegExp("^".concat(lt,"*:")),ht=new RegExp("^".concat(lt,"*::"));function dt(e,t){if(!e||"object"!=typeof e)return!1;if(Array.isArray(e))return e.some((e=>dt(e,t)));const n=t(e);return"boolean"==typeof n?n:Object.keys(e).some((n=>dt(e[n],t)))}function ft(e){return"AssignmentExpression"===e.type||"BinaryExpression"===e.type||"LogicalExpression"===e.type||"NGPipeExpression"===e.type||"ConditionalExpression"===e.type||"CallExpression"===e.type||"OptionalCallExpression"===e.type||"MemberExpression"===e.type||"OptionalMemberExpression"===e.type||"SequenceExpression"===e.type||"TaggedTemplateExpression"===e.type||"BindExpression"===e.type||"UpdateExpression"===e.type&&!e.prefix||"TSAsExpression"===e.type||"TSNonNullExpression"===e.type}function Dt(e){return"Block"===e.type||"CommentBlock"===e.type||"MultiLine"===e.type}const mt=new Set(["ExportDefaultDeclaration","ExportDefaultSpecifier","DeclareExportDeclaration","ExportNamedDeclaration","ExportAllDeclaration"]);function gt(e){return e&&mt.has(e.type)}function yt(e){return"BooleanLiteral"===e.type||"DirectiveLiteral"===e.type||"Literal"===e.type||"NullLiteral"===e.type||"NumericLiteral"===e.type||"BigIntLiteral"===e.type||"DecimalLiteral"===e.type||"RegExpLiteral"===e.type||"StringLiteral"===e.type||"TemplateLiteral"===e.type||"TSTypeLiteral"===e.type||"JSXText"===e.type}function Et(e){return"NumericLiteral"===e.type||"Literal"===e.type&&"number"==typeof e.value}function Ct(e){return"StringLiteral"===e.type||"Literal"===e.type&&"string"==typeof e.value}function At(e){return"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type}function bt(e){return!("CallExpression"!==e.type&&"OptionalCallExpression"!==e.type||"Identifier"!==e.callee.type||"async"!==e.callee.name&&"inject"!==e.callee.name&&"fakeAsync"!==e.callee.name)}function Ft(e){return"JSXElement"===e.type||"JSXFragment"===e.type}function xt(e){return"get"===e.kind||"set"===e.kind}function vt(e){return xt(e)||ct(e,e.value)}const St=new Set(["BinaryExpression","LogicalExpression","NGPipeExpression"]),Tt=new Set(["AnyTypeAnnotation","TSAnyKeyword","NullLiteralTypeAnnotation","TSNullKeyword","ThisTypeAnnotation","TSThisType","NumberTypeAnnotation","TSNumberKeyword","VoidTypeAnnotation","TSVoidKeyword","BooleanTypeAnnotation","TSBooleanKeyword","BigIntTypeAnnotation","TSBigIntKeyword","SymbolTypeAnnotation","TSSymbolKeyword","StringTypeAnnotation","TSStringKeyword","BooleanLiteralTypeAnnotation","StringLiteralTypeAnnotation","BigIntLiteralTypeAnnotation","NumberLiteralTypeAnnotation","TSLiteralType","TSTemplateLiteralType","EmptyTypeAnnotation","MixedTypeAnnotation","TSNeverKeyword","TSObjectKeyword","TSUndefinedKeyword","TSUnknownKeyword"]),wt=/^(skip|[fx]?(it|describe|test))$/;function Bt(e){return"CallExpression"===e.type||"OptionalCallExpression"===e.type}const Pt=new RegExp("([ \n\r\t]+)"),Nt=new RegExp("[^ \n\r\t]");function kt(e){return yt(e)&&(Nt.test(_t(e))||!/\n/.test(_t(e)))}function It(e,t){return Ft(t)?Ht(t):t.comments&&t.comments.some((t=>t.leading&&st(e,ut(t))))}function Lt(e){return/^(\d+|\d+\.\d+)$/.test(e)}function Ot(e){return e.quasis.some((e=>e.value.raw.includes("\n")))}function _t(e){return e.extra?e.extra.raw:e.raw}const Mt={"==":!0,"!=":!0,"===":!0,"!==":!0},Rt={"*":!0,"/":!0,"%":!0},jt={">>":!0,">>>":!0,"<<":!0},qt={};function Ut(e){return qt[e]}[["|>"],["??"],["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"],["**"]].forEach(((e,t)=>{e.forEach((e=>{qt[e]=t}))}));const $t=new WeakMap;function Vt(e){if($t.has(e))return $t.get(e);const t=[];return e.this&&t.push(e.this),Array.isArray(e.parameters)?t.push(...e.parameters):Array.isArray(e.params)&&t.push(...e.params),e.rest&&t.push(e.rest),$t.set(e,t),t}const Wt=new WeakMap;function zt(e){return"prettier-ignore"===e.value.trim()}function Ht(e){return e&&(e.comments&&e.comments.length>0&&e.comments.some((e=>zt(e)&&!e.unignore))||e.prettierIgnore)}function Gt(e){return Ht(e.getValue())}var Xt={classChildNeedsASIProtection:function(e){if(e){if(e.static||e.accessibility)return!1;if(!e.computed){const t=e.key&&e.key.name;if("in"===t||"instanceof"===t)return!0}switch(e.type){case"ClassProperty":case"FieldDefinition":case"TSAbstractClassProperty":return e.computed;case"MethodDefinition":case"TSAbstractMethodDefinition":case"ClassMethod":case"ClassPrivateMethod":{const t=e.value?e.value.async:e.async,n=e.value?e.value.generator:e.generator;return!(t||"get"===e.kind||"set"===e.kind||!e.computed&&!n)}case"TSIndexSignature":return!0;default:return!1}}},classPropMayCauseASIProblems:function(e){const t=e.getNode();if("ClassProperty"!==t.type&&"FieldDefinition"!==t.type)return!1;const n=t.key&&t.key.name;return!("static"!==n&&"get"!==n&&"set"!==n||t.value||t.typeAnnotation)||void 0},getFunctionParameters:Vt,iterateFunctionParametersPath:function(e,t){const n=e.getValue();let r=0;const s=e=>t(e,r++);n.this&&e.call(s,"this"),Array.isArray(n.parameters)?e.each(s,"parameters"):Array.isArray(n.params)&&e.each(s,"params"),n.rest&&e.call(s,"rest")},getCallArguments:function(e){if(Wt.has(e))return Wt.get(e);const t="ImportExpression"===e.type?[e.source]:e.arguments;return Wt.set(e,t),t},iterateCallArgumentsPath:function(e,t){"ImportExpression"===e.getValue().type?e.call((e=>t(e,0)),"source"):e.each(t,"arguments")},hasRestParameter:function(e){if(e.rest)return!0;const t=Vt(e);return t.length>0&&"RestElement"===rt(t).type},getLeftSidePathName:function(e,t){if(t.expressions)return["expressions",0];if(t.left)return["left"];if(t.test)return["test"];if(t.object)return["object"];if(t.callee)return["callee"];if(t.tag)return["tag"];if(t.argument)return["argument"];if(t.expression)return["expression"];throw new Error("Unexpected node has no left side.")},getParentExportDeclaration:function(e){const t=e.getParentNode();return"declaration"===e.getName()&&gt(t)?t:null},getTypeScriptMappedTypeModifier:function(e,t){return"+"===e?"+"+t:"-"===e?"-"+t:t},hasDanglingComments:function(e){return e.comments&&e.comments.some((e=>!e.leading&&!e.trailing))},hasFlowAnnotationComment:function(e){return e&&Dt(e[0])&&ht.test(e[0].value)},hasFlowShorthandAnnotationComment:function(e){return e.extra&&e.extra.parenthesized&&e.trailingComments&&Dt(e.trailingComments[0])&&pt.test(e.trailingComments[0].value)},hasLeadingComment:function(e){return e.comments&&e.comments.some((e=>e.leading))},hasLeadingOwnLineComment:It,hasNakedLeftSide:ft,hasNewlineBetweenOrAfterDecorators:function(e,t){return it(t.originalText,ot(e.decorators[0]),ut(rt(e.decorators)))||st(t.originalText,ut(rt(e.decorators)))},hasNgSideEffect:function(e){return dt(e.getValue(),(e=>{switch(e.type){case void 0:return!1;case"CallExpression":case"OptionalCallExpression":case"AssignmentExpression":return!0}}))},hasNode:dt,hasPrettierIgnore:function(e){return Gt(e)||function(e){const t=e.getValue(),n=e.getParentNode();if(!(n&&t&&Ft(t)&&Ft(n)))return!1;let r=null;for(let e=n.children.indexOf(t);e>0;e--){const t=n.children[e-1];if("JSXText"!==t.type||kt(t)){r=t;break}}return r&&"JSXExpressionContainer"===r.type&&"JSXEmptyExpression"===r.expression.type&&r.expression.comments&&r.expression.comments.some((e=>zt(e)))}(e)},hasTrailingComment:function(e){return e.comments&&e.comments.some((e=>e.trailing))},hasTrailingLineComment:function(e){return e.comments&&e.comments.some((e=>e.trailing&&!Dt(e)))},hasIgnoreComment:Gt,hasNodeIgnoreComment:Ht,identity:function(e){return e},isBinaryish:function(e){return St.has(e.type)},isBlockComment:Dt,isLineComment:function(e){return"Line"===e.type||"CommentLine"===e.type||"SingleLine"===e.type||"HashbangComment"===e.type||"HTMLOpen"===e.type||"HTMLClose"===e.type},isPrettierIgnoreComment:zt,isCallOrOptionalCallExpression:Bt,isEmptyJSXElement:function(e){if(0===e.children.length)return!0;if(e.children.length>1)return!1;const t=e.children[0];return yt(t)&&!kt(t)},isExportDeclaration:gt,isFlowAnnotationComment:function(e,t){const n=ot(t),r=at(e,ut(t));return!1!==r&&"/*"===e.slice(n,n+2)&&"*/"===e.slice(r,r+2)},isFunctionCompositionArgs:function(e){if(e.length<=1)return!1;let t=0;for(const n of e)if(At(n)){if(t+=1,t>1)return!0}else if(Bt(n))for(const e of n.arguments)if(At(e))return!0;return!1},isFunctionNotation:vt,isFunctionOrArrowExpression:At,isGetterOrSetter:xt,isJestEachTemplateLiteral:function(e,t){const n=/^[fx]?(describe|it|test)$/;return"TaggedTemplateExpression"===t.type&&t.quasi===e&&"MemberExpression"===t.tag.type&&"Identifier"===t.tag.property.type&&"each"===t.tag.property.name&&("Identifier"===t.tag.object.type&&n.test(t.tag.object.name)||"MemberExpression"===t.tag.object.type&&"Identifier"===t.tag.object.property.type&&("only"===t.tag.object.property.name||"skip"===t.tag.object.property.name)&&"Identifier"===t.tag.object.object.type&&n.test(t.tag.object.object.name))},isJSXNode:Ft,isJSXWhitespaceExpression:function(e){return"JSXExpressionContainer"===e.type&&yt(e.expression)&&" "===e.expression.value&&!e.expression.comments},isLastStatement:function(e){const t=e.getParentNode();if(!t)return!0;const n=e.getValue(),r=(t.body||t.consequent).filter((e=>"EmptyStatement"!==e.type));return r[r.length-1]===n},isLiteral:yt,isLongCurriedCallExpression:function(e){const t=e.getValue(),n=e.getParentNode();return Bt(t)&&Bt(n)&&n.callee===t&&t.arguments.length>n.arguments.length&&n.arguments.length>0},isSimpleCallArgument:function e(t,n){if(n>=2)return!1;const r=t=>e(t,n+1),s="Literal"===t.type&&"regex"in t&&t.regex.pattern||"RegExpLiteral"===t.type&&t.pattern;return!(s&&s.length>5)&&("Literal"===t.type||"BigIntLiteral"===t.type||"DecimalLiteral"===t.type||"BooleanLiteral"===t.type||"NullLiteral"===t.type||"NumericLiteral"===t.type||"RegExpLiteral"===t.type||"StringLiteral"===t.type||"Identifier"===t.type||"ThisExpression"===t.type||"Super"===t.type||"PrivateName"===t.type||"ArgumentPlaceholder"===t.type||"Import"===t.type||("TemplateLiteral"===t.type?t.expressions.every(r):"ObjectExpression"===t.type?t.properties.every((e=>!e.computed&&(e.shorthand||e.value&&r(e.value)))):"ArrayExpression"===t.type?t.elements.every((e=>null===e||r(e))):"ImportExpression"===t.type?r(t.source):"CallExpression"===t.type||"OptionalCallExpression"===t.type||"NewExpression"===t.type?e(t.callee,n)&&t.arguments.every(r):"MemberExpression"===t.type||"OptionalMemberExpression"===t.type?e(t.object,n)&&e(t.property,n):"UnaryExpression"!==t.type||"!"!==t.operator&&"-"!==t.operator?"TSNonNullExpression"===t.type&&e(t.expression,n):e(t.argument,n)))},isMeaningfulJSXText:kt,isMemberExpressionChain:function e(t){return("MemberExpression"===t.type||"OptionalMemberExpression"===t.type)&&("Identifier"===t.object.type||e(t.object))},isMemberish:function(e){return"MemberExpression"===e.type||"OptionalMemberExpression"===e.type||"BindExpression"===e.type&&Boolean(e.object)},isNgForOf:function(e,t,n){return"NGMicrosyntaxKeyedExpression"===e.type&&"of"===e.key.name&&1===t&&"NGMicrosyntaxLet"===n.body[0].type&&null===n.body[0].value},isNumericLiteral:Et,isObjectType:function(e){return"ObjectTypeAnnotation"===e.type||"TSTypeLiteral"===e.type},isObjectTypePropertyAFunction:function(e){return!("ObjectTypeProperty"!==e.type&&"ObjectTypeInternalSlot"!==e.type||"FunctionTypeAnnotation"!==e.value.type||e.static||vt(e))},isSimpleType:function(e){return!(!e||("GenericTypeAnnotation"!==e.type&&"TSTypeReference"!==e.type||e.typeParameters)&&!Tt.has(e.type))},isSimpleNumber:Lt,isSimpleTemplateLiteral:function(e){let t="expressions";"TSTemplateLiteralType"===e.type&&(t="types");const n=e[t];return 0!==n.length&&n.every((e=>{if(e.comments)return!1;if("Identifier"===e.type||"ThisExpression"===e.type)return!0;if("MemberExpression"===e.type||"OptionalMemberExpression"===e.type){let t=e;for(;"MemberExpression"===t.type||"OptionalMemberExpression"===t.type;){if("Identifier"!==t.property.type&&"Literal"!==t.property.type&&"StringLiteral"!==t.property.type&&"NumericLiteral"!==t.property.type)return!1;if(t=t.object,t.comments)return!1}return"Identifier"===t.type||"ThisExpression"===t.type}return!1}))},isStringLiteral:Ct,isStringPropSafeToUnquote:function(e,t){return"json"!==t.parser&&Ct(e.key)&&_t(e.key).slice(1,-1)===e.key.value&&(nt(e.key.value)&&!(("typescript"===t.parser||"babel-ts"===t.parser)&&"ClassProperty"===e.type)||Lt(e.key.value)&&String(Number(e.key.value))===e.key.value&&("babel"===t.parser||"espree"===t.parser||"meriyah"===t.parser))},isTemplateOnItsOwnLine:function(e,t){return("TemplateLiteral"===e.type&&Ot(e)||"TaggedTemplateExpression"===e.type&&Ot(e.quasi))&&!st(t,ot(e),{backwards:!0})},isTestCall:function e(t,n){if("CallExpression"!==t.type)return!1;if(1===t.arguments.length){if(bt(t)&&n&&e(n))return At(t.arguments[0]);if("Identifier"===(r=t).callee.type&&/^(before|after)(Each|All)$/.test(r.callee.name)&&1===r.arguments.length)return bt(t.arguments[0])}else if((2===t.arguments.length||3===t.arguments.length)&&("Identifier"===t.callee.type&&wt.test(t.callee.name)||function(e){return("MemberExpression"===e.callee.type||"OptionalMemberExpression"===e.callee.type)&&"Identifier"===e.callee.object.type&&"Identifier"===e.callee.property.type&&wt.test(e.callee.object.name)&&("only"===e.callee.property.name||"skip"===e.callee.property.name)}(t))&&(function(e){return"TemplateLiteral"===e.type}(t.arguments[0])||Ct(t.arguments[0])))return!(t.arguments[2]&&!Et(t.arguments[2]))&&((2===t.arguments.length?At(t.arguments[1]):function(e){return"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type&&"BlockStatement"===e.body.type}(t.arguments[1])&&Vt(t.arguments[1]).length<=1)||bt(t.arguments[1]));var r;return!1},isTheOnlyJSXElementInMarkdown:function(e,t){if("markdown"!==e.parentParser&&"mdx"!==e.parentParser)return!1;const n=t.getNode();if(!n.expression||!Ft(n.expression))return!1;const r=t.getParentNode();return"Program"===r.type&&1===r.body.length},isTSXFile:function(e){return e.filepath&&/\.tsx$/i.test(e.filepath)},isTypeAnnotationAFunction:function(e){return!("TypeAnnotation"!==e.type&&"TSTypeAnnotation"!==e.type||"FunctionTypeAnnotation"!==e.typeAnnotation.type||e.static||ct(e,e.typeAnnotation))},matchJsxWhitespaceRegex:Pt,needsHardlineAfterDanglingComment:function(e){if(!e.comments)return!1;const t=rt(e.comments.filter((e=>!e.leading&&!e.trailing)));return t&&!Dt(t)},rawText:_t,returnArgumentHasLeadingComment:function(e,t){if(It(e.originalText,t))return!0;if(ft(t)){let r,s=t;for(;r=(n=s).expressions?n.expressions[0]:n.left||n.test||n.callee||n.object||n.tag||n.argument||n.expression;)if(s=r,It(e.originalText,s))return!0}var n;return!1},shouldPrintComma:function(e,t="es5"){return"es5"===e.trailingComma&&"es5"===t||"all"===e.trailingComma&&("all"===t||"es5"===t)},isBitwiseOperator:function(e){return!!jt[e]||"|"===e||"^"===e||"&"===e},shouldFlatten:function(e,t){return!(Ut(t)!==Ut(e)||"**"===e||Mt[e]&&Mt[t]||"%"===t&&Rt[e]||"%"===e&&Rt[t]||t!==e&&Rt[t]&&Rt[e]||jt[e]&&jt[t])},startsWithNoLookaheadToken:function e(t,n){switch((t=function(e){for(;e.left;)e=e.left;return e}(t)).type){case"FunctionExpression":case"ClassExpression":case"DoExpression":return n;case"ObjectExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return e(t.object,n);case"TaggedTemplateExpression":return"FunctionExpression"!==t.tag.type&&e(t.tag,n);case"CallExpression":case"OptionalCallExpression":return"FunctionExpression"!==t.callee.type&&e(t.callee,n);case"ConditionalExpression":return e(t.test,n);case"UpdateExpression":return!t.prefix&&e(t.argument,n);case"BindExpression":return t.object&&e(t.object,n);case"SequenceExpression":return e(t.expressions[0],n);case"TSAsExpression":return e(t.expression,n);default:return!1}},getPrecedence:Ut};const{getLast:Jt,hasNewline:Kt,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:Yt,getNextNonSpaceNonCommentCharacter:Qt,hasNewlineInRange:Zt,addLeadingComment:en,addTrailingComment:tn,addDanglingComment:nn,getNextNonSpaceNonCommentCharacterIndex:rn}=Le,{isBlockComment:sn,getFunctionParameters:an,isPrettierIgnoreComment:on,isJSXNode:un,hasFlowShorthandAnnotationComment:cn,hasFlowAnnotationComment:ln,hasIgnoreComment:pn}=Xt,{locStart:hn,locEnd:dn}=Qe;function fn(e,t){const n=(e.body||e.properties).find((({type:e})=>"EmptyStatement"!==e));n?en(n,t):nn(e,t)}function Dn(e,t){"BlockStatement"===e.type?fn(e,t):en(e,t)}function mn(e,t){const{precedingNode:n,enclosingNode:r,followingNode:s}=e;return!(!r||"IfStatement"!==r.type||!s||(")"===Qt(t,e,dn)?(tn(n,e),0):n===r.consequent&&s===r.alternate?("BlockStatement"===n.type?tn(n,e):nn(r,e),0):"BlockStatement"===s.type?(fn(s,e),0):"IfStatement"===s.type?(Dn(s.consequent,e),0):r.consequent!==s||(en(s,e),0)))}function gn(e,t){const{precedingNode:n,enclosingNode:r,followingNode:s}=e;return!(!r||"WhileStatement"!==r.type||!s||(")"===Qt(t,e,dn)?(tn(n,e),0):"BlockStatement"===s.type?(fn(s,e),0):r.body!==s||(en(s,e),0)))}function yn(e){const{precedingNode:t,enclosingNode:n,followingNode:r}=e;return!(!n||"TryStatement"!==n.type&&"CatchClause"!==n.type||!r||("CatchClause"===n.type&&t?(tn(t,e),0):"BlockStatement"===r.type?(fn(r,e),0):"TryStatement"===r.type?(Dn(r.finalizer,e),0):"CatchClause"!==r.type||(Dn(r.body,e),0)))}function En(e){const{precedingNode:t,enclosingNode:n,followingNode:r}=e;if(n&&("ClassDeclaration"===n.type||"ClassExpression"===n.type||"DeclareClass"===n.type||"DeclareInterface"===n.type||"InterfaceDeclaration"===n.type||"TSInterfaceDeclaration"===n.type)){if(n.decorators&&n.decorators.length>0&&(!r||"Decorator"!==r.type))return tn(n.decorators[n.decorators.length-1],e),!0;if(n.body&&r===n.body)return fn(n.body,e),!0;if(r)for(const s of["implements","extends","mixins"])if(n[s]&&r===n[s][0])return!t||t!==n.id&&t!==n.typeParameters&&t!==n.superClass?nn(n,e,s):tn(t,e),!0}return!1}function Cn(e,t){const{precedingNode:n,enclosingNode:r}=e;return(r&&n&&("Property"===r.type||"TSDeclareMethod"===r.type||"TSAbstractMethodDefinition"===r.type)&&"Identifier"===n.type&&r.key===n&&":"!==Qt(t,n,dn)||!(!n||!r||"Decorator"!==n.type||"ClassMethod"!==r.type&&"ClassProperty"!==r.type&&"FieldDefinition"!==r.type&&"TSAbstractClassProperty"!==r.type&&"TSAbstractMethodDefinition"!==r.type&&"TSDeclareMethod"!==r.type&&"MethodDefinition"!==r.type))&&(tn(n,e),!0)}function An(e,t){const{precedingNode:n,enclosingNode:r,followingNode:s}=e;if(n&&"FunctionTypeParam"===n.type&&r&&"FunctionTypeAnnotation"===r.type&&s&&"FunctionTypeParam"!==s.type)return tn(n,e),!0;if(n&&("Identifier"===n.type||"AssignmentPattern"===n.type)&&r&&Sn(r)&&")"===Qt(t,e,dn))return tn(n,e),!0;if(r&&"FunctionDeclaration"===r.type&&s&&"BlockStatement"===s.type){const n=(()=>{const e=an(r);if(0!==e.length)return Yt(t,dn(Jt(e)));const n=Yt(t,dn(r.id));return!1!==n&&Yt(t,n+1)})();if(hn(e)>n)return fn(s,e),!0}return!1}function bn(e){const{enclosingNode:t}=e;return!(!t||"ImportSpecifier"!==t.type||(en(t,e),0))}function Fn(e){const{enclosingNode:t}=e;return!(!t||"LabeledStatement"!==t.type||(en(t,e),0))}function xn(e,t,n){const{enclosingNode:r}=e;return t&&t.body&&0===t.body.length?(n?nn(t,e):en(t,e),!0):!(!r||"Program"!==r.type||0!==r.body.length||!r.directives||0!==r.directives.length||(n?nn(r,e):en(r,e),0))}function vn(e){const{enclosingNode:t,followingNode:n}=e;if(on(e)&&t&&"TSMappedType"===t.type&&n&&"TSTypeParameter"===n.type&&n.constraint)return t.prettierIgnore=!0,e.unignore=!0,!0}function Sn(e){return"ArrowFunctionExpression"===e.type||"FunctionExpression"===e.type||"FunctionDeclaration"===e.type||"ObjectMethod"===e.type||"ClassMethod"===e.type||"TSDeclareFunction"===e.type||"TSCallSignatureDeclaration"===e.type||"TSConstructSignatureDeclaration"===e.type||"TSMethodSignature"===e.type||"TSConstructorType"===e.type||"TSFunctionType"===e.type||"TSDeclareMethod"===e.type}function Tn(e){return sn(e)&&"*"===e.value[0]&&/@type\b/.test(e.value)}var wn={handleOwnLineComment:function(e,t,n,r,s){return vn(e)||An(e,t)||function(e){const{enclosingNode:t,followingNode:n}=e;return!(!t||"MemberExpression"!==t.type&&"OptionalMemberExpression"!==t.type||!n||"Identifier"!==n.type||(en(t,e),0))}(e)||mn(e,t)||gn(e,t)||yn(e)||En(e)||bn(e)||function(e){const{enclosingNode:t}=e;return!(!t||"ForInStatement"!==t.type&&"ForOfStatement"!==t.type||(en(t,e),0))}(e)||function(e){const{precedingNode:t,enclosingNode:n,followingNode:r}=e;return!n||"UnionTypeAnnotation"!==n.type&&"TSUnionType"!==n.type?(r&&("UnionTypeAnnotation"===r.type||"TSUnionType"===r.type)&&on(e)&&(r.types[0].prettierIgnore=!0,e.unignore=!0),!1):(on(e)&&(r.prettierIgnore=!0,e.unignore=!0),!!t&&(tn(t,e),!0))}(e)||xn(e,r,s)||function(e,t){const{precedingNode:n,enclosingNode:r}=e;return!!(n&&"ImportSpecifier"===n.type&&r&&"ImportDeclaration"===r.type&&Kt(t,dn(e)))&&(tn(n,e),!0)}(e,t)||function(e){const{enclosingNode:t}=e;return!(!t||"AssignmentPattern"!==t.type||(en(t,e),0))}(e)||Cn(e,t)||Fn(e)},handleEndOfLineComment:function(e,t,n,r,s){return function(e){const{followingNode:t}=e;return!(!t||!Tn(e)||(en(t,e),0))}(e)||An(e,t)||function(e,t){const{precedingNode:n,enclosingNode:r,followingNode:s}=e,i=n&&!Zt(t,dn(n),hn(e));return!(n&&i||!r||"ConditionalExpression"!==r.type&&"TSConditionalType"!==r.type||!s||(en(s,e),0))}(e,t)||bn(e)||mn(e,t)||gn(e,t)||yn(e)||En(e)||Fn(e)||function(e){const{precedingNode:t,enclosingNode:n}=e;return!!(n&&("CallExpression"===n.type||"OptionalCallExpression"===n.type)&&t&&n.callee===t&&n.arguments.length>0)&&(en(n.arguments[0],e),!0)}(e)||function(e){const{enclosingNode:t}=e;return!(!t||"Property"!==t.type&&"ObjectProperty"!==t.type||(en(t,e),0))}(e)||xn(e,r,s)||function(e){const{enclosingNode:t}=e;return!(!t||"TypeAlias"!==t.type||(en(t,e),0))}(e)||function(e){const{enclosingNode:t,followingNode:n}=e;return!(!t||"VariableDeclarator"!==t.type&&"AssignmentExpression"!==t.type||!n||"ObjectExpression"!==n.type&&"ArrayExpression"!==n.type&&"TemplateLiteral"!==n.type&&"TaggedTemplateExpression"!==n.type&&!sn(e)||(en(n,e),0))}(e)},handleRemainingComment:function(e,t,n,r,s){return!!(vn(e)||mn(e,t)||gn(e,t)||function(e){const{precedingNode:t,enclosingNode:n}=e;return!(!n||"ObjectProperty"!==n.type&&"Property"!==n.type||!n.shorthand||n.key!==t||"AssignmentPattern"!==n.value.type||(tn(n.value.left,e),0))}(e)||function(e,t){if(")"!==Qt(t,e,dn))return!1;const{enclosingNode:n}=e;return n&&(Sn(n)&&0===an(n).length||("CallExpression"===n.type||"OptionalCallExpression"===n.type||"NewExpression"===n.type)&&0===n.arguments.length)?(nn(n,e),!0):!(!n||"MethodDefinition"!==n.type||0!==an(n.value).length||(nn(n.value,e),0))}(e,t)||Cn(e,t)||xn(e,r,s)||function(e,t){const{enclosingNode:n}=e;if(!n||"ArrowFunctionExpression"!==n.type)return!1;const r=rn(t,e,dn);return!1!==r&&"=>"===t.slice(r,r+2)&&(nn(n,e),!0)}(e,t)||function(e,t){if("("!==Qt(t,e,dn))return!1;const{precedingNode:n,enclosingNode:r}=e;return!(!n||!r||"FunctionDeclaration"!==r.type&&"FunctionExpression"!==r.type&&"ClassMethod"!==r.type&&"MethodDefinition"!==r.type&&"ObjectMethod"!==r.type||(tn(n,e),0))}(e,t)||function(e){const{precedingNode:t,enclosingNode:n,followingNode:r}=e;return!(!n||"TSMappedType"!==n.type||(r&&"TSTypeParameter"===r.type&&r.name?(en(r.name,e),0):!t||"TSTypeParameter"!==t.type||!t.constraint||(tn(t.constraint,e),0)))}(e)||function(e){const{enclosingNode:t}=e;return!(!t||"ContinueStatement"!==t.type&&"BreakStatement"!==t.type||t.label||(tn(t,e),0))}(e)||function(e,t){const{enclosingNode:n,followingNode:r}=e;return!(r||!n||"TSMethodSignature"!==n.type&&"TSDeclareFunction"!==n.type&&"TSAbstractMethodDefinition"!==n.type||";"!==Qt(t,e,dn)||(tn(n,e),0))}(e,t))},hasLeadingComment:function(e,t=(()=>!0)){return e.leadingComments?e.leadingComments.some(t):!!e.comments&&e.comments.some((e=>e.leading&&t(e)))},isTypeCastComment:Tn,getGapRegex:function(e){if(e&&"BinaryExpression"!==e.type&&"LogicalExpression"!==e.type)return/^[\s&(|]*$/},getCommentChildNodes:function(e,t){if(("typescript"===t.parser||"flow"===t.parser||"espree"===t.parser||"meriyah"===t.parser)&&"MethodDefinition"===e.type&&e.value&&"FunctionExpression"===e.value.type&&0===an(e.value).length&&!e.value.returnType&&(!e.value.typeParameters||0===e.value.typeParameters.length)&&e.value.body)return[...e.decorators||[],e.key,e.value.body]},willPrintOwnComments:function(e){const t=e.getValue(),n=e.getParentNode();return(t&&(un(t)||cn(t)||n&&("CallExpression"===n.type||"OptionalCallExpression"===n.type)&&(ln(t.leadingComments)||ln(t.trailingComments)))||n&&("JSXSpreadAttribute"===n.type||"JSXSpreadChild"===n.type||"UnionTypeAnnotation"===n.type||"TSUnionType"===n.type||("ClassDeclaration"===n.type||"ClassExpression"===n.type)&&n.superClass===t))&&(!pn(e)||"UnionTypeAnnotation"===n.type||"TSUnionType"===n.type)}};const{getLast:Bn,getNextNonSpaceNonCommentCharacter:Pn,getShebang:Nn}=Le,{composeLoc:kn,locStart:In,locEnd:Ln}=Qe,{isTypeCastComment:On}=wn;function _n(e){return"CallExpression"===e.type?(e.type="OptionalCallExpression",e.callee=_n(e.callee)):"MemberExpression"===e.type?(e.type="OptionalMemberExpression",e.object=_n(e.object)):"TSNonNullExpression"===e.type&&(e.expression=_n(e.expression)),e}function Mn(e,t){let n;if(Array.isArray(e))n=e.entries();else{if(!e||"object"!=typeof e||"string"!=typeof e.type)return e;n=Object.entries(e)}for(const[r,s]of n)e[r]=Mn(s,t);return Array.isArray(e)?e:t(e)||e}function Rn(e){return"LogicalExpression"===e.type&&"LogicalExpression"===e.right.type&&e.operator===e.right.operator}function jn(e){return Rn(e)?jn({type:"LogicalExpression",operator:e.operator,left:jn({type:"LogicalExpression",operator:e.operator,left:e.left,right:e.right.left,range:kn(e.left,e.right.left)}),right:e.right.right,range:kn(e)}):e}var qn=function(t,n){if("typescript"!==n.parser&&"flow"!==n.parser&&"espree"!==n.parser||function(e,t){const n=Nn(t.originalText);n&&e.comments.unshift({type:"Line",value:n.slice(2),range:[0,n.length]})}(t,n),"typescript"===n.parser&&n.originalText.includes("@")){const{esTreeNodeToTSNodeMap:r,tsNodeToESTreeNodeMap:s}=n.tsParseResult;t=Mn(t,(t=>{const n=r.get(t);if(!n)return;const i=n.decorators;if(!Array.isArray(i))return;const a=s.get(n);if(a!==t)return;const o=a.decorators;if(!Array.isArray(o)||o.length!==i.length||i.some((e=>{const t=s.get(e);return!t||!o.includes(t)}))){const{start:t,end:n}=a.loc;throw e("Leading decorators must be attached to a class declaration",{start:{line:t.line,column:t.column+1},end:{line:n.line,column:n.column+1}})}}))}if("typescript"!==n.parser&&"flow"!==n.parser&&"espree"!==n.parser&&"meriyah"!==n.parser){const e=new Set;t=Mn(t,(t=>{t.leadingComments&&t.leadingComments.some(On)&&e.add(In(t))})),t=Mn(t,(t=>{if("ParenthesizedExpression"===t.type){const{expression:n}=t;if("TypeCastExpression"===n.type)return n.range=t.range,n;const r=In(t);if(!e.has(r))return n.extra=Object.assign({},n.extra,{parenthesized:!0}),n}}))}return Mn(t,(e=>{switch(e.type){case"ChainExpression":return _n(e.expression);case"LogicalExpression":if(Rn(e))return jn(e);break;case"VariableDeclaration":{const t=Bn(e.declarations);t&&t.init&&function(e,t){";"!==n.originalText[Ln(t)]&&(e.range=kn(e,t))}(e,t);break}case"TSParenthesizedType":return e.typeAnnotation.range=kn(e),e.typeAnnotation;case"TSUnionType":case"TSIntersectionType":if(1===e.types.length){const[t]=e.types;return t.range=kn(e),t}break;case"TSTypeParameter":"string"==typeof e.name&&(e.name={type:"Identifier",name:e.name,range:kn(e,e.name.length)});break;case"SequenceExpression":{const t=Bn(e.expressions);Ln(e)>Ln(t)&&(e.range=kn(e,t));break}case"ClassProperty":e.key&&"TSPrivateIdentifier"===e.key.type&&"?"===Pn(n.originalText,e.key,Ln)&&(e.optional=!0)}}))},Un=M((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});const n=!0,r=!0,s=!0,i=!0;class a{constructor(e,t={}){this.label=void 0,this.keyword=void 0,this.beforeExpr=void 0,this.startsExpr=void 0,this.rightAssociative=void 0,this.isLoop=void 0,this.isAssign=void 0,this.prefix=void 0,this.postfix=void 0,this.binop=void 0,this.updateContext=void 0,this.label=e,this.keyword=t.keyword,this.beforeExpr=!!t.beforeExpr,this.startsExpr=!!t.startsExpr,this.rightAssociative=!!t.rightAssociative,this.isLoop=!!t.isLoop,this.isAssign=!!t.isAssign,this.prefix=!!t.prefix,this.postfix=!!t.postfix,this.binop=null!=t.binop?t.binop:null,this.updateContext=null}}const o=new Map;function u(e,t={}){t.keyword=e;const n=new a(e,t);return o.set(e,n),n}function c(e,t){return new a(e,{beforeExpr:n,binop:t})}const l={num:new a("num",{startsExpr:r}),bigint:new a("bigint",{startsExpr:r}),decimal:new a("decimal",{startsExpr:r}),regexp:new a("regexp",{startsExpr:r}),string:new a("string",{startsExpr:r}),name:new a("name",{startsExpr:r}),eof:new a("eof"),bracketL:new a("[",{beforeExpr:n,startsExpr:r}),bracketHashL:new a("#[",{beforeExpr:n,startsExpr:r}),bracketBarL:new a("[|",{beforeExpr:n,startsExpr:r}),bracketR:new a("]"),bracketBarR:new a("|]"),braceL:new a("{",{beforeExpr:n,startsExpr:r}),braceBarL:new a("{|",{beforeExpr:n,startsExpr:r}),braceHashL:new a("#{",{beforeExpr:n,startsExpr:r}),braceR:new a("}"),braceBarR:new a("|}"),parenL:new a("(",{beforeExpr:n,startsExpr:r}),parenR:new a(")"),comma:new a(",",{beforeExpr:n}),semi:new a(";",{beforeExpr:n}),colon:new a(":",{beforeExpr:n}),doubleColon:new a("::",{beforeExpr:n}),dot:new a("."),question:new a("?",{beforeExpr:n}),questionDot:new a("?."),arrow:new a("=>",{beforeExpr:n}),template:new a("template"),ellipsis:new a("...",{beforeExpr:n}),backQuote:new a("`",{startsExpr:r}),dollarBraceL:new a("${",{beforeExpr:n,startsExpr:r}),at:new a("@"),hash:new a("#",{startsExpr:r}),interpreterDirective:new a("#!..."),eq:new a("=",{beforeExpr:n,isAssign:!0}),assign:new a("_=",{beforeExpr:n,isAssign:!0}),incDec:new a("++/--",{prefix:i,postfix:!0,startsExpr:r}),bang:new a("!",{beforeExpr:n,prefix:i,startsExpr:r}),tilde:new a("~",{beforeExpr:n,prefix:i,startsExpr:r}),pipeline:c("|>",0),nullishCoalescing:c("??",1),logicalOR:c("||",1),logicalAND:c("&&",2),bitwiseOR:c("|",3),bitwiseXOR:c("^",4),bitwiseAND:c("&",5),equality:c("==/!=/===/!==",6),relational:c("</>/<=/>=",7),bitShift:c("<</>>/>>>",8),plusMin:new a("+/-",{beforeExpr:n,binop:9,prefix:i,startsExpr:r}),modulo:new a("%",{beforeExpr:n,binop:10,startsExpr:r}),star:new a("*",{binop:10}),slash:c("/",10),exponent:new a("**",{beforeExpr:n,binop:11,rightAssociative:!0}),_break:u("break"),_case:u("case",{beforeExpr:n}),_catch:u("catch"),_continue:u("continue"),_debugger:u("debugger"),_default:u("default",{beforeExpr:n}),_do:u("do",{isLoop:s,beforeExpr:n}),_else:u("else",{beforeExpr:n}),_finally:u("finally"),_for:u("for",{isLoop:s}),_function:u("function",{startsExpr:r}),_if:u("if"),_return:u("return",{beforeExpr:n}),_switch:u("switch"),_throw:u("throw",{beforeExpr:n,prefix:i,startsExpr:r}),_try:u("try"),_var:u("var"),_const:u("const"),_while:u("while",{isLoop:s}),_with:u("with"),_new:u("new",{beforeExpr:n,startsExpr:r}),_this:u("this",{startsExpr:r}),_super:u("super",{startsExpr:r}),_class:u("class",{startsExpr:r}),_extends:u("extends",{beforeExpr:n}),_export:u("export"),_import:u("import",{startsExpr:r}),_null:u("null",{startsExpr:r}),_true:u("true",{startsExpr:r}),_false:u("false",{startsExpr:r}),_in:u("in",{beforeExpr:n,binop:7}),_instanceof:u("instanceof",{beforeExpr:n,binop:7}),_typeof:u("typeof",{beforeExpr:n,prefix:i,startsExpr:r}),_void:u("void",{beforeExpr:n,prefix:i,startsExpr:r}),_delete:u("delete",{beforeExpr:n,prefix:i,startsExpr:r})},p=/\r\n?|[\n\u2028\u2029]/,h=new RegExp(p.source,"g");function d(e){switch(e){case 10:case 13:case 8232:case 8233:return!0;default:return!1}}const f=/(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;function D(e){switch(e){case 9:case 11:case 12:case 32:case 160:case 5760:case 8192:case 8193:case 8194:case 8195:case 8196:case 8197:case 8198:case 8199:case 8200:case 8201:case 8202:case 8239:case 8287:case 12288:case 65279:return!0;default:return!1}}class m{constructor(e,t){this.line=void 0,this.column=void 0,this.line=e,this.column=t}}class g{constructor(e,t){this.start=void 0,this.end=void 0,this.filename=void 0,this.identifierName=void 0,this.start=e,this.end=t}}function y(e){return e[e.length-1]}const E=Object.freeze({AccessorIsGenerator:"A %0ter cannot be a generator",ArgumentsInClass:"'arguments' is only allowed in functions and class methods",AsyncFunctionInSingleStatementContext:"Async functions can only be declared at the top level or inside a block",AwaitBindingIdentifier:"Can not use 'await' as identifier inside an async function",AwaitExpressionFormalParameter:"await is not allowed in async function parameters",AwaitNotInAsyncContext:"'await' is only allowed within async functions and at the top levels of modules",AwaitNotInAsyncFunction:"'await' is only allowed within async functions",BadGetterArity:"getter must not have any formal parameters",BadSetterArity:"setter must have exactly one formal parameter",BadSetterRestParameter:"setter function argument must not be a rest parameter",ConstructorClassField:"Classes may not have a field named 'constructor'",ConstructorClassPrivateField:"Classes may not have a private field named '#constructor'",ConstructorIsAccessor:"Class constructor may not be an accessor",ConstructorIsAsync:"Constructor can't be an async function",ConstructorIsGenerator:"Constructor can't be a generator",DeclarationMissingInitializer:"%0 require an initialization value",DecoratorBeforeExport:"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax",DecoratorConstructor:"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?",DecoratorExportClass:"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.",DecoratorSemicolon:"Decorators must not be followed by a semicolon",DecoratorStaticBlock:"Decorators can't be used with a static block",DeletePrivateField:"Deleting a private field is not allowed",DestructureNamedImport:"ES2015 named imports do not destructure. Use another statement for destructuring after the import.",DuplicateConstructor:"Duplicate constructor in the same class",DuplicateDefaultExport:"Only one default export allowed per module.",DuplicateExport:"`%0` has already been exported. Exported identifiers must be unique.",DuplicateProto:"Redefinition of __proto__ property",DuplicateRegExpFlags:"Duplicate regular expression flag",DuplicateStaticBlock:"Duplicate static block in the same class",ElementAfterRest:"Rest element must be last element",EscapedCharNotAnIdentifier:"Invalid Unicode escape",ExportBindingIsString:"A string literal cannot be used as an exported binding without `from`.\n- Did you mean `export { %0 as '%1' } from 'some-module'`?",ExportDefaultFromAsIdentifier:"'from' is not allowed as an identifier after 'export default'",ForInOfLoopInitializer:"%0 loop variable declaration may not have an initializer",GeneratorInSingleStatementContext:"Generators can only be declared at the top level or inside a block",IllegalBreakContinue:"Unsyntactic %0",IllegalLanguageModeDirective:"Illegal 'use strict' directive in function with non-simple parameter list",IllegalReturn:"'return' outside of function",ImportBindingIsString:'A string literal cannot be used as an imported binding.\n- Did you mean `import { "%0" as foo }`?',ImportCallArgumentTrailingComma:"Trailing comma is disallowed inside import(...) arguments",ImportCallArity:"import() requires exactly %0",ImportCallNotNewExpression:"Cannot use new with import(...)",ImportCallSpreadArgument:"... is not allowed in import()",ImportMetaOutsideModule:"import.meta may appear only with 'sourceType: \"module\"'",ImportOutsideModule:"'import' and 'export' may appear only with 'sourceType: \"module\"'",InvalidBigIntLiteral:"Invalid BigIntLiteral",InvalidCodePoint:"Code point out of bounds",InvalidDecimal:"Invalid decimal",InvalidDigit:"Expected number in radix %0",InvalidEscapeSequence:"Bad character escape sequence",InvalidEscapeSequenceTemplate:"Invalid escape sequence in template",InvalidEscapedReservedWord:"Escape sequence in keyword %0",InvalidIdentifier:"Invalid identifier %0",InvalidLhs:"Invalid left-hand side in %0",InvalidLhsBinding:"Binding invalid left-hand side in %0",InvalidNumber:"Invalid number",InvalidOrMissingExponent:"Floating-point numbers require a valid exponent after the 'e'",InvalidOrUnexpectedToken:"Unexpected character '%0'",InvalidParenthesizedAssignment:"Invalid parenthesized assignment pattern",InvalidPrivateFieldResolution:"Private name #%0 is not defined",InvalidPropertyBindingPattern:"Binding member expression",InvalidRecordProperty:"Only properties and spread elements are allowed in record definitions",InvalidRestAssignmentPattern:"Invalid rest operator's argument",LabelRedeclaration:"Label '%0' is already declared",LetInLexicalBinding:"'let' is not allowed to be used as a name in 'let' or 'const' declarations.",LineTerminatorBeforeArrow:"No line break is allowed before '=>'",MalformedRegExpFlags:"Invalid regular expression flag",MissingClassName:"A class name is required",MissingEqInAssignment:"Only '=' operator can be used for specifying default value.",MissingUnicodeEscape:"Expecting Unicode escape sequence \\uXXXX",MixingCoalesceWithLogical:"Nullish coalescing operator(??) requires parens when mixing with logical operators",ModuleAttributeDifferentFromType:"The only accepted module attribute is `type`",ModuleAttributeInvalidValue:"Only string literals are allowed as module attribute values",ModuleAttributesWithDuplicateKeys:'Duplicate key "%0" is not allowed in module attributes',ModuleExportNameHasLoneSurrogate:"An export name cannot include a lone surrogate, found '\\u%0'",ModuleExportUndefined:"Export '%0' is not defined",MultipleDefaultsInSwitch:"Multiple default clauses",NewlineAfterThrow:"Illegal newline after throw",NoCatchOrFinally:"Missing catch or finally clause",NumberIdentifier:"Identifier directly after number",NumericSeparatorInEscapeSequence:"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences",ObsoleteAwaitStar:"await* has been removed from the async functions proposal. Use Promise.all() instead.",OptionalChainingNoNew:"constructors in/after an Optional Chain are not allowed",OptionalChainingNoTemplate:"Tagged Template Literals are not allowed in optionalChain",ParamDupe:"Argument name clash",PatternHasAccessor:"Object pattern can't contain getter or setter",PatternHasMethod:"Object pattern can't contain methods",PipelineBodyNoArrow:'Unexpected arrow "=>" after pipeline body; arrow function in pipeline body must be parenthesized',PipelineBodySequenceExpression:"Pipeline body may not be a comma-separated sequence expression",PipelineHeadSequenceExpression:"Pipeline head should not be a comma-separated sequence expression",PipelineTopicUnused:"Pipeline is in topic style but does not use topic reference",PrimaryTopicNotAllowed:"Topic reference was used in a lexical context without topic binding",PrimaryTopicRequiresSmartPipeline:"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.",PrivateInExpectedIn:"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)",PrivateNameRedeclaration:"Duplicate private name #%0",RecordExpressionBarIncorrectEndSyntaxType:"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'",RecordExpressionBarIncorrectStartSyntaxType:"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'",RecordExpressionHashIncorrectStartSyntaxType:"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'",RecordNoProto:"'__proto__' is not allowed in Record expressions",RestTrailingComma:"Unexpected trailing comma after rest element",SloppyFunction:"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement",StaticPrototype:"Classes may not have static property named prototype",StrictDelete:"Deleting local variable in strict mode",StrictEvalArguments:"Assigning to '%0' in strict mode",StrictEvalArgumentsBinding:"Binding '%0' in strict mode",StrictFunction:"In strict mode code, functions can only be declared at top level or inside a block",StrictNumericEscape:"The only valid numeric escape in strict mode is '\\0'",StrictOctalLiteral:"Legacy octal literals are not allowed in strict mode",StrictWith:"'with' in strict mode",SuperNotAllowed:"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?",SuperPrivateField:"Private fields can't be accessed on super",TrailingDecorator:"Decorators must be attached to a class element",TupleExpressionBarIncorrectEndSyntaxType:"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'",TupleExpressionBarIncorrectStartSyntaxType:"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'",TupleExpressionHashIncorrectStartSyntaxType:"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'",UnexpectedArgumentPlaceholder:"Unexpected argument placeholder",UnexpectedAwaitAfterPipelineBody:'Unexpected "await" after pipeline body; await must have parentheses in minimal proposal',UnexpectedDigitAfterHash:"Unexpected digit after hash token",UnexpectedImportExport:"'import' and 'export' may only appear at the top level",UnexpectedKeyword:"Unexpected keyword '%0'",UnexpectedLeadingDecorator:"Leading decorators must be attached to a class declaration",UnexpectedLexicalDeclaration:"Lexical declaration cannot appear in a single-statement context",UnexpectedNewTarget:"new.target can only be used in functions",UnexpectedNumericSeparator:"A numeric separator is only allowed between two digits",UnexpectedPrivateField:"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\n or a property of member expression (i.e. this.#p).",UnexpectedReservedWord:"Unexpected reserved word '%0'",UnexpectedSuper:"super is only allowed in object methods and classes",UnexpectedToken:"Unexpected token '%0'",UnexpectedTokenUnaryExponentiation:"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.",UnsupportedBind:"Binding should be performed on object property.",UnsupportedDecoratorExport:"A decorated export must export a class declaration",UnsupportedDefaultExport:"Only expressions, functions or classes are allowed as the `default` export.",UnsupportedImport:"import can only be used in import() or import.meta",UnsupportedMetaProperty:"The only valid meta property for %0 is %0.%1",UnsupportedParameterDecorator:"Decorators cannot be used to decorate parameters",UnsupportedPropertyDecorator:"Decorators cannot be used to decorate object literal properties",UnsupportedSuper:"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])",UnterminatedComment:"Unterminated comment",UnterminatedRegExp:"Unterminated regular expression",UnterminatedString:"Unterminated string constant",UnterminatedTemplate:"Unterminated template",VarRedeclaration:"Identifier '%0' has already been declared",YieldBindingIdentifier:"Can not use 'yield' as identifier inside a generator",YieldInParameter:"Yield expression is not allowed in formal parameters",ZeroDigitNumericSeparator:"Numeric separator can not be used after leading 0"});function C(e){return null!=e&&"Property"===e.type&&"init"===e.kind&&!1===e.method}class A{constructor(e,t,n,r){this.token=void 0,this.isExpr=void 0,this.preserveSpace=void 0,this.override=void 0,this.token=e,this.isExpr=!!t,this.preserveSpace=!!n,this.override=r}}const b={braceStatement:new A("{",!1),braceExpression:new A("{",!0),recordExpression:new A("#{",!0),templateQuasi:new A("${",!1),parenStatement:new A("(",!1),parenExpression:new A("(",!0),template:new A("`",!0,!0,(e=>e.readTmplToken())),functionExpression:new A("function",!0),functionStatement:new A("function",!1)};l.parenR.updateContext=l.braceR.updateContext=function(){if(1===this.state.context.length)return void(this.state.exprAllowed=!0);let e=this.state.context.pop();e===b.braceStatement&&"function"===this.curContext().token&&(e=this.state.context.pop()),this.state.exprAllowed=!e.isExpr},l.name.updateContext=function(e){let t=!1;e!==l.dot&&("of"!==this.state.value||this.state.exprAllowed||e===l._function||e===l._class||(t=!0)),this.state.exprAllowed=t,this.state.isIterator&&(this.state.isIterator=!1)},l.braceL.updateContext=function(e){this.state.context.push(this.braceIsBlock(e)?b.braceStatement:b.braceExpression),this.state.exprAllowed=!0},l.dollarBraceL.updateContext=function(){this.state.context.push(b.templateQuasi),this.state.exprAllowed=!0},l.parenL.updateContext=function(e){const t=e===l._if||e===l._for||e===l._with||e===l._while;this.state.context.push(t?b.parenStatement:b.parenExpression),this.state.exprAllowed=!0},l.incDec.updateContext=function(){},l._function.updateContext=l._class.updateContext=function(e){!e.beforeExpr||e===l.semi||e===l._else||e===l._return&&this.hasPrecedingLineBreak()||(e===l.colon||e===l.braceL)&&this.curContext()===b.b_stat?this.state.context.push(b.functionStatement):this.state.context.push(b.functionExpression),this.state.exprAllowed=!1},l.backQuote.updateContext=function(){this.curContext()===b.template?this.state.context.pop():this.state.context.push(b.template),this.state.exprAllowed=!1},l.braceHashL.updateContext=function(){this.state.context.push(b.recordExpression),this.state.exprAllowed=!0};let F="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-ꟊꟵ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",x="‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿᫀᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿";const v=new RegExp("["+F+"]"),S=new RegExp("["+F+x+"]");F=x=null;const T=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938],w=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];function B(e,t){let n=65536;for(let r=0,s=t.length;r<s;r+=2){if(n+=t[r],n>e)return!1;if(n+=t[r+1],n>=e)return!0}return!1}function P(e){return e<65?36===e:e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&v.test(String.fromCharCode(e)):B(e,T)))}function N(e){return e<48?36===e:e<58||!(e<65)&&(e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&S.test(String.fromCharCode(e)):B(e,T)||B(e,w))))}const k=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),I=new Set(["implements","interface","let","package","private","protected","public","static","yield"]),L=new Set(["eval","arguments"]);function O(e,t){return t&&"await"===e||"enum"===e}function _(e,t){return O(e,t)||I.has(e)}function M(e){return L.has(e)}function R(e,t){return _(e,t)||M(e)}function j(e){return k.has(e)}const q=/^in(stanceof)?$/,U=new Set(["_","any","bool","boolean","empty","extends","false","interface","mixed","null","number","static","string","true","typeof","void"]),$=Object.freeze({AmbiguousConditionalArrow:"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.",AmbiguousDeclareModuleKind:"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module",AssignReservedType:"Cannot overwrite reserved type %0",DeclareClassElement:"The `declare` modifier can only appear on class fields.",DeclareClassFieldInitializer:"Initializers are not allowed in fields with the `declare` modifier.",DuplicateDeclareModuleExports:"Duplicate `declare module.exports` statement",EnumBooleanMemberNotInitialized:"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.",EnumDuplicateMemberName:"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.",EnumInconsistentMemberValues:"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.",EnumInvalidExplicitType:"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.",EnumInvalidExplicitTypeUnknownSupplied:"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.",EnumInvalidMemberInitializerPrimaryType:"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.",EnumInvalidMemberInitializerSymbolType:"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.",EnumInvalidMemberInitializerUnknownType:"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.",EnumInvalidMemberName:"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.",EnumNumberMemberNotInitialized:"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.",EnumStringMemberInconsistentlyInitailized:"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.",ImportTypeShorthandOnlyInPureImport:"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements",InexactInsideExact:"Explicit inexact syntax cannot appear inside an explicit exact object type",InexactInsideNonObject:"Explicit inexact syntax cannot appear in class or interface definitions",InexactVariance:"Explicit inexact syntax cannot have variance",InvalidNonTypeImportInDeclareModule:"Imports within a `declare module` body must always be `import type` or `import typeof`",MissingTypeParamDefault:"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.",NestedDeclareModule:"`declare module` cannot be used inside another `declare module`",NestedFlowComment:"Cannot have a flow comment inside another flow comment",OptionalBindingPattern:"A binding pattern parameter cannot be optional in an implementation signature.",SpreadVariance:"Spread properties cannot have variance",TypeBeforeInitializer:"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`",TypeCastInPattern:"The type cast expression is expected to be wrapped with parenthesis",UnexpectedExplicitInexactInObject:"Explicit inexact syntax must appear at the end of an inexact object",UnexpectedReservedType:"Unexpected reserved type %0",UnexpectedReservedUnderscore:"`_` is only allowed as a type argument to call or new",UnexpectedSpaceBetweenModuloChecks:"Spaces between `%` and `checks` are not allowed here.",UnexpectedSpreadType:"Spread operator cannot appear in class or interface definitions",UnexpectedSubtractionOperand:'Unexpected token, expected "number" or "bigint"',UnexpectedTokenAfterTypeParameter:"Expected an arrow function after this type parameter declaration",UnexpectedTypeParameterBeforeAsyncArrowFunction:"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`",UnsupportedDeclareExportKind:"`declare export %0` is not supported. Use `%1` instead",UnsupportedStatementInDeclareModule:"Only declares and type imports are allowed inside declare module",UnterminatedFlowComment:"Unterminated flow-comment"});function V(e){return"type"===e.importKind||"typeof"===e.importKind}function W(e){return(e.type===l.name||!!e.type.keyword)&&"from"!==e.value}const z={const:"declare export var",let:"declare export var",type:"export type",interface:"export interface"},H=/\*?\s*@((?:no)?flow)\b/,G={quot:'"',amp:"&",apos:"'",lt:"<",gt:">",nbsp:" ",iexcl:"¡",cent:"¢",pound:"£",curren:"¤",yen:"¥",brvbar:"¦",sect:"§",uml:"¨",copy:"©",ordf:"ª",laquo:"«",not:"¬",shy:"­",reg:"®",macr:"¯",deg:"°",plusmn:"±",sup2:"²",sup3:"³",acute:"´",micro:"µ",para:"¶",middot:"·",cedil:"¸",sup1:"¹",ordm:"º",raquo:"»",frac14:"¼",frac12:"½",frac34:"¾",iquest:"¿",Agrave:"À",Aacute:"Á",Acirc:"Â",Atilde:"Ã",Auml:"Ä",Aring:"Å",AElig:"Æ",Ccedil:"Ç",Egrave:"È",Eacute:"É",Ecirc:"Ê",Euml:"Ë",Igrave:"Ì",Iacute:"Í",Icirc:"Î",Iuml:"Ï",ETH:"Ð",Ntilde:"Ñ",Ograve:"Ò",Oacute:"Ó",Ocirc:"Ô",Otilde:"Õ",Ouml:"Ö",times:"×",Oslash:"Ø",Ugrave:"Ù",Uacute:"Ú",Ucirc:"Û",Uuml:"Ü",Yacute:"Ý",THORN:"Þ",szlig:"ß",agrave:"à",aacute:"á",acirc:"â",atilde:"ã",auml:"ä",aring:"å",aelig:"æ",ccedil:"ç",egrave:"è",eacute:"é",ecirc:"ê",euml:"ë",igrave:"ì",iacute:"í",icirc:"î",iuml:"ï",eth:"ð",ntilde:"ñ",ograve:"ò",oacute:"ó",ocirc:"ô",otilde:"õ",ouml:"ö",divide:"÷",oslash:"ø",ugrave:"ù",uacute:"ú",ucirc:"û",uuml:"ü",yacute:"ý",thorn:"þ",yuml:"ÿ",OElig:"Œ",oelig:"œ",Scaron:"Š",scaron:"š",Yuml:"Ÿ",fnof:"ƒ",circ:"ˆ",tilde:"˜",Alpha:"Α",Beta:"Β",Gamma:"Γ",Delta:"Δ",Epsilon:"Ε",Zeta:"Ζ",Eta:"Η",Theta:"Θ",Iota:"Ι",Kappa:"Κ",Lambda:"Λ",Mu:"Μ",Nu:"Ν",Xi:"Ξ",Omicron:"Ο",Pi:"Π",Rho:"Ρ",Sigma:"Σ",Tau:"Τ",Upsilon:"Υ",Phi:"Φ",Chi:"Χ",Psi:"Ψ",Omega:"Ω",alpha:"α",beta:"β",gamma:"γ",delta:"δ",epsilon:"ε",zeta:"ζ",eta:"η",theta:"θ",iota:"ι",kappa:"κ",lambda:"λ",mu:"μ",nu:"ν",xi:"ξ",omicron:"ο",pi:"π",rho:"ρ",sigmaf:"ς",sigma:"σ",tau:"τ",upsilon:"υ",phi:"φ",chi:"χ",psi:"ψ",omega:"ω",thetasym:"ϑ",upsih:"ϒ",piv:"ϖ",ensp:" ",emsp:" ",thinsp:" ",zwnj:"‌",zwj:"‍",lrm:"‎",rlm:"‏",ndash:"–",mdash:"—",lsquo:"‘",rsquo:"’",sbquo:"‚",ldquo:"“",rdquo:"”",bdquo:"„",dagger:"†",Dagger:"‡",bull:"•",hellip:"…",permil:"‰",prime:"′",Prime:"″",lsaquo:"‹",rsaquo:"›",oline:"‾",frasl:"⁄",euro:"€",image:"ℑ",weierp:"℘",real:"ℜ",trade:"™",alefsym:"ℵ",larr:"←",uarr:"↑",rarr:"→",darr:"↓",harr:"↔",crarr:"↵",lArr:"⇐",uArr:"⇑",rArr:"⇒",dArr:"⇓",hArr:"⇔",forall:"∀",part:"∂",exist:"∃",empty:"∅",nabla:"∇",isin:"∈",notin:"∉",ni:"∋",prod:"∏",sum:"∑",minus:"−",lowast:"∗",radic:"√",prop:"∝",infin:"∞",ang:"∠",and:"∧",or:"∨",cap:"∩",cup:"∪",int:"∫",there4:"∴",sim:"∼",cong:"≅",asymp:"≈",ne:"≠",equiv:"≡",le:"≤",ge:"≥",sub:"⊂",sup:"⊃",nsub:"⊄",sube:"⊆",supe:"⊇",oplus:"⊕",otimes:"⊗",perp:"⊥",sdot:"⋅",lceil:"⌈",rceil:"⌉",lfloor:"⌊",rfloor:"⌋",lang:"〈",rang:"〉",loz:"◊",spades:"♠",clubs:"♣",hearts:"♥",diams:"♦"},X=/^[\da-fA-F]+$/,J=/^\d+$/,K=Object.freeze({AttributeIsEmpty:"JSX attributes must only be assigned a non-empty expression",MissingClosingTagFragment:"Expected corresponding JSX closing tag for <>",MissingClosingTagElement:"Expected corresponding JSX closing tag for <%0>",UnsupportedJsxValue:"JSX value should be either an expression or a quoted JSX text",UnterminatedJsxContent:"Unterminated JSX contents",UnwrappedAdjacentJSXElements:"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?"});function Y(e){return!!e&&("JSXOpeningFragment"===e.type||"JSXClosingFragment"===e.type)}function Q(e){if("JSXIdentifier"===e.type)return e.name;if("JSXNamespacedName"===e.type)return e.namespace.name+":"+e.name.name;if("JSXMemberExpression"===e.type)return Q(e.object)+"."+Q(e.property);throw new Error("Node had unexpected type: "+e.type)}b.j_oTag=new A("<tag",!1),b.j_cTag=new A("</tag",!1),b.j_expr=new A("<tag>...</tag>",!0,!0),l.jsxName=new a("jsxName"),l.jsxText=new a("jsxText",{beforeExpr:!0}),l.jsxTagStart=new a("jsxTagStart",{startsExpr:!0}),l.jsxTagEnd=new a("jsxTagEnd"),l.jsxTagStart.updateContext=function(){this.state.context.push(b.j_expr),this.state.context.push(b.j_oTag),this.state.exprAllowed=!1},l.jsxTagEnd.updateContext=function(e){const t=this.state.context.pop();t===b.j_oTag&&e===l.slash||t===b.j_cTag?(this.state.context.pop(),this.state.exprAllowed=this.curContext()===b.j_expr):this.state.exprAllowed=!0};class Z{constructor(e){this.flags=void 0,this.var=[],this.lexical=[],this.functions=[],this.flags=e}}class ee{constructor(e,t){this.scopeStack=[],this.undefinedExports=new Map,this.undefinedPrivateNames=new Map,this.raise=e,this.inModule=t}get inFunction(){return(2&this.currentVarScope().flags)>0}get allowSuper(){return(16&this.currentThisScope().flags)>0}get allowDirectSuper(){return(32&this.currentThisScope().flags)>0}get inClass(){return(64&this.currentThisScope().flags)>0}get inNonArrowFunction(){return(2&this.currentThisScope().flags)>0}get treatFunctionsAsVar(){return this.treatFunctionsAsVarInScope(this.currentScope())}createScope(e){return new Z(e)}enter(e){this.scopeStack.push(this.createScope(e))}exit(){this.scopeStack.pop()}treatFunctionsAsVarInScope(e){return!!(2&e.flags||!this.inModule&&1&e.flags)}declareName(e,t,n){let r=this.currentScope();if(8&t||16&t)this.checkRedeclarationInScope(r,e,t,n),16&t?r.functions.push(e):r.lexical.push(e),8&t&&this.maybeExportDefined(r,e);else if(4&t)for(let s=this.scopeStack.length-1;s>=0&&(r=this.scopeStack[s],this.checkRedeclarationInScope(r,e,t,n),r.var.push(e),this.maybeExportDefined(r,e),!(131&r.flags));--s);this.inModule&&1&r.flags&&this.undefinedExports.delete(e)}maybeExportDefined(e,t){this.inModule&&1&e.flags&&this.undefinedExports.delete(t)}checkRedeclarationInScope(e,t,n,r){this.isRedeclaredInScope(e,t,n)&&this.raise(r,E.VarRedeclaration,t)}isRedeclaredInScope(e,t,n){return!!(1&n)&&(8&n?e.lexical.indexOf(t)>-1||e.functions.indexOf(t)>-1||e.var.indexOf(t)>-1:16&n?e.lexical.indexOf(t)>-1||!this.treatFunctionsAsVarInScope(e)&&e.var.indexOf(t)>-1:e.lexical.indexOf(t)>-1&&!(8&e.flags&&e.lexical[0]===t)||!this.treatFunctionsAsVarInScope(e)&&e.functions.indexOf(t)>-1)}checkLocalExport(e){-1===this.scopeStack[0].lexical.indexOf(e.name)&&-1===this.scopeStack[0].var.indexOf(e.name)&&-1===this.scopeStack[0].functions.indexOf(e.name)&&this.undefinedExports.set(e.name,e.start)}currentScope(){return this.scopeStack[this.scopeStack.length-1]}currentVarScope(){for(let e=this.scopeStack.length-1;;e--){const t=this.scopeStack[e];if(131&t.flags)return t}}currentThisScope(){for(let e=this.scopeStack.length-1;;e--){const t=this.scopeStack[e];if((131&t.flags||64&t.flags)&&!(4&t.flags))return t}}}class te extends Z{constructor(...e){super(...e),this.types=[],this.enums=[],this.constEnums=[],this.classes=[],this.exportOnlyBindings=[]}}class ne extends ee{createScope(e){return new te(e)}declareName(e,t,n){const r=this.currentScope();if(1024&t)return this.maybeExportDefined(r,e),void r.exportOnlyBindings.push(e);super.declareName(...arguments),2&t&&(1&t||(this.checkRedeclarationInScope(r,e,t,n),this.maybeExportDefined(r,e)),r.types.push(e)),256&t&&r.enums.push(e),512&t&&r.constEnums.push(e),128&t&&r.classes.push(e)}isRedeclaredInScope(e,t,n){return e.enums.indexOf(t)>-1?!(256&n)||!!(512&n)!=e.constEnums.indexOf(t)>-1:128&n&&e.classes.indexOf(t)>-1?e.lexical.indexOf(t)>-1&&!!(1&n):!!(2&n&&e.types.indexOf(t)>-1)||super.isRedeclaredInScope(...arguments)}checkLocalExport(e){-1===this.scopeStack[0].types.indexOf(e.name)&&-1===this.scopeStack[0].exportOnlyBindings.indexOf(e.name)&&super.checkLocalExport(e)}}class re{constructor(){this.stacks=[]}enter(e){this.stacks.push(e)}exit(){this.stacks.pop()}currentFlags(){return this.stacks[this.stacks.length-1]}get hasAwait(){return(2&this.currentFlags())>0}get hasYield(){return(1&this.currentFlags())>0}get hasReturn(){return(4&this.currentFlags())>0}get hasIn(){return(8&this.currentFlags())>0}}function se(e,t){return(e?2:0)|(t?1:0)}function ie(e){if(null==e)throw new Error("Unexpected ".concat(e," value."));return e}function ae(e){if(!e)throw new Error("Assert fail")}const oe=Object.freeze({ClassMethodHasDeclare:"Class methods cannot have the 'declare' modifier",ClassMethodHasReadonly:"Class methods cannot have the 'readonly' modifier",ConstructorHasTypeParameters:"Type parameters cannot appear on a constructor declaration.",DeclareClassFieldHasInitializer:"Initializers are not allowed in ambient contexts.",DeclareFunctionHasImplementation:"An implementation cannot be declared in ambient contexts.",DuplicateModifier:"Duplicate modifier: '%0'",EmptyHeritageClauseType:"'%0' list cannot be empty.",EmptyTypeArguments:"Type argument list cannot be empty.",EmptyTypeParameters:"Type parameter list cannot be empty.",IndexSignatureHasAbstract:"Index signatures cannot have the 'abstract' modifier",IndexSignatureHasAccessibility:"Index signatures cannot have an accessibility modifier ('%0')",IndexSignatureHasStatic:"Index signatures cannot have the 'static' modifier",IndexSignatureHasDeclare:"Index signatures cannot have the 'declare' modifier",InvalidTupleMemberLabel:"Tuple members must be labeled with a simple identifier.",MixedLabeledAndUnlabeledElements:"Tuple members must all have names or all not have names.",OptionalTypeBeforeRequired:"A required element cannot follow an optional element.",PatternIsOptional:"A binding pattern parameter cannot be optional in an implementation signature.",PrivateElementHasAbstract:"Private elements cannot have the 'abstract' modifier.",PrivateElementHasAccessibility:"Private elements cannot have an accessibility modifier ('%0')",TypeAnnotationAfterAssign:"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`",UnexpectedParameterModifier:"A parameter property is only allowed in a constructor implementation.",UnexpectedReadonly:"'readonly' type modifier is only permitted on array and tuple literal types.",UnexpectedTypeAnnotation:"Did not expect a type annotation here.",UnexpectedTypeCastInParameter:"Unexpected type cast in parameter position.",UnsupportedImportTypeArgument:"Argument in a type import must be a string literal",UnsupportedParameterPropertyKind:"A parameter property may not be declared using a binding pattern.",UnsupportedSignatureParameterKind:"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0"});function ue(e,t){return e.some((e=>Array.isArray(e)?e[0]===t:e===t))}function ce(e,t,n){const r=e.find((e=>Array.isArray(e)?e[0]===t:e===t));return r&&Array.isArray(r)?r[1][n]:null}l.placeholder=new a("%%",{startsExpr:!0});const le=["minimal","smart","fsharp"],pe=["hash","bar"],he={estree:e=>class extends e{estreeParseRegExpLiteral({pattern:e,flags:t}){let n=null;try{n=new RegExp(e,t)}catch(e){}const r=this.estreeParseLiteral(n);return r.regex={pattern:e,flags:t},r}estreeParseBigIntLiteral(e){const t="undefined"!=typeof BigInt?BigInt(e):null,n=this.estreeParseLiteral(t);return n.bigint=String(n.value||e),n}estreeParseDecimalLiteral(e){const t=this.estreeParseLiteral(null);return t.decimal=String(t.value||e),t}estreeParseLiteral(e){return this.parseLiteral(e,"Literal")}directiveToStmt(e){const t=e.value,n=this.startNodeAt(e.start,e.loc.start),r=this.startNodeAt(t.start,t.loc.start);return r.value=t.value,r.raw=t.extra.raw,n.expression=this.finishNodeAt(r,"Literal",t.end,t.loc.end),n.directive=t.extra.raw.slice(1,-1),this.finishNodeAt(n,"ExpressionStatement",e.end,e.loc.end)}initFunction(e,t){super.initFunction(e,t),e.expression=!1}checkDeclaration(e){C(e)?this.checkDeclaration(e.value):super.checkDeclaration(e)}getObjectOrClassMethodParams(e){return e.value.params}checkLVal(e,t=64,n,r,s){"ObjectPattern"===e.type?e.properties.forEach((e=>{this.checkLVal("Property"===e.type?e.value:e,t,n,"object destructuring pattern",s)})):super.checkLVal(e,t,n,r,s)}checkProto(e,t,n,r){e.method||super.checkProto(e,t,n,r)}isValidDirective(e){var t;return"ExpressionStatement"===e.type&&"Literal"===e.expression.type&&"string"==typeof e.expression.value&&!(null==(t=e.expression.extra)?void 0:t.parenthesized)}stmtToDirective(e){const t=super.stmtToDirective(e),n=e.expression.value;return t.value.value=n,t}parseBlockBody(e,t,n,r){super.parseBlockBody(e,t,n,r);const s=e.directives.map((e=>this.directiveToStmt(e)));e.body=s.concat(e.body),delete e.directives}pushClassMethod(e,t,n,r,s,i){this.parseMethod(t,n,r,s,i,"ClassMethod",!0),t.typeParameters&&(t.value.typeParameters=t.typeParameters,delete t.typeParameters),e.body.push(t)}parseExprAtom(e){switch(this.state.type){case l.num:case l.string:return this.estreeParseLiteral(this.state.value);case l.regexp:return this.estreeParseRegExpLiteral(this.state.value);case l.bigint:return this.estreeParseBigIntLiteral(this.state.value);case l.decimal:return this.estreeParseDecimalLiteral(this.state.value);case l._null:return this.estreeParseLiteral(null);case l._true:return this.estreeParseLiteral(!0);case l._false:return this.estreeParseLiteral(!1);default:return super.parseExprAtom(e)}}parseLiteral(e,t,n,r){const s=super.parseLiteral(e,t,n,r);return s.raw=s.extra.raw,delete s.extra,s}parseFunctionBody(e,t,n=!1){super.parseFunctionBody(e,t,n),e.expression="BlockStatement"!==e.body.type}parseMethod(e,t,n,r,s,i,a=!1){let o=this.startNode();return o.kind=e.kind,o=super.parseMethod(o,t,n,r,s,i,a),o.type="FunctionExpression",delete o.kind,e.value=o,i="ClassMethod"===i?"MethodDefinition":i,this.finishNode(e,i)}parseObjectMethod(e,t,n,r,s){const i=super.parseObjectMethod(e,t,n,r,s);return i&&(i.type="Property","method"===i.kind&&(i.kind="init"),i.shorthand=!1),i}parseObjectProperty(e,t,n,r,s){const i=super.parseObjectProperty(e,t,n,r,s);return i&&(i.kind="init",i.type="Property"),i}toAssignable(e){return C(e)?(this.toAssignable(e.value),e):super.toAssignable(e)}toAssignableObjectExpressionProp(e,t){if("get"===e.kind||"set"===e.kind)throw this.raise(e.key.start,E.PatternHasAccessor);if(e.method)throw this.raise(e.key.start,E.PatternHasMethod);super.toAssignableObjectExpressionProp(e,t)}finishCallExpression(e,t){return super.finishCallExpression(e,t),"Import"===e.callee.type&&(e.type="ImportExpression",e.source=e.arguments[0],delete e.arguments,delete e.callee),e}toReferencedArguments(e){"ImportExpression"!==e.type&&super.toReferencedArguments(e)}parseExport(e){switch(super.parseExport(e),e.type){case"ExportAllDeclaration":e.exported=null;break;case"ExportNamedDeclaration":1===e.specifiers.length&&"ExportNamespaceSpecifier"===e.specifiers[0].type&&(e.type="ExportAllDeclaration",e.exported=e.specifiers[0].exported,delete e.specifiers)}return e}parseSubscript(e,t,n,r,s){const i=super.parseSubscript(e,t,n,r,s);if(s.optionalChainMember){if("OptionalMemberExpression"!==i.type&&"OptionalCallExpression"!==i.type||(i.type=i.type.substring(8)),s.stop){const e=this.startNodeAtNode(i);return e.expression=i,this.finishNode(e,"ChainExpression")}}else"MemberExpression"!==i.type&&"CallExpression"!==i.type||(i.optional=!1);return i}},jsx:e=>class extends e{jsxReadToken(){let e="",t=this.state.pos;for(;;){if(this.state.pos>=this.length)throw this.raise(this.state.start,K.UnterminatedJsxContent);const n=this.input.charCodeAt(this.state.pos);switch(n){case 60:case 123:return this.state.pos===this.state.start?60===n&&this.state.exprAllowed?(++this.state.pos,this.finishToken(l.jsxTagStart)):super.getTokenFromCode(n):(e+=this.input.slice(t,this.state.pos),this.finishToken(l.jsxText,e));case 38:e+=this.input.slice(t,this.state.pos),e+=this.jsxReadEntity(),t=this.state.pos;break;default:d(n)?(e+=this.input.slice(t,this.state.pos),e+=this.jsxReadNewLine(!0),t=this.state.pos):++this.state.pos}}}jsxReadNewLine(e){const t=this.input.charCodeAt(this.state.pos);let n;return++this.state.pos,13===t&&10===this.input.charCodeAt(this.state.pos)?(++this.state.pos,n=e?"\n":"\r\n"):n=String.fromCharCode(t),++this.state.curLine,this.state.lineStart=this.state.pos,n}jsxReadString(e){let t="",n=++this.state.pos;for(;;){if(this.state.pos>=this.length)throw this.raise(this.state.start,E.UnterminatedString);const r=this.input.charCodeAt(this.state.pos);if(r===e)break;38===r?(t+=this.input.slice(n,this.state.pos),t+=this.jsxReadEntity(),n=this.state.pos):d(r)?(t+=this.input.slice(n,this.state.pos),t+=this.jsxReadNewLine(!1),n=this.state.pos):++this.state.pos}return t+=this.input.slice(n,this.state.pos++),this.finishToken(l.string,t)}jsxReadEntity(){let e,t="",n=0,r=this.input[this.state.pos];const s=++this.state.pos;for(;this.state.pos<this.length&&n++<10;){if(r=this.input[this.state.pos++],";"===r){"#"===t[0]?"x"===t[1]?(t=t.substr(2),X.test(t)&&(e=String.fromCodePoint(parseInt(t,16)))):(t=t.substr(1),J.test(t)&&(e=String.fromCodePoint(parseInt(t,10)))):e=G[t];break}t+=r}return e||(this.state.pos=s,"&")}jsxReadWord(){let e;const t=this.state.pos;do{e=this.input.charCodeAt(++this.state.pos)}while(N(e)||45===e);return this.finishToken(l.jsxName,this.input.slice(t,this.state.pos))}jsxParseIdentifier(){const e=this.startNode();return this.match(l.jsxName)?e.name=this.state.value:this.state.type.keyword?e.name=this.state.type.keyword:this.unexpected(),this.next(),this.finishNode(e,"JSXIdentifier")}jsxParseNamespacedName(){const e=this.state.start,t=this.state.startLoc,n=this.jsxParseIdentifier();if(!this.eat(l.colon))return n;const r=this.startNodeAt(e,t);return r.namespace=n,r.name=this.jsxParseIdentifier(),this.finishNode(r,"JSXNamespacedName")}jsxParseElementName(){const e=this.state.start,t=this.state.startLoc;let n=this.jsxParseNamespacedName();if("JSXNamespacedName"===n.type)return n;for(;this.eat(l.dot);){const r=this.startNodeAt(e,t);r.object=n,r.property=this.jsxParseIdentifier(),n=this.finishNode(r,"JSXMemberExpression")}return n}jsxParseAttributeValue(){let e;switch(this.state.type){case l.braceL:return e=this.startNode(),this.next(),e=this.jsxParseExpressionContainer(e),"JSXEmptyExpression"===e.expression.type&&this.raise(e.start,K.AttributeIsEmpty),e;case l.jsxTagStart:case l.string:return this.parseExprAtom();default:throw this.raise(this.state.start,K.UnsupportedJsxValue)}}jsxParseEmptyExpression(){const e=this.startNodeAt(this.state.lastTokEnd,this.state.lastTokEndLoc);return this.finishNodeAt(e,"JSXEmptyExpression",this.state.start,this.state.startLoc)}jsxParseSpreadChild(e){return this.next(),e.expression=this.parseExpression(),this.expect(l.braceR),this.finishNode(e,"JSXSpreadChild")}jsxParseExpressionContainer(e){return this.match(l.braceR)?e.expression=this.jsxParseEmptyExpression():e.expression=this.parseExpression(),this.expect(l.braceR),this.finishNode(e,"JSXExpressionContainer")}jsxParseAttribute(){const e=this.startNode();return this.eat(l.braceL)?(this.expect(l.ellipsis),e.argument=this.parseMaybeAssignAllowIn(),this.expect(l.braceR),this.finishNode(e,"JSXSpreadAttribute")):(e.name=this.jsxParseNamespacedName(),e.value=this.eat(l.eq)?this.jsxParseAttributeValue():null,this.finishNode(e,"JSXAttribute"))}jsxParseOpeningElementAt(e,t){const n=this.startNodeAt(e,t);return this.match(l.jsxTagEnd)?(this.expect(l.jsxTagEnd),this.finishNode(n,"JSXOpeningFragment")):(n.name=this.jsxParseElementName(),this.jsxParseOpeningElementAfterName(n))}jsxParseOpeningElementAfterName(e){const t=[];for(;!this.match(l.slash)&&!this.match(l.jsxTagEnd);)t.push(this.jsxParseAttribute());return e.attributes=t,e.selfClosing=this.eat(l.slash),this.expect(l.jsxTagEnd),this.finishNode(e,"JSXOpeningElement")}jsxParseClosingElementAt(e,t){const n=this.startNodeAt(e,t);return this.match(l.jsxTagEnd)?(this.expect(l.jsxTagEnd),this.finishNode(n,"JSXClosingFragment")):(n.name=this.jsxParseElementName(),this.expect(l.jsxTagEnd),this.finishNode(n,"JSXClosingElement"))}jsxParseElementAt(e,t){const n=this.startNodeAt(e,t),r=[],s=this.jsxParseOpeningElementAt(e,t);let i=null;if(!s.selfClosing){e:for(;;)switch(this.state.type){case l.jsxTagStart:if(e=this.state.start,t=this.state.startLoc,this.next(),this.eat(l.slash)){i=this.jsxParseClosingElementAt(e,t);break e}r.push(this.jsxParseElementAt(e,t));break;case l.jsxText:r.push(this.parseExprAtom());break;case l.braceL:{const e=this.startNode();this.next(),this.match(l.ellipsis)?r.push(this.jsxParseSpreadChild(e)):r.push(this.jsxParseExpressionContainer(e));break}default:throw this.unexpected()}Y(s)&&!Y(i)?this.raise(i.start,K.MissingClosingTagFragment):!Y(s)&&Y(i)?this.raise(i.start,K.MissingClosingTagElement,Q(s.name)):Y(s)||Y(i)||Q(i.name)!==Q(s.name)&&this.raise(i.start,K.MissingClosingTagElement,Q(s.name))}if(Y(s)?(n.openingFragment=s,n.closingFragment=i):(n.openingElement=s,n.closingElement=i),n.children=r,this.isRelational("<"))throw this.raise(this.state.start,K.UnwrappedAdjacentJSXElements);return Y(s)?this.finishNode(n,"JSXFragment"):this.finishNode(n,"JSXElement")}jsxParseElement(){const e=this.state.start,t=this.state.startLoc;return this.next(),this.jsxParseElementAt(e,t)}parseExprAtom(e){return this.match(l.jsxText)?this.parseLiteral(this.state.value,"JSXText"):this.match(l.jsxTagStart)?this.jsxParseElement():this.isRelational("<")&&33!==this.input.charCodeAt(this.state.pos)?(this.finishToken(l.jsxTagStart),this.jsxParseElement()):super.parseExprAtom(e)}getTokenFromCode(e){if(this.state.inPropertyName)return super.getTokenFromCode(e);const t=this.curContext();if(t===b.j_expr)return this.jsxReadToken();if(t===b.j_oTag||t===b.j_cTag){if(P(e))return this.jsxReadWord();if(62===e)return++this.state.pos,this.finishToken(l.jsxTagEnd);if((34===e||39===e)&&t===b.j_oTag)return this.jsxReadString(e)}return 60===e&&this.state.exprAllowed&&33!==this.input.charCodeAt(this.state.pos+1)?(++this.state.pos,this.finishToken(l.jsxTagStart)):super.getTokenFromCode(e)}updateContext(e){if(this.match(l.braceL)){const t=this.curContext();t===b.j_oTag?this.state.context.push(b.braceExpression):t===b.j_expr?this.state.context.push(b.templateQuasi):super.updateContext(e),this.state.exprAllowed=!0}else{if(!this.match(l.slash)||e!==l.jsxTagStart)return super.updateContext(e);this.state.context.length-=2,this.state.context.push(b.j_cTag),this.state.exprAllowed=!1}}},flow:e=>class extends e{constructor(e,t){super(e,t),this.flowPragma=void 0,this.flowPragma=void 0}shouldParseTypes(){return this.getPluginOption("flow","all")||"flow"===this.flowPragma}shouldParseEnums(){return!!this.getPluginOption("flow","enums")}finishToken(e,t){return e!==l.string&&e!==l.semi&&e!==l.interpreterDirective&&void 0===this.flowPragma&&(this.flowPragma=null),super.finishToken(e,t)}addComment(e){if(void 0===this.flowPragma){const t=H.exec(e.value);if(t)if("flow"===t[1])this.flowPragma="flow";else{if("noflow"!==t[1])throw new Error("Unexpected flow pragma");this.flowPragma="noflow"}}return super.addComment(e)}flowParseTypeInitialiser(e){const t=this.state.inType;this.state.inType=!0,this.expect(e||l.colon);const n=this.flowParseType();return this.state.inType=t,n}flowParsePredicate(){const e=this.startNode(),t=this.state.startLoc,n=this.state.start;this.expect(l.modulo);const r=this.state.startLoc;return this.expectContextual("checks"),t.line===r.line&&t.column===r.column-1||this.raise(n,$.UnexpectedSpaceBetweenModuloChecks),this.eat(l.parenL)?(e.value=this.parseExpression(),this.expect(l.parenR),this.finishNode(e,"DeclaredPredicate")):this.finishNode(e,"InferredPredicate")}flowParseTypeAndPredicateInitialiser(){const e=this.state.inType;this.state.inType=!0,this.expect(l.colon);let t=null,n=null;return this.match(l.modulo)?(this.state.inType=e,n=this.flowParsePredicate()):(t=this.flowParseType(),this.state.inType=e,this.match(l.modulo)&&(n=this.flowParsePredicate())),[t,n]}flowParseDeclareClass(e){return this.next(),this.flowParseInterfaceish(e,!0),this.finishNode(e,"DeclareClass")}flowParseDeclareFunction(e){this.next();const t=e.id=this.parseIdentifier(),n=this.startNode(),r=this.startNode();this.isRelational("<")?n.typeParameters=this.flowParseTypeParameterDeclaration():n.typeParameters=null,this.expect(l.parenL);const s=this.flowParseFunctionTypeParams();return n.params=s.params,n.rest=s.rest,this.expect(l.parenR),[n.returnType,e.predicate]=this.flowParseTypeAndPredicateInitialiser(),r.typeAnnotation=this.finishNode(n,"FunctionTypeAnnotation"),t.typeAnnotation=this.finishNode(r,"TypeAnnotation"),this.resetEndLocation(t),this.semicolon(),this.finishNode(e,"DeclareFunction")}flowParseDeclare(e,t){if(this.match(l._class))return this.flowParseDeclareClass(e);if(this.match(l._function))return this.flowParseDeclareFunction(e);if(this.match(l._var))return this.flowParseDeclareVariable(e);if(this.eatContextual("module"))return this.match(l.dot)?this.flowParseDeclareModuleExports(e):(t&&this.raise(this.state.lastTokStart,$.NestedDeclareModule),this.flowParseDeclareModule(e));if(this.isContextual("type"))return this.flowParseDeclareTypeAlias(e);if(this.isContextual("opaque"))return this.flowParseDeclareOpaqueType(e);if(this.isContextual("interface"))return this.flowParseDeclareInterface(e);if(this.match(l._export))return this.flowParseDeclareExportDeclaration(e,t);throw this.unexpected()}flowParseDeclareVariable(e){return this.next(),e.id=this.flowParseTypeAnnotatableIdentifier(!0),this.scope.declareName(e.id.name,5,e.id.start),this.semicolon(),this.finishNode(e,"DeclareVariable")}flowParseDeclareModule(e){this.scope.enter(0),this.match(l.string)?e.id=this.parseExprAtom():e.id=this.parseIdentifier();const t=e.body=this.startNode(),n=t.body=[];for(this.expect(l.braceL);!this.match(l.braceR);){let e=this.startNode();this.match(l._import)?(this.next(),this.isContextual("type")||this.match(l._typeof)||this.raise(this.state.lastTokStart,$.InvalidNonTypeImportInDeclareModule),this.parseImport(e)):(this.expectContextual("declare",$.UnsupportedStatementInDeclareModule),e=this.flowParseDeclare(e,!0)),n.push(e)}this.scope.exit(),this.expect(l.braceR),this.finishNode(t,"BlockStatement");let r=null,s=!1;return n.forEach((e=>{!function(e){return"DeclareExportAllDeclaration"===e.type||"DeclareExportDeclaration"===e.type&&(!e.declaration||"TypeAlias"!==e.declaration.type&&"InterfaceDeclaration"!==e.declaration.type)}(e)?"DeclareModuleExports"===e.type&&(s&&this.raise(e.start,$.DuplicateDeclareModuleExports),"ES"===r&&this.raise(e.start,$.AmbiguousDeclareModuleKind),r="CommonJS",s=!0):("CommonJS"===r&&this.raise(e.start,$.AmbiguousDeclareModuleKind),r="ES")})),e.kind=r||"CommonJS",this.finishNode(e,"DeclareModule")}flowParseDeclareExportDeclaration(e,t){if(this.expect(l._export),this.eat(l._default))return this.match(l._function)||this.match(l._class)?e.declaration=this.flowParseDeclare(this.startNode()):(e.declaration=this.flowParseType(),this.semicolon()),e.default=!0,this.finishNode(e,"DeclareExportDeclaration");if(this.match(l._const)||this.isLet()||(this.isContextual("type")||this.isContextual("interface"))&&!t){const e=this.state.value,t=z[e];throw this.raise(this.state.start,$.UnsupportedDeclareExportKind,e,t)}if(this.match(l._var)||this.match(l._function)||this.match(l._class)||this.isContextual("opaque"))return e.declaration=this.flowParseDeclare(this.startNode()),e.default=!1,this.finishNode(e,"DeclareExportDeclaration");if(this.match(l.star)||this.match(l.braceL)||this.isContextual("interface")||this.isContextual("type")||this.isContextual("opaque"))return"ExportNamedDeclaration"===(e=this.parseExport(e)).type&&(e.type="ExportDeclaration",e.default=!1,delete e.exportKind),e.type="Declare"+e.type,e;throw this.unexpected()}flowParseDeclareModuleExports(e){return this.next(),this.expectContextual("exports"),e.typeAnnotation=this.flowParseTypeAnnotation(),this.semicolon(),this.finishNode(e,"DeclareModuleExports")}flowParseDeclareTypeAlias(e){return this.next(),this.flowParseTypeAlias(e),e.type="DeclareTypeAlias",e}flowParseDeclareOpaqueType(e){return this.next(),this.flowParseOpaqueType(e,!0),e.type="DeclareOpaqueType",e}flowParseDeclareInterface(e){return this.next(),this.flowParseInterfaceish(e),this.finishNode(e,"DeclareInterface")}flowParseInterfaceish(e,t=!1){if(e.id=this.flowParseRestrictedIdentifier(!t,!0),this.scope.declareName(e.id.name,t?17:9,e.id.start),this.isRelational("<")?e.typeParameters=this.flowParseTypeParameterDeclaration():e.typeParameters=null,e.extends=[],e.implements=[],e.mixins=[],this.eat(l._extends))do{e.extends.push(this.flowParseInterfaceExtends())}while(!t&&this.eat(l.comma));if(this.isContextual("mixins")){this.next();do{e.mixins.push(this.flowParseInterfaceExtends())}while(this.eat(l.comma))}if(this.isContextual("implements")){this.next();do{e.implements.push(this.flowParseInterfaceExtends())}while(this.eat(l.comma))}e.body=this.flowParseObjectType({allowStatic:t,allowExact:!1,allowSpread:!1,allowProto:t,allowInexact:!1})}flowParseInterfaceExtends(){const e=this.startNode();return e.id=this.flowParseQualifiedTypeIdentifier(),this.isRelational("<")?e.typeParameters=this.flowParseTypeParameterInstantiation():e.typeParameters=null,this.finishNode(e,"InterfaceExtends")}flowParseInterface(e){return this.flowParseInterfaceish(e),this.finishNode(e,"InterfaceDeclaration")}checkNotUnderscore(e){"_"===e&&this.raise(this.state.start,$.UnexpectedReservedUnderscore)}checkReservedType(e,t,n){U.has(e)&&this.raise(t,n?$.AssignReservedType:$.UnexpectedReservedType,e)}flowParseRestrictedIdentifier(e,t){return this.checkReservedType(this.state.value,this.state.start,t),this.parseIdentifier(e)}flowParseTypeAlias(e){return e.id=this.flowParseRestrictedIdentifier(!1,!0),this.scope.declareName(e.id.name,9,e.id.start),this.isRelational("<")?e.typeParameters=this.flowParseTypeParameterDeclaration():e.typeParameters=null,e.right=this.flowParseTypeInitialiser(l.eq),this.semicolon(),this.finishNode(e,"TypeAlias")}flowParseOpaqueType(e,t){return this.expectContextual("type"),e.id=this.flowParseRestrictedIdentifier(!0,!0),this.scope.declareName(e.id.name,9,e.id.start),this.isRelational("<")?e.typeParameters=this.flowParseTypeParameterDeclaration():e.typeParameters=null,e.supertype=null,this.match(l.colon)&&(e.supertype=this.flowParseTypeInitialiser(l.colon)),e.impltype=null,t||(e.impltype=this.flowParseTypeInitialiser(l.eq)),this.semicolon(),this.finishNode(e,"OpaqueType")}flowParseTypeParameter(e=!1){const t=this.state.start,n=this.startNode(),r=this.flowParseVariance(),s=this.flowParseTypeAnnotatableIdentifier();return n.name=s.name,n.variance=r,n.bound=s.typeAnnotation,this.match(l.eq)?(this.eat(l.eq),n.default=this.flowParseType()):e&&this.raise(t,$.MissingTypeParamDefault),this.finishNode(n,"TypeParameter")}flowParseTypeParameterDeclaration(){const e=this.state.inType,t=this.startNode();t.params=[],this.state.inType=!0,this.isRelational("<")||this.match(l.jsxTagStart)?this.next():this.unexpected();let n=!1;do{const e=this.flowParseTypeParameter(n);t.params.push(e),e.default&&(n=!0),this.isRelational(">")||this.expect(l.comma)}while(!this.isRelational(">"));return this.expectRelational(">"),this.state.inType=e,this.finishNode(t,"TypeParameterDeclaration")}flowParseTypeParameterInstantiation(){const e=this.startNode(),t=this.state.inType;e.params=[],this.state.inType=!0,this.expectRelational("<");const n=this.state.noAnonFunctionType;for(this.state.noAnonFunctionType=!1;!this.isRelational(">");)e.params.push(this.flowParseType()),this.isRelational(">")||this.expect(l.comma);return this.state.noAnonFunctionType=n,this.expectRelational(">"),this.state.inType=t,this.finishNode(e,"TypeParameterInstantiation")}flowParseTypeParameterInstantiationCallOrNew(){const e=this.startNode(),t=this.state.inType;for(e.params=[],this.state.inType=!0,this.expectRelational("<");!this.isRelational(">");)e.params.push(this.flowParseTypeOrImplicitInstantiation()),this.isRelational(">")||this.expect(l.comma);return this.expectRelational(">"),this.state.inType=t,this.finishNode(e,"TypeParameterInstantiation")}flowParseInterfaceType(){const e=this.startNode();if(this.expectContextual("interface"),e.extends=[],this.eat(l._extends))do{e.extends.push(this.flowParseInterfaceExtends())}while(this.eat(l.comma));return e.body=this.flowParseObjectType({allowStatic:!1,allowExact:!1,allowSpread:!1,allowProto:!1,allowInexact:!1}),this.finishNode(e,"InterfaceTypeAnnotation")}flowParseObjectPropertyKey(){return this.match(l.num)||this.match(l.string)?this.parseExprAtom():this.parseIdentifier(!0)}flowParseObjectTypeIndexer(e,t,n){return e.static=t,this.lookahead().type===l.colon?(e.id=this.flowParseObjectPropertyKey(),e.key=this.flowParseTypeInitialiser()):(e.id=null,e.key=this.flowParseType()),this.expect(l.bracketR),e.value=this.flowParseTypeInitialiser(),e.variance=n,this.finishNode(e,"ObjectTypeIndexer")}flowParseObjectTypeInternalSlot(e,t){return e.static=t,e.id=this.flowParseObjectPropertyKey(),this.expect(l.bracketR),this.expect(l.bracketR),this.isRelational("<")||this.match(l.parenL)?(e.method=!0,e.optional=!1,e.value=this.flowParseObjectTypeMethodish(this.startNodeAt(e.start,e.loc.start))):(e.method=!1,this.eat(l.question)&&(e.optional=!0),e.value=this.flowParseTypeInitialiser()),this.finishNode(e,"ObjectTypeInternalSlot")}flowParseObjectTypeMethodish(e){for(e.params=[],e.rest=null,e.typeParameters=null,this.isRelational("<")&&(e.typeParameters=this.flowParseTypeParameterDeclaration()),this.expect(l.parenL);!this.match(l.parenR)&&!this.match(l.ellipsis);)e.params.push(this.flowParseFunctionTypeParam()),this.match(l.parenR)||this.expect(l.comma);return this.eat(l.ellipsis)&&(e.rest=this.flowParseFunctionTypeParam()),this.expect(l.parenR),e.returnType=this.flowParseTypeInitialiser(),this.finishNode(e,"FunctionTypeAnnotation")}flowParseObjectTypeCallProperty(e,t){const n=this.startNode();return e.static=t,e.value=this.flowParseObjectTypeMethodish(n),this.finishNode(e,"ObjectTypeCallProperty")}flowParseObjectType({allowStatic:e,allowExact:t,allowSpread:n,allowProto:r,allowInexact:s}){const i=this.state.inType;this.state.inType=!0;const a=this.startNode();let o,u;a.callProperties=[],a.properties=[],a.indexers=[],a.internalSlots=[];let c=!1;for(t&&this.match(l.braceBarL)?(this.expect(l.braceBarL),o=l.braceBarR,u=!0):(this.expect(l.braceL),o=l.braceR,u=!1),a.exact=u;!this.match(o);){let t=!1,i=null,o=null;const p=this.startNode();if(r&&this.isContextual("proto")){const t=this.lookahead();t.type!==l.colon&&t.type!==l.question&&(this.next(),i=this.state.start,e=!1)}if(e&&this.isContextual("static")){const e=this.lookahead();e.type!==l.colon&&e.type!==l.question&&(this.next(),t=!0)}const h=this.flowParseVariance();if(this.eat(l.bracketL))null!=i&&this.unexpected(i),this.eat(l.bracketL)?(h&&this.unexpected(h.start),a.internalSlots.push(this.flowParseObjectTypeInternalSlot(p,t))):a.indexers.push(this.flowParseObjectTypeIndexer(p,t,h));else if(this.match(l.parenL)||this.isRelational("<"))null!=i&&this.unexpected(i),h&&this.unexpected(h.start),a.callProperties.push(this.flowParseObjectTypeCallProperty(p,t));else{let e="init";if(this.isContextual("get")||this.isContextual("set")){const t=this.lookahead();t.type!==l.name&&t.type!==l.string&&t.type!==l.num||(e=this.state.value,this.next())}const r=this.flowParseObjectTypeProperty(p,t,i,h,e,n,null!=s?s:!u);null===r?(c=!0,o=this.state.lastTokStart):a.properties.push(r)}this.flowObjectTypeSemicolon(),!o||this.match(l.braceR)||this.match(l.braceBarR)||this.raise(o,$.UnexpectedExplicitInexactInObject)}this.expect(o),n&&(a.inexact=c);const p=this.finishNode(a,"ObjectTypeAnnotation");return this.state.inType=i,p}flowParseObjectTypeProperty(e,t,n,r,s,i,a){if(this.eat(l.ellipsis))return this.match(l.comma)||this.match(l.semi)||this.match(l.braceR)||this.match(l.braceBarR)?(i?a||this.raise(this.state.lastTokStart,$.InexactInsideExact):this.raise(this.state.lastTokStart,$.InexactInsideNonObject),r&&this.raise(r.start,$.InexactVariance),null):(i||this.raise(this.state.lastTokStart,$.UnexpectedSpreadType),null!=n&&this.unexpected(n),r&&this.raise(r.start,$.SpreadVariance),e.argument=this.flowParseType(),this.finishNode(e,"ObjectTypeSpreadProperty"));{e.key=this.flowParseObjectPropertyKey(),e.static=t,e.proto=null!=n,e.kind=s;let i=!1;return this.isRelational("<")||this.match(l.parenL)?(e.method=!0,null!=n&&this.unexpected(n),r&&this.unexpected(r.start),e.value=this.flowParseObjectTypeMethodish(this.startNodeAt(e.start,e.loc.start)),"get"!==s&&"set"!==s||this.flowCheckGetterSetterParams(e)):("init"!==s&&this.unexpected(),e.method=!1,this.eat(l.question)&&(i=!0),e.value=this.flowParseTypeInitialiser(),e.variance=r),e.optional=i,this.finishNode(e,"ObjectTypeProperty")}}flowCheckGetterSetterParams(e){const t="get"===e.kind?0:1,n=e.start;e.value.params.length+(e.value.rest?1:0)!==t&&("get"===e.kind?this.raise(n,E.BadGetterArity):this.raise(n,E.BadSetterArity)),"set"===e.kind&&e.value.rest&&this.raise(n,E.BadSetterRestParameter)}flowObjectTypeSemicolon(){this.eat(l.semi)||this.eat(l.comma)||this.match(l.braceR)||this.match(l.braceBarR)||this.unexpected()}flowParseQualifiedTypeIdentifier(e,t,n){e=e||this.state.start,t=t||this.state.startLoc;let r=n||this.flowParseRestrictedIdentifier(!0);for(;this.eat(l.dot);){const n=this.startNodeAt(e,t);n.qualification=r,n.id=this.flowParseRestrictedIdentifier(!0),r=this.finishNode(n,"QualifiedTypeIdentifier")}return r}flowParseGenericType(e,t,n){const r=this.startNodeAt(e,t);return r.typeParameters=null,r.id=this.flowParseQualifiedTypeIdentifier(e,t,n),this.isRelational("<")&&(r.typeParameters=this.flowParseTypeParameterInstantiation()),this.finishNode(r,"GenericTypeAnnotation")}flowParseTypeofType(){const e=this.startNode();return this.expect(l._typeof),e.argument=this.flowParsePrimaryType(),this.finishNode(e,"TypeofTypeAnnotation")}flowParseTupleType(){const e=this.startNode();for(e.types=[],this.expect(l.bracketL);this.state.pos<this.length&&!this.match(l.bracketR)&&(e.types.push(this.flowParseType()),!this.match(l.bracketR));)this.expect(l.comma);return this.expect(l.bracketR),this.finishNode(e,"TupleTypeAnnotation")}flowParseFunctionTypeParam(){let e=null,t=!1,n=null;const r=this.startNode(),s=this.lookahead();return s.type===l.colon||s.type===l.question?(e=this.parseIdentifier(),this.eat(l.question)&&(t=!0),n=this.flowParseTypeInitialiser()):n=this.flowParseType(),r.name=e,r.optional=t,r.typeAnnotation=n,this.finishNode(r,"FunctionTypeParam")}reinterpretTypeAsFunctionTypeParam(e){const t=this.startNodeAt(e.start,e.loc.start);return t.name=null,t.optional=!1,t.typeAnnotation=e,this.finishNode(t,"FunctionTypeParam")}flowParseFunctionTypeParams(e=[]){let t=null;for(;!this.match(l.parenR)&&!this.match(l.ellipsis);)e.push(this.flowParseFunctionTypeParam()),this.match(l.parenR)||this.expect(l.comma);return this.eat(l.ellipsis)&&(t=this.flowParseFunctionTypeParam()),{params:e,rest:t}}flowIdentToTypeAnnotation(e,t,n,r){switch(r.name){case"any":return this.finishNode(n,"AnyTypeAnnotation");case"bool":case"boolean":return this.finishNode(n,"BooleanTypeAnnotation");case"mixed":return this.finishNode(n,"MixedTypeAnnotation");case"empty":return this.finishNode(n,"EmptyTypeAnnotation");case"number":return this.finishNode(n,"NumberTypeAnnotation");case"string":return this.finishNode(n,"StringTypeAnnotation");case"symbol":return this.finishNode(n,"SymbolTypeAnnotation");default:return this.checkNotUnderscore(r.name),this.flowParseGenericType(e,t,r)}}flowParsePrimaryType(){const e=this.state.start,t=this.state.startLoc,n=this.startNode();let r,s,i=!1;const a=this.state.noAnonFunctionType;switch(this.state.type){case l.name:return this.isContextual("interface")?this.flowParseInterfaceType():this.flowIdentToTypeAnnotation(e,t,n,this.parseIdentifier());case l.braceL:return this.flowParseObjectType({allowStatic:!1,allowExact:!1,allowSpread:!0,allowProto:!1,allowInexact:!0});case l.braceBarL:return this.flowParseObjectType({allowStatic:!1,allowExact:!0,allowSpread:!0,allowProto:!1,allowInexact:!1});case l.bracketL:return this.state.noAnonFunctionType=!1,s=this.flowParseTupleType(),this.state.noAnonFunctionType=a,s;case l.relational:if("<"===this.state.value)return n.typeParameters=this.flowParseTypeParameterDeclaration(),this.expect(l.parenL),r=this.flowParseFunctionTypeParams(),n.params=r.params,n.rest=r.rest,this.expect(l.parenR),this.expect(l.arrow),n.returnType=this.flowParseType(),this.finishNode(n,"FunctionTypeAnnotation");break;case l.parenL:if(this.next(),!this.match(l.parenR)&&!this.match(l.ellipsis))if(this.match(l.name)){const e=this.lookahead().type;i=e!==l.question&&e!==l.colon}else i=!0;if(i){if(this.state.noAnonFunctionType=!1,s=this.flowParseType(),this.state.noAnonFunctionType=a,this.state.noAnonFunctionType||!(this.match(l.comma)||this.match(l.parenR)&&this.lookahead().type===l.arrow))return this.expect(l.parenR),s;this.eat(l.comma)}return r=s?this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(s)]):this.flowParseFunctionTypeParams(),n.params=r.params,n.rest=r.rest,this.expect(l.parenR),this.expect(l.arrow),n.returnType=this.flowParseType(),n.typeParameters=null,this.finishNode(n,"FunctionTypeAnnotation");case l.string:return this.parseLiteral(this.state.value,"StringLiteralTypeAnnotation");case l._true:case l._false:return n.value=this.match(l._true),this.next(),this.finishNode(n,"BooleanLiteralTypeAnnotation");case l.plusMin:if("-"===this.state.value){if(this.next(),this.match(l.num))return this.parseLiteral(-this.state.value,"NumberLiteralTypeAnnotation",n.start,n.loc.start);if(this.match(l.bigint))return this.parseLiteral(-this.state.value,"BigIntLiteralTypeAnnotation",n.start,n.loc.start);throw this.raise(this.state.start,$.UnexpectedSubtractionOperand)}throw this.unexpected();case l.num:return this.parseLiteral(this.state.value,"NumberLiteralTypeAnnotation");case l.bigint:return this.parseLiteral(this.state.value,"BigIntLiteralTypeAnnotation");case l._void:return this.next(),this.finishNode(n,"VoidTypeAnnotation");case l._null:return this.next(),this.finishNode(n,"NullLiteralTypeAnnotation");case l._this:return this.next(),this.finishNode(n,"ThisTypeAnnotation");case l.star:return this.next(),this.finishNode(n,"ExistsTypeAnnotation");default:if("typeof"===this.state.type.keyword)return this.flowParseTypeofType();if(this.state.type.keyword){const e=this.state.type.label;return this.next(),super.createIdentifier(n,e)}}throw this.unexpected()}flowParsePostfixType(){const e=this.state.start,t=this.state.startLoc;let n=this.flowParsePrimaryType();for(;this.match(l.bracketL)&&!this.canInsertSemicolon();){const r=this.startNodeAt(e,t);r.elementType=n,this.expect(l.bracketL),this.expect(l.bracketR),n=this.finishNode(r,"ArrayTypeAnnotation")}return n}flowParsePrefixType(){const e=this.startNode();return this.eat(l.question)?(e.typeAnnotation=this.flowParsePrefixType(),this.finishNode(e,"NullableTypeAnnotation")):this.flowParsePostfixType()}flowParseAnonFunctionWithoutParens(){const e=this.flowParsePrefixType();if(!this.state.noAnonFunctionType&&this.eat(l.arrow)){const t=this.startNodeAt(e.start,e.loc.start);return t.params=[this.reinterpretTypeAsFunctionTypeParam(e)],t.rest=null,t.returnType=this.flowParseType(),t.typeParameters=null,this.finishNode(t,"FunctionTypeAnnotation")}return e}flowParseIntersectionType(){const e=this.startNode();this.eat(l.bitwiseAND);const t=this.flowParseAnonFunctionWithoutParens();for(e.types=[t];this.eat(l.bitwiseAND);)e.types.push(this.flowParseAnonFunctionWithoutParens());return 1===e.types.length?t:this.finishNode(e,"IntersectionTypeAnnotation")}flowParseUnionType(){const e=this.startNode();this.eat(l.bitwiseOR);const t=this.flowParseIntersectionType();for(e.types=[t];this.eat(l.bitwiseOR);)e.types.push(this.flowParseIntersectionType());return 1===e.types.length?t:this.finishNode(e,"UnionTypeAnnotation")}flowParseType(){const e=this.state.inType;this.state.inType=!0;const t=this.flowParseUnionType();return this.state.inType=e,this.state.exprAllowed=this.state.exprAllowed||this.state.noAnonFunctionType,t}flowParseTypeOrImplicitInstantiation(){if(this.state.type===l.name&&"_"===this.state.value){const e=this.state.start,t=this.state.startLoc,n=this.parseIdentifier();return this.flowParseGenericType(e,t,n)}return this.flowParseType()}flowParseTypeAnnotation(){const e=this.startNode();return e.typeAnnotation=this.flowParseTypeInitialiser(),this.finishNode(e,"TypeAnnotation")}flowParseTypeAnnotatableIdentifier(e){const t=e?this.parseIdentifier():this.flowParseRestrictedIdentifier();return this.match(l.colon)&&(t.typeAnnotation=this.flowParseTypeAnnotation(),this.resetEndLocation(t)),t}typeCastToParameter(e){return e.expression.typeAnnotation=e.typeAnnotation,this.resetEndLocation(e.expression,e.typeAnnotation.end,e.typeAnnotation.loc.end),e.expression}flowParseVariance(){let e=null;return this.match(l.plusMin)&&(e=this.startNode(),"+"===this.state.value?e.kind="plus":e.kind="minus",this.next(),this.finishNode(e,"Variance")),e}parseFunctionBody(e,t,n=!1){return t?this.forwardNoArrowParamsConversionAt(e,(()=>super.parseFunctionBody(e,!0,n))):super.parseFunctionBody(e,!1,n)}parseFunctionBodyAndFinish(e,t,n=!1){if(this.match(l.colon)){const t=this.startNode();[t.typeAnnotation,e.predicate]=this.flowParseTypeAndPredicateInitialiser(),e.returnType=t.typeAnnotation?this.finishNode(t,"TypeAnnotation"):null}super.parseFunctionBodyAndFinish(e,t,n)}parseStatement(e,t){if(this.state.strict&&this.match(l.name)&&"interface"===this.state.value){const e=this.lookahead();if(e.type===l.name||j(e.value)){const e=this.startNode();return this.next(),this.flowParseInterface(e)}}else if(this.shouldParseEnums()&&this.isContextual("enum")){const e=this.startNode();return this.next(),this.flowParseEnumDeclaration(e)}const n=super.parseStatement(e,t);return void 0!==this.flowPragma||this.isValidDirective(n)||(this.flowPragma=null),n}parseExpressionStatement(e,t){if("Identifier"===t.type)if("declare"===t.name){if(this.match(l._class)||this.match(l.name)||this.match(l._function)||this.match(l._var)||this.match(l._export))return this.flowParseDeclare(e)}else if(this.match(l.name)){if("interface"===t.name)return this.flowParseInterface(e);if("type"===t.name)return this.flowParseTypeAlias(e);if("opaque"===t.name)return this.flowParseOpaqueType(e,!1)}return super.parseExpressionStatement(e,t)}shouldParseExportDeclaration(){return this.isContextual("type")||this.isContextual("interface")||this.isContextual("opaque")||this.shouldParseEnums()&&this.isContextual("enum")||super.shouldParseExportDeclaration()}isExportDefaultSpecifier(){return(!this.match(l.name)||!("type"===this.state.value||"interface"===this.state.value||"opaque"===this.state.value||this.shouldParseEnums()&&"enum"===this.state.value))&&super.isExportDefaultSpecifier()}parseExportDefaultExpression(){if(this.shouldParseEnums()&&this.isContextual("enum")){const e=this.startNode();return this.next(),this.flowParseEnumDeclaration(e)}return super.parseExportDefaultExpression()}parseConditional(e,t,n,r){if(!this.match(l.question))return e;if(r){const s=this.tryParse((()=>super.parseConditional(e,t,n)));return s.node?(s.error&&(this.state=s.failState),s.node):(r.start=s.error.pos||this.state.start,e)}this.expect(l.question);const s=this.state.clone(),i=this.state.noArrowAt,a=this.startNodeAt(t,n);let{consequent:o,failed:u}=this.tryParseConditionalConsequent(),[c,p]=this.getArrowLikeExpressions(o);if(u||p.length>0){const e=[...i];if(p.length>0){this.state=s,this.state.noArrowAt=e;for(let t=0;t<p.length;t++)e.push(p[t].start);({consequent:o,failed:u}=this.tryParseConditionalConsequent()),[c,p]=this.getArrowLikeExpressions(o)}u&&c.length>1&&this.raise(s.start,$.AmbiguousConditionalArrow),u&&1===c.length&&(this.state=s,this.state.noArrowAt=e.concat(c[0].start),({consequent:o,failed:u}=this.tryParseConditionalConsequent()))}return this.getArrowLikeExpressions(o,!0),this.state.noArrowAt=i,this.expect(l.colon),a.test=e,a.consequent=o,a.alternate=this.forwardNoArrowParamsConversionAt(a,(()=>this.parseMaybeAssign(void 0,void 0,void 0))),this.finishNode(a,"ConditionalExpression")}tryParseConditionalConsequent(){this.state.noArrowParamsConversionAt.push(this.state.start);const e=this.parseMaybeAssignAllowIn(),t=!this.match(l.colon);return this.state.noArrowParamsConversionAt.pop(),{consequent:e,failed:t}}getArrowLikeExpressions(e,t){const n=[e],r=[];for(;0!==n.length;){const e=n.pop();"ArrowFunctionExpression"===e.type?(e.typeParameters||!e.returnType?this.finishArrowValidation(e):r.push(e),n.push(e.body)):"ConditionalExpression"===e.type&&(n.push(e.consequent),n.push(e.alternate))}return t?(r.forEach((e=>this.finishArrowValidation(e))),[r,[]]):function(e,t){const n=[],r=[];for(let s=0;s<e.length;s++)(t(e[s])?n:r).push(e[s]);return[n,r]}(r,(e=>e.params.every((e=>this.isAssignable(e,!0)))))}finishArrowValidation(e){var t;this.toAssignableList(e.params,null==(t=e.extra)?void 0:t.trailingComma),this.scope.enter(6),super.checkParams(e,!1,!0),this.scope.exit()}forwardNoArrowParamsConversionAt(e,t){let n;return-1!==this.state.noArrowParamsConversionAt.indexOf(e.start)?(this.state.noArrowParamsConversionAt.push(this.state.start),n=t(),this.state.noArrowParamsConversionAt.pop()):n=t(),n}parseParenItem(e,t,n){if(e=super.parseParenItem(e,t,n),this.eat(l.question)&&(e.optional=!0,this.resetEndLocation(e)),this.match(l.colon)){const r=this.startNodeAt(t,n);return r.expression=e,r.typeAnnotation=this.flowParseTypeAnnotation(),this.finishNode(r,"TypeCastExpression")}return e}assertModuleNodeAllowed(e){"ImportDeclaration"===e.type&&("type"===e.importKind||"typeof"===e.importKind)||"ExportNamedDeclaration"===e.type&&"type"===e.exportKind||"ExportAllDeclaration"===e.type&&"type"===e.exportKind||super.assertModuleNodeAllowed(e)}parseExport(e){const t=super.parseExport(e);return"ExportNamedDeclaration"!==t.type&&"ExportAllDeclaration"!==t.type||(t.exportKind=t.exportKind||"value"),t}parseExportDeclaration(e){if(this.isContextual("type")){e.exportKind="type";const t=this.startNode();return this.next(),this.match(l.braceL)?(e.specifiers=this.parseExportSpecifiers(),this.parseExportFrom(e),null):this.flowParseTypeAlias(t)}if(this.isContextual("opaque")){e.exportKind="type";const t=this.startNode();return this.next(),this.flowParseOpaqueType(t,!1)}if(this.isContextual("interface")){e.exportKind="type";const t=this.startNode();return this.next(),this.flowParseInterface(t)}if(this.shouldParseEnums()&&this.isContextual("enum")){e.exportKind="value";const t=this.startNode();return this.next(),this.flowParseEnumDeclaration(t)}return super.parseExportDeclaration(e)}eatExportStar(e){return!!super.eatExportStar(...arguments)||!(!this.isContextual("type")||this.lookahead().type!==l.star)&&(e.exportKind="type",this.next(),this.next(),!0)}maybeParseExportNamespaceSpecifier(e){const t=this.state.start,n=super.maybeParseExportNamespaceSpecifier(e);return n&&"type"===e.exportKind&&this.unexpected(t),n}parseClassId(e,t,n){super.parseClassId(e,t,n),this.isRelational("<")&&(e.typeParameters=this.flowParseTypeParameterDeclaration())}parseClassMember(e,t,n){const r=this.state.start;if(this.isContextual("declare")){if(this.parseClassMemberFromModifier(e,t))return;t.declare=!0}super.parseClassMember(e,t,n),t.declare&&("ClassProperty"!==t.type&&"ClassPrivateProperty"!==t.type?this.raise(r,$.DeclareClassElement):t.value&&this.raise(t.value.start,$.DeclareClassFieldInitializer))}getTokenFromCode(e){const t=this.input.charCodeAt(this.state.pos+1);return 123===e&&124===t?this.finishOp(l.braceBarL,2):!this.state.inType||62!==e&&60!==e?this.state.inType&&63===e?this.finishOp(l.question,1):function(e,t){return 64===e&&64===t}(e,t)?(this.state.isIterator=!0,super.readWord()):super.getTokenFromCode(e):this.finishOp(l.relational,1)}isAssignable(e,t){switch(e.type){case"Identifier":case"ObjectPattern":case"ArrayPattern":case"AssignmentPattern":return!0;case"ObjectExpression":{const t=e.properties.length-1;return e.properties.every(((e,n)=>"ObjectMethod"!==e.type&&(n===t||"SpreadElement"===e.type)&&this.isAssignable(e)))}case"ObjectProperty":return this.isAssignable(e.value);case"SpreadElement":return this.isAssignable(e.argument);case"ArrayExpression":return e.elements.every((e=>this.isAssignable(e)));case"AssignmentExpression":return"="===e.operator;case"ParenthesizedExpression":case"TypeCastExpression":return this.isAssignable(e.expression);case"MemberExpression":case"OptionalMemberExpression":return!t;default:return!1}}toAssignable(e){return"TypeCastExpression"===e.type?super.toAssignable(this.typeCastToParameter(e)):super.toAssignable(e)}toAssignableList(e,t){for(let t=0;t<e.length;t++){const n=e[t];"TypeCastExpression"===(null==n?void 0:n.type)&&(e[t]=this.typeCastToParameter(n))}return super.toAssignableList(e,t)}toReferencedList(e,t){for(let r=0;r<e.length;r++){var n;const s=e[r];s&&"TypeCastExpression"===s.type&&!(null==(n=s.extra)?void 0:n.parenthesized)&&(e.length>1||!t)&&this.raise(s.typeAnnotation.start,$.TypeCastInPattern)}return e}parseArrayLike(e,t,n,r){const s=super.parseArrayLike(e,t,n,r);return t&&!this.state.maybeInArrowParameters&&this.toReferencedList(s.elements),s}checkLVal(e,t=64,n,r){if("TypeCastExpression"!==e.type)return super.checkLVal(e,t,n,r)}parseClassProperty(e){return this.match(l.colon)&&(e.typeAnnotation=this.flowParseTypeAnnotation()),super.parseClassProperty(e)}parseClassPrivateProperty(e){return this.match(l.colon)&&(e.typeAnnotation=this.flowParseTypeAnnotation()),super.parseClassPrivateProperty(e)}isClassMethod(){return this.isRelational("<")||super.isClassMethod()}isClassProperty(){return this.match(l.colon)||super.isClassProperty()}isNonstaticConstructor(e){return!this.match(l.colon)&&super.isNonstaticConstructor(e)}pushClassMethod(e,t,n,r,s,i){t.variance&&this.unexpected(t.variance.start),delete t.variance,this.isRelational("<")&&(t.typeParameters=this.flowParseTypeParameterDeclaration()),super.pushClassMethod(e,t,n,r,s,i)}pushClassPrivateMethod(e,t,n,r){t.variance&&this.unexpected(t.variance.start),delete t.variance,this.isRelational("<")&&(t.typeParameters=this.flowParseTypeParameterDeclaration()),super.pushClassPrivateMethod(e,t,n,r)}parseClassSuper(e){if(super.parseClassSuper(e),e.superClass&&this.isRelational("<")&&(e.superTypeParameters=this.flowParseTypeParameterInstantiation()),this.isContextual("implements")){this.next();const t=e.implements=[];do{const e=this.startNode();e.id=this.flowParseRestrictedIdentifier(!0),this.isRelational("<")?e.typeParameters=this.flowParseTypeParameterInstantiation():e.typeParameters=null,t.push(this.finishNode(e,"ClassImplements"))}while(this.eat(l.comma))}}parsePropertyName(e,t){const n=this.flowParseVariance(),r=super.parsePropertyName(e,t);return e.variance=n,r}parseObjPropValue(e,t,n,r,s,i,a,o){let u;e.variance&&this.unexpected(e.variance.start),delete e.variance,this.isRelational("<")&&!a&&(u=this.flowParseTypeParameterDeclaration(),this.match(l.parenL)||this.unexpected()),super.parseObjPropValue(e,t,n,r,s,i,a,o),u&&((e.value||e).typeParameters=u)}parseAssignableListItemTypes(e){return this.eat(l.question)&&("Identifier"!==e.type&&this.raise(e.start,$.OptionalBindingPattern),e.optional=!0),this.match(l.colon)&&(e.typeAnnotation=this.flowParseTypeAnnotation()),this.resetEndLocation(e),e}parseMaybeDefault(e,t,n){const r=super.parseMaybeDefault(e,t,n);return"AssignmentPattern"===r.type&&r.typeAnnotation&&r.right.start<r.typeAnnotation.start&&this.raise(r.typeAnnotation.start,$.TypeBeforeInitializer),r}shouldParseDefaultImport(e){return V(e)?W(this.state):super.shouldParseDefaultImport(e)}parseImportSpecifierLocal(e,t,n,r){t.local=V(e)?this.flowParseRestrictedIdentifier(!0,!0):this.parseIdentifier(),this.checkLVal(t.local,9,void 0,r),e.specifiers.push(this.finishNode(t,n))}maybeParseDefaultImportSpecifier(e){e.importKind="value";let t=null;if(this.match(l._typeof)?t="typeof":this.isContextual("type")&&(t="type"),t){const n=this.lookahead();"type"===t&&n.type===l.star&&this.unexpected(n.start),(W(n)||n.type===l.braceL||n.type===l.star)&&(this.next(),e.importKind=t)}return super.maybeParseDefaultImportSpecifier(e)}parseImportSpecifier(e){const t=this.startNode(),n=this.state.start,r=this.parseModuleExportName();let s=null;"Identifier"===r.type&&("type"===r.name?s="type":"typeof"===r.name&&(s="typeof"));let i=!1;if(this.isContextual("as")&&!this.isLookaheadContextual("as")){const e=this.parseIdentifier(!0);null===s||this.match(l.name)||this.state.type.keyword?(t.imported=r,t.importKind=null,t.local=this.parseIdentifier()):(t.imported=e,t.importKind=s,t.local=e.__clone())}else if(null!==s&&(this.match(l.name)||this.state.type.keyword))t.imported=this.parseIdentifier(!0),t.importKind=s,this.eatContextual("as")?t.local=this.parseIdentifier():(i=!0,t.local=t.imported.__clone());else{if("StringLiteral"===r.type)throw this.raise(t.start,E.ImportBindingIsString,r.value);i=!0,t.imported=r,t.importKind=null,t.local=t.imported.__clone()}const a=V(e),o=V(t);a&&o&&this.raise(n,$.ImportTypeShorthandOnlyInPureImport),(a||o)&&this.checkReservedType(t.local.name,t.local.start,!0),!i||a||o||this.checkReservedWord(t.local.name,t.start,!0,!0),this.checkLVal(t.local,9,void 0,"import specifier"),e.specifiers.push(this.finishNode(t,"ImportSpecifier"))}parseFunctionParams(e,t){const n=e.kind;"get"!==n&&"set"!==n&&this.isRelational("<")&&(e.typeParameters=this.flowParseTypeParameterDeclaration()),super.parseFunctionParams(e,t)}parseVarId(e,t){super.parseVarId(e,t),this.match(l.colon)&&(e.id.typeAnnotation=this.flowParseTypeAnnotation(),this.resetEndLocation(e.id))}parseAsyncArrowFromCallExpression(e,t){if(this.match(l.colon)){const t=this.state.noAnonFunctionType;this.state.noAnonFunctionType=!0,e.returnType=this.flowParseTypeAnnotation(),this.state.noAnonFunctionType=t}return super.parseAsyncArrowFromCallExpression(e,t)}shouldParseAsyncArrow(){return this.match(l.colon)||super.shouldParseAsyncArrow()}parseMaybeAssign(e,t,n){var r;let s,i=null;if(this.hasPlugin("jsx")&&(this.match(l.jsxTagStart)||this.isRelational("<"))){if(i=this.state.clone(),s=this.tryParse((()=>super.parseMaybeAssign(e,t,n)),i),!s.error)return s.node;const{context:r}=this.state;r[r.length-1]===b.j_oTag?r.length-=2:r[r.length-1]===b.j_expr&&(r.length-=1)}if((null==(r=s)?void 0:r.error)||this.isRelational("<")){var a,o;let r;i=i||this.state.clone();const u=this.tryParse((s=>{var i;r=this.flowParseTypeParameterDeclaration();const a=this.forwardNoArrowParamsConversionAt(r,(()=>{const s=super.parseMaybeAssign(e,t,n);return this.resetStartLocationFromNode(s,r),s}));"ArrowFunctionExpression"!==a.type&&(null==(i=a.extra)?void 0:i.parenthesized)&&s();const o=this.maybeUnwrapTypeCastExpression(a);return o.typeParameters=r,this.resetStartLocationFromNode(o,r),a}),i);let c=null;if(u.node&&"ArrowFunctionExpression"===this.maybeUnwrapTypeCastExpression(u.node).type){if(!u.error&&!u.aborted)return u.node.async&&this.raise(r.start,$.UnexpectedTypeParameterBeforeAsyncArrowFunction),u.node;c=u.node}if(null==(a=s)?void 0:a.node)return this.state=s.failState,s.node;if(c)return this.state=u.failState,c;if(null==(o=s)?void 0:o.thrown)throw s.error;if(u.thrown)throw u.error;throw this.raise(r.start,$.UnexpectedTokenAfterTypeParameter)}return super.parseMaybeAssign(e,t,n)}parseArrow(e){if(this.match(l.colon)){const t=this.tryParse((()=>{const t=this.state.noAnonFunctionType;this.state.noAnonFunctionType=!0;const n=this.startNode();return[n.typeAnnotation,e.predicate]=this.flowParseTypeAndPredicateInitialiser(),this.state.noAnonFunctionType=t,this.canInsertSemicolon()&&this.unexpected(),this.match(l.arrow)||this.unexpected(),n}));if(t.thrown)return null;t.error&&(this.state=t.failState),e.returnType=t.node.typeAnnotation?this.finishNode(t.node,"TypeAnnotation"):null}return super.parseArrow(e)}shouldParseArrow(){return this.match(l.colon)||super.shouldParseArrow()}setArrowFunctionParameters(e,t){-1!==this.state.noArrowParamsConversionAt.indexOf(e.start)?e.params=t:super.setArrowFunctionParameters(e,t)}checkParams(e,t,n){if(!n||-1===this.state.noArrowParamsConversionAt.indexOf(e.start))return super.checkParams(...arguments)}parseParenAndDistinguishExpression(e){return super.parseParenAndDistinguishExpression(e&&-1===this.state.noArrowAt.indexOf(this.state.start))}parseSubscripts(e,t,n,r){if("Identifier"===e.type&&"async"===e.name&&-1!==this.state.noArrowAt.indexOf(t)){this.next();const r=this.startNodeAt(t,n);r.callee=e,r.arguments=this.parseCallExpressionArguments(l.parenR,!1),e=this.finishNode(r,"CallExpression")}else if("Identifier"===e.type&&"async"===e.name&&this.isRelational("<")){const s=this.state.clone(),i=this.tryParse((e=>this.parseAsyncArrowWithTypeParameters(t,n)||e()),s);if(!i.error&&!i.aborted)return i.node;const a=this.tryParse((()=>super.parseSubscripts(e,t,n,r)),s);if(a.node&&!a.error)return a.node;if(i.node)return this.state=i.failState,i.node;if(a.node)return this.state=a.failState,a.node;throw i.error||a.error}return super.parseSubscripts(e,t,n,r)}parseSubscript(e,t,n,r,s){if(this.match(l.questionDot)&&this.isLookaheadToken_lt()){if(s.optionalChainMember=!0,r)return s.stop=!0,e;this.next();const i=this.startNodeAt(t,n);return i.callee=e,i.typeArguments=this.flowParseTypeParameterInstantiation(),this.expect(l.parenL),i.arguments=this.parseCallExpressionArguments(l.parenR,!1),i.optional=!0,this.finishCallExpression(i,!0)}if(!r&&this.shouldParseTypes()&&this.isRelational("<")){const r=this.startNodeAt(t,n);r.callee=e;const i=this.tryParse((()=>(r.typeArguments=this.flowParseTypeParameterInstantiationCallOrNew(),this.expect(l.parenL),r.arguments=this.parseCallExpressionArguments(l.parenR,!1),s.optionalChainMember&&(r.optional=!1),this.finishCallExpression(r,s.optionalChainMember))));if(i.node)return i.error&&(this.state=i.failState),i.node}return super.parseSubscript(e,t,n,r,s)}parseNewArguments(e){let t=null;this.shouldParseTypes()&&this.isRelational("<")&&(t=this.tryParse((()=>this.flowParseTypeParameterInstantiationCallOrNew())).node),e.typeArguments=t,super.parseNewArguments(e)}parseAsyncArrowWithTypeParameters(e,t){const n=this.startNodeAt(e,t);if(this.parseFunctionParams(n),this.parseArrow(n))return this.parseArrowExpression(n,void 0,!0)}readToken_mult_modulo(e){const t=this.input.charCodeAt(this.state.pos+1);if(42===e&&47===t&&this.state.hasFlowComment)return this.state.hasFlowComment=!1,this.state.pos+=2,void this.nextToken();super.readToken_mult_modulo(e)}readToken_pipe_amp(e){const t=this.input.charCodeAt(this.state.pos+1);124!==e||125!==t?super.readToken_pipe_amp(e):this.finishOp(l.braceBarR,2)}parseTopLevel(e,t){const n=super.parseTopLevel(e,t);return this.state.hasFlowComment&&this.raise(this.state.pos,$.UnterminatedFlowComment),n}skipBlockComment(){if(this.hasPlugin("flowComments")&&this.skipFlowComment())return this.state.hasFlowComment&&this.unexpected(null,$.NestedFlowComment),this.hasFlowCommentCompletion(),this.state.pos+=this.skipFlowComment(),void(this.state.hasFlowComment=!0);if(this.state.hasFlowComment){const e=this.input.indexOf("*-/",this.state.pos+=2);if(-1===e)throw this.raise(this.state.pos-2,E.UnterminatedComment);this.state.pos=e+3}else super.skipBlockComment()}skipFlowComment(){const{pos:e}=this.state;let t=2;for(;[32,9].includes(this.input.charCodeAt(e+t));)t++;const n=this.input.charCodeAt(t+e),r=this.input.charCodeAt(t+e+1);return 58===n&&58===r?t+2:"flow-include"===this.input.slice(t+e,t+e+12)?t+12:58===n&&58!==r&&t}hasFlowCommentCompletion(){if(-1===this.input.indexOf("*/",this.state.pos))throw this.raise(this.state.pos,E.UnterminatedComment)}flowEnumErrorBooleanMemberNotInitialized(e,{enumName:t,memberName:n}){this.raise(e,$.EnumBooleanMemberNotInitialized,n,t)}flowEnumErrorInvalidMemberName(e,{enumName:t,memberName:n}){const r=n[0].toUpperCase()+n.slice(1);this.raise(e,$.EnumInvalidMemberName,n,r,t)}flowEnumErrorDuplicateMemberName(e,{enumName:t,memberName:n}){this.raise(e,$.EnumDuplicateMemberName,n,t)}flowEnumErrorInconsistentMemberValues(e,{enumName:t}){this.raise(e,$.EnumInconsistentMemberValues,t)}flowEnumErrorInvalidExplicitType(e,{enumName:t,suppliedType:n}){return this.raise(e,null===n?$.EnumInvalidExplicitTypeUnknownSupplied:$.EnumInvalidExplicitType,t,n)}flowEnumErrorInvalidMemberInitializer(e,{enumName:t,explicitType:n,memberName:r}){let s=null;switch(n){case"boolean":case"number":case"string":s=$.EnumInvalidMemberInitializerPrimaryType;break;case"symbol":s=$.EnumInvalidMemberInitializerSymbolType;break;default:s=$.EnumInvalidMemberInitializerUnknownType}return this.raise(e,s,t,r,n)}flowEnumErrorNumberMemberNotInitialized(e,{enumName:t,memberName:n}){this.raise(e,$.EnumNumberMemberNotInitialized,t,n)}flowEnumErrorStringMemberInconsistentlyInitailized(e,{enumName:t}){this.raise(e,$.EnumStringMemberInconsistentlyInitailized,t)}flowEnumMemberInit(){const e=this.state.start,t=()=>this.match(l.comma)||this.match(l.braceR);switch(this.state.type){case l.num:{const n=this.parseLiteral(this.state.value,"NumericLiteral");return t()?{type:"number",pos:n.start,value:n}:{type:"invalid",pos:e}}case l.string:{const n=this.parseLiteral(this.state.value,"StringLiteral");return t()?{type:"string",pos:n.start,value:n}:{type:"invalid",pos:e}}case l._true:case l._false:{const n=this.parseBooleanLiteral();return t()?{type:"boolean",pos:n.start,value:n}:{type:"invalid",pos:e}}default:return{type:"invalid",pos:e}}}flowEnumMemberRaw(){const e=this.state.start;return{id:this.parseIdentifier(!0),init:this.eat(l.eq)?this.flowEnumMemberInit():{type:"none",pos:e}}}flowEnumCheckExplicitTypeMismatch(e,t,n){const{explicitType:r}=t;null!==r&&r!==n&&this.flowEnumErrorInvalidMemberInitializer(e,t)}flowEnumMembers({enumName:e,explicitType:t}){const n=new Set,r={booleanMembers:[],numberMembers:[],stringMembers:[],defaultedMembers:[]};for(;!this.match(l.braceR);){const s=this.startNode(),{id:i,init:a}=this.flowEnumMemberRaw(),o=i.name;if(""===o)continue;/^[a-z]/.test(o)&&this.flowEnumErrorInvalidMemberName(i.start,{enumName:e,memberName:o}),n.has(o)&&this.flowEnumErrorDuplicateMemberName(i.start,{enumName:e,memberName:o}),n.add(o);const u={enumName:e,explicitType:t,memberName:o};switch(s.id=i,a.type){case"boolean":this.flowEnumCheckExplicitTypeMismatch(a.pos,u,"boolean"),s.init=a.value,r.booleanMembers.push(this.finishNode(s,"EnumBooleanMember"));break;case"number":this.flowEnumCheckExplicitTypeMismatch(a.pos,u,"number"),s.init=a.value,r.numberMembers.push(this.finishNode(s,"EnumNumberMember"));break;case"string":this.flowEnumCheckExplicitTypeMismatch(a.pos,u,"string"),s.init=a.value,r.stringMembers.push(this.finishNode(s,"EnumStringMember"));break;case"invalid":throw this.flowEnumErrorInvalidMemberInitializer(a.pos,u);case"none":switch(t){case"boolean":this.flowEnumErrorBooleanMemberNotInitialized(a.pos,u);break;case"number":this.flowEnumErrorNumberMemberNotInitialized(a.pos,u);break;default:r.defaultedMembers.push(this.finishNode(s,"EnumDefaultedMember"))}}this.match(l.braceR)||this.expect(l.comma)}return r}flowEnumStringMembers(e,t,{enumName:n}){if(0===e.length)return t;if(0===t.length)return e;if(t.length>e.length){for(let t=0;t<e.length;t++){const r=e[t];this.flowEnumErrorStringMemberInconsistentlyInitailized(r.start,{enumName:n})}return t}for(let e=0;e<t.length;e++){const r=t[e];this.flowEnumErrorStringMemberInconsistentlyInitailized(r.start,{enumName:n})}return e}flowEnumParseExplicitType({enumName:e}){if(this.eatContextual("of")){if(!this.match(l.name))throw this.flowEnumErrorInvalidExplicitType(this.state.start,{enumName:e,suppliedType:null});const{value:t}=this.state;return this.next(),"boolean"!==t&&"number"!==t&&"string"!==t&&"symbol"!==t&&this.flowEnumErrorInvalidExplicitType(this.state.start,{enumName:e,suppliedType:t}),t}return null}flowEnumBody(e,{enumName:t,nameLoc:n}){const r=this.flowEnumParseExplicitType({enumName:t});this.expect(l.braceL);const s=this.flowEnumMembers({enumName:t,explicitType:r});switch(r){case"boolean":return e.explicitType=!0,e.members=s.booleanMembers,this.expect(l.braceR),this.finishNode(e,"EnumBooleanBody");case"number":return e.explicitType=!0,e.members=s.numberMembers,this.expect(l.braceR),this.finishNode(e,"EnumNumberBody");case"string":return e.explicitType=!0,e.members=this.flowEnumStringMembers(s.stringMembers,s.defaultedMembers,{enumName:t}),this.expect(l.braceR),this.finishNode(e,"EnumStringBody");case"symbol":return e.members=s.defaultedMembers,this.expect(l.braceR),this.finishNode(e,"EnumSymbolBody");default:{const r=()=>(e.members=[],this.expect(l.braceR),this.finishNode(e,"EnumStringBody"));e.explicitType=!1;const i=s.booleanMembers.length,a=s.numberMembers.length,o=s.stringMembers.length,u=s.defaultedMembers.length;if(i||a||o||u){if(i||a){if(!a&&!o&&i>=u){for(let e=0,n=s.defaultedMembers;e<n.length;e++){const r=n[e];this.flowEnumErrorBooleanMemberNotInitialized(r.start,{enumName:t,memberName:r.id.name})}return e.members=s.booleanMembers,this.expect(l.braceR),this.finishNode(e,"EnumBooleanBody")}if(!i&&!o&&a>=u){for(let e=0,n=s.defaultedMembers;e<n.length;e++){const r=n[e];this.flowEnumErrorNumberMemberNotInitialized(r.start,{enumName:t,memberName:r.id.name})}return e.members=s.numberMembers,this.expect(l.braceR),this.finishNode(e,"EnumNumberBody")}return this.flowEnumErrorInconsistentMemberValues(n,{enumName:t}),r()}return e.members=this.flowEnumStringMembers(s.stringMembers,s.defaultedMembers,{enumName:t}),this.expect(l.braceR),this.finishNode(e,"EnumStringBody")}return r()}}}flowParseEnumDeclaration(e){const t=this.parseIdentifier();return e.id=t,e.body=this.flowEnumBody(this.startNode(),{enumName:t.name,nameLoc:t.start}),this.finishNode(e,"EnumDeclaration")}updateContext(e){this.match(l.name)&&"of"===this.state.value&&e===l.name&&"interface"===this.input.slice(this.state.lastTokStart,this.state.lastTokEnd)?this.state.exprAllowed=!1:super.updateContext(e)}isLookaheadToken_lt(){const e=this.nextTokenStart();if(60===this.input.charCodeAt(e)){const t=this.input.charCodeAt(e+1);return 60!==t&&61!==t}return!1}maybeUnwrapTypeCastExpression(e){return"TypeCastExpression"===e.type?e.expression:e}},typescript:e=>class extends e{getScopeHandler(){return ne}tsIsIdentifier(){return this.match(l.name)}tsNextTokenCanFollowModifier(){return this.next(),!(this.hasPrecedingLineBreak()||this.match(l.parenL)||this.match(l.parenR)||this.match(l.colon)||this.match(l.eq)||this.match(l.question)||this.match(l.bang))}tsParseModifier(e){if(!this.match(l.name))return;const t=this.state.value;return-1!==e.indexOf(t)&&this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))?t:void 0}tsParseModifiers(e,t){for(;;){const n=this.state.start,r=this.tsParseModifier(t);if(!r)break;Object.hasOwnProperty.call(e,r)&&this.raise(n,oe.DuplicateModifier,r),e[r]=!0}}tsIsListTerminator(e){switch(e){case"EnumMembers":case"TypeMembers":return this.match(l.braceR);case"HeritageClauseElement":return this.match(l.braceL);case"TupleElementTypes":return this.match(l.bracketR);case"TypeParametersOrArguments":return this.isRelational(">")}throw new Error("Unreachable")}tsParseList(e,t){const n=[];for(;!this.tsIsListTerminator(e);)n.push(t());return n}tsParseDelimitedList(e,t){return ie(this.tsParseDelimitedListWorker(e,t,!0))}tsParseDelimitedListWorker(e,t,n){const r=[];for(;!this.tsIsListTerminator(e);){const s=t();if(null==s)return;if(r.push(s),!this.eat(l.comma)){if(this.tsIsListTerminator(e))break;return void(n&&this.expect(l.comma))}}return r}tsParseBracketedList(e,t,n,r){r||(n?this.expect(l.bracketL):this.expectRelational("<"));const s=this.tsParseDelimitedList(e,t);return n?this.expect(l.bracketR):this.expectRelational(">"),s}tsParseImportType(){const e=this.startNode();return this.expect(l._import),this.expect(l.parenL),this.match(l.string)||this.raise(this.state.start,oe.UnsupportedImportTypeArgument),e.argument=this.parseExprAtom(),this.expect(l.parenR),this.eat(l.dot)&&(e.qualifier=this.tsParseEntityName(!0)),this.isRelational("<")&&(e.typeParameters=this.tsParseTypeArguments()),this.finishNode(e,"TSImportType")}tsParseEntityName(e){let t=this.parseIdentifier();for(;this.eat(l.dot);){const n=this.startNodeAtNode(t);n.left=t,n.right=this.parseIdentifier(e),t=this.finishNode(n,"TSQualifiedName")}return t}tsParseTypeReference(){const e=this.startNode();return e.typeName=this.tsParseEntityName(!1),!this.hasPrecedingLineBreak()&&this.isRelational("<")&&(e.typeParameters=this.tsParseTypeArguments()),this.finishNode(e,"TSTypeReference")}tsParseThisTypePredicate(e){this.next();const t=this.startNodeAtNode(e);return t.parameterName=e,t.typeAnnotation=this.tsParseTypeAnnotation(!1),this.finishNode(t,"TSTypePredicate")}tsParseThisTypeNode(){const e=this.startNode();return this.next(),this.finishNode(e,"TSThisType")}tsParseTypeQuery(){const e=this.startNode();return this.expect(l._typeof),this.match(l._import)?e.exprName=this.tsParseImportType():e.exprName=this.tsParseEntityName(!0),this.finishNode(e,"TSTypeQuery")}tsParseTypeParameter(){const e=this.startNode();return e.name=this.parseIdentifierName(e.start),e.constraint=this.tsEatThenParseType(l._extends),e.default=this.tsEatThenParseType(l.eq),this.finishNode(e,"TSTypeParameter")}tsTryParseTypeParameters(){if(this.isRelational("<"))return this.tsParseTypeParameters()}tsParseTypeParameters(){const e=this.startNode();return this.isRelational("<")||this.match(l.jsxTagStart)?this.next():this.unexpected(),e.params=this.tsParseBracketedList("TypeParametersOrArguments",this.tsParseTypeParameter.bind(this),!1,!0),0===e.params.length&&this.raise(e.start,oe.EmptyTypeParameters),this.finishNode(e,"TSTypeParameterDeclaration")}tsTryNextParseConstantContext(){return this.lookahead().type===l._const?(this.next(),this.tsParseTypeReference()):null}tsFillSignature(e,t){const n=e===l.arrow;t.typeParameters=this.tsTryParseTypeParameters(),this.expect(l.parenL),t.parameters=this.tsParseBindingListForSignature(),(n||this.match(e))&&(t.typeAnnotation=this.tsParseTypeOrTypePredicateAnnotation(e))}tsParseBindingListForSignature(){return this.parseBindingList(l.parenR,41).map((e=>("Identifier"!==e.type&&"RestElement"!==e.type&&"ObjectPattern"!==e.type&&"ArrayPattern"!==e.type&&this.raise(e.start,oe.UnsupportedSignatureParameterKind,e.type),e)))}tsParseTypeMemberSemicolon(){this.eat(l.comma)||this.semicolon()}tsParseSignatureMember(e,t){return this.tsFillSignature(l.colon,t),this.tsParseTypeMemberSemicolon(),this.finishNode(t,e)}tsIsUnambiguouslyIndexSignature(){return this.next(),this.eat(l.name)&&this.match(l.colon)}tsTryParseIndexSignature(e){if(!this.match(l.bracketL)||!this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))return;this.expect(l.bracketL);const t=this.parseIdentifier();t.typeAnnotation=this.tsParseTypeAnnotation(),this.resetEndLocation(t),this.expect(l.bracketR),e.parameters=[t];const n=this.tsTryParseTypeAnnotation();return n&&(e.typeAnnotation=n),this.tsParseTypeMemberSemicolon(),this.finishNode(e,"TSIndexSignature")}tsParsePropertyOrMethodSignature(e,t){this.eat(l.question)&&(e.optional=!0);const n=e;if(t||!this.match(l.parenL)&&!this.isRelational("<")){const e=n;t&&(e.readonly=!0);const r=this.tsTryParseTypeAnnotation();return r&&(e.typeAnnotation=r),this.tsParseTypeMemberSemicolon(),this.finishNode(e,"TSPropertySignature")}{const e=n;return this.tsFillSignature(l.colon,e),this.tsParseTypeMemberSemicolon(),this.finishNode(e,"TSMethodSignature")}}tsParseTypeMember(){const e=this.startNode();if(this.match(l.parenL)||this.isRelational("<"))return this.tsParseSignatureMember("TSCallSignatureDeclaration",e);if(this.match(l._new)){const t=this.startNode();return this.next(),this.match(l.parenL)||this.isRelational("<")?this.tsParseSignatureMember("TSConstructSignatureDeclaration",e):(e.key=this.createIdentifier(t,"new"),this.tsParsePropertyOrMethodSignature(e,!1))}const t=!!this.tsParseModifier(["readonly"]),n=this.tsTryParseIndexSignature(e);return n?(t&&(e.readonly=!0),n):(this.parsePropertyName(e,!1),this.tsParsePropertyOrMethodSignature(e,t))}tsParseTypeLiteral(){const e=this.startNode();return e.members=this.tsParseObjectTypeMembers(),this.finishNode(e,"TSTypeLiteral")}tsParseObjectTypeMembers(){this.expect(l.braceL);const e=this.tsParseList("TypeMembers",this.tsParseTypeMember.bind(this));return this.expect(l.braceR),e}tsIsStartOfMappedType(){return this.next(),this.eat(l.plusMin)?this.isContextual("readonly"):(this.isContextual("readonly")&&this.next(),!!this.match(l.bracketL)&&(this.next(),!!this.tsIsIdentifier()&&(this.next(),this.match(l._in))))}tsParseMappedTypeParameter(){const e=this.startNode();return e.name=this.parseIdentifierName(e.start),e.constraint=this.tsExpectThenParseType(l._in),this.finishNode(e,"TSTypeParameter")}tsParseMappedType(){const e=this.startNode();return this.expect(l.braceL),this.match(l.plusMin)?(e.readonly=this.state.value,this.next(),this.expectContextual("readonly")):this.eatContextual("readonly")&&(e.readonly=!0),this.expect(l.bracketL),e.typeParameter=this.tsParseMappedTypeParameter(),e.nameType=this.eatContextual("as")?this.tsParseType():null,this.expect(l.bracketR),this.match(l.plusMin)?(e.optional=this.state.value,this.next(),this.expect(l.question)):this.eat(l.question)&&(e.optional=!0),e.typeAnnotation=this.tsTryParseType(),this.semicolon(),this.expect(l.braceR),this.finishNode(e,"TSMappedType")}tsParseTupleType(){const e=this.startNode();e.elementTypes=this.tsParseBracketedList("TupleElementTypes",this.tsParseTupleElementType.bind(this),!0,!1);let t=!1,n=null;return e.elementTypes.forEach((e=>{var r;let{type:s}=e;!t||"TSRestType"===s||"TSOptionalType"===s||"TSNamedTupleMember"===s&&e.optional||this.raise(e.start,oe.OptionalTypeBeforeRequired),t=t||"TSNamedTupleMember"===s&&e.optional||"TSOptionalType"===s,"TSRestType"===s&&(s=(e=e.typeAnnotation).type);const i="TSNamedTupleMember"===s;n=null!=(r=n)?r:i,n!==i&&this.raise(e.start,oe.MixedLabeledAndUnlabeledElements)})),this.finishNode(e,"TSTupleType")}tsParseTupleElementType(){const{start:e,startLoc:t}=this.state,n=this.eat(l.ellipsis);let r=this.tsParseType();const s=this.eat(l.question);if(this.eat(l.colon)){const e=this.startNodeAtNode(r);e.optional=s,"TSTypeReference"!==r.type||r.typeParameters||"Identifier"!==r.typeName.type?(this.raise(r.start,oe.InvalidTupleMemberLabel),e.label=r):e.label=r.typeName,e.elementType=this.tsParseType(),r=this.finishNode(e,"TSNamedTupleMember")}else if(s){const e=this.startNodeAtNode(r);e.typeAnnotation=r,r=this.finishNode(e,"TSOptionalType")}if(n){const n=this.startNodeAt(e,t);n.typeAnnotation=r,r=this.finishNode(n,"TSRestType")}return r}tsParseParenthesizedType(){const e=this.startNode();return this.expect(l.parenL),e.typeAnnotation=this.tsParseType(),this.expect(l.parenR),this.finishNode(e,"TSParenthesizedType")}tsParseFunctionOrConstructorType(e){const t=this.startNode();return"TSConstructorType"===e&&this.expect(l._new),this.tsFillSignature(l.arrow,t),this.finishNode(t,e)}tsParseLiteralTypeNode(){const e=this.startNode();return e.literal=(()=>{switch(this.state.type){case l.num:case l.bigint:case l.string:case l._true:case l._false:return this.parseExprAtom();default:throw this.unexpected()}})(),this.finishNode(e,"TSLiteralType")}tsParseTemplateLiteralType(){const e=this.startNode();return e.literal=this.parseTemplate(!1),this.finishNode(e,"TSLiteralType")}parseTemplateSubstitution(){return this.state.inType?this.tsParseType():super.parseTemplateSubstitution()}tsParseThisTypeOrThisTypePredicate(){const e=this.tsParseThisTypeNode();return this.isContextual("is")&&!this.hasPrecedingLineBreak()?this.tsParseThisTypePredicate(e):e}tsParseNonArrayType(){switch(this.state.type){case l.name:case l._void:case l._null:{const e=this.match(l._void)?"TSVoidKeyword":this.match(l._null)?"TSNullKeyword":function(e){switch(e){case"any":return"TSAnyKeyword";case"boolean":return"TSBooleanKeyword";case"bigint":return"TSBigIntKeyword";case"never":return"TSNeverKeyword";case"number":return"TSNumberKeyword";case"object":return"TSObjectKeyword";case"string":return"TSStringKeyword";case"symbol":return"TSSymbolKeyword";case"undefined":return"TSUndefinedKeyword";case"unknown":return"TSUnknownKeyword";default:return}}(this.state.value);if(void 0!==e&&46!==this.lookaheadCharCode()){const t=this.startNode();return this.next(),this.finishNode(t,e)}return this.tsParseTypeReference()}case l.string:case l.num:case l.bigint:case l._true:case l._false:return this.tsParseLiteralTypeNode();case l.plusMin:if("-"===this.state.value){const e=this.startNode(),t=this.lookahead();if(t.type!==l.num&&t.type!==l.bigint)throw this.unexpected();return e.literal=this.parseMaybeUnary(),this.finishNode(e,"TSLiteralType")}break;case l._this:return this.tsParseThisTypeOrThisTypePredicate();case l._typeof:return this.tsParseTypeQuery();case l._import:return this.tsParseImportType();case l.braceL:return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))?this.tsParseMappedType():this.tsParseTypeLiteral();case l.bracketL:return this.tsParseTupleType();case l.parenL:return this.tsParseParenthesizedType();case l.backQuote:return this.tsParseTemplateLiteralType()}throw this.unexpected()}tsParseArrayTypeOrHigher(){let e=this.tsParseNonArrayType();for(;!this.hasPrecedingLineBreak()&&this.eat(l.bracketL);)if(this.match(l.bracketR)){const t=this.startNodeAtNode(e);t.elementType=e,this.expect(l.bracketR),e=this.finishNode(t,"TSArrayType")}else{const t=this.startNodeAtNode(e);t.objectType=e,t.indexType=this.tsParseType(),this.expect(l.bracketR),e=this.finishNode(t,"TSIndexedAccessType")}return e}tsParseTypeOperator(e){const t=this.startNode();return this.expectContextual(e),t.operator=e,t.typeAnnotation=this.tsParseTypeOperatorOrHigher(),"readonly"===e&&this.tsCheckTypeAnnotationForReadOnly(t),this.finishNode(t,"TSTypeOperator")}tsCheckTypeAnnotationForReadOnly(e){switch(e.typeAnnotation.type){case"TSTupleType":case"TSArrayType":return;default:this.raise(e.start,oe.UnexpectedReadonly)}}tsParseInferType(){const e=this.startNode();this.expectContextual("infer");const t=this.startNode();return t.name=this.parseIdentifierName(t.start),e.typeParameter=this.finishNode(t,"TSTypeParameter"),this.finishNode(e,"TSInferType")}tsParseTypeOperatorOrHigher(){const e=["keyof","unique","readonly"].find((e=>this.isContextual(e)));return e?this.tsParseTypeOperator(e):this.isContextual("infer")?this.tsParseInferType():this.tsParseArrayTypeOrHigher()}tsParseUnionOrIntersectionType(e,t,n){this.eat(n);let r=t();if(this.match(n)){const s=[r];for(;this.eat(n);)s.push(t());const i=this.startNodeAtNode(r);i.types=s,r=this.finishNode(i,e)}return r}tsParseIntersectionTypeOrHigher(){return this.tsParseUnionOrIntersectionType("TSIntersectionType",this.tsParseTypeOperatorOrHigher.bind(this),l.bitwiseAND)}tsParseUnionTypeOrHigher(){return this.tsParseUnionOrIntersectionType("TSUnionType",this.tsParseIntersectionTypeOrHigher.bind(this),l.bitwiseOR)}tsIsStartOfFunctionType(){return!!this.isRelational("<")||this.match(l.parenL)&&this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))}tsSkipParameterStart(){if(this.match(l.name)||this.match(l._this))return this.next(),!0;if(this.match(l.braceL)){let e=1;for(this.next();e>0;)this.match(l.braceL)?++e:this.match(l.braceR)&&--e,this.next();return!0}if(this.match(l.bracketL)){let e=1;for(this.next();e>0;)this.match(l.bracketL)?++e:this.match(l.bracketR)&&--e,this.next();return!0}return!1}tsIsUnambiguouslyStartOfFunctionType(){if(this.next(),this.match(l.parenR)||this.match(l.ellipsis))return!0;if(this.tsSkipParameterStart()){if(this.match(l.colon)||this.match(l.comma)||this.match(l.question)||this.match(l.eq))return!0;if(this.match(l.parenR)&&(this.next(),this.match(l.arrow)))return!0}return!1}tsParseTypeOrTypePredicateAnnotation(e){return this.tsInType((()=>{const t=this.startNode();this.expect(e);const n=!!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));if(n&&this.match(l._this)){let e=this.tsParseThisTypeOrThisTypePredicate();if("TSThisType"===e.type){const n=this.startNodeAtNode(t);n.parameterName=e,n.asserts=!0,e=this.finishNode(n,"TSTypePredicate")}else e.asserts=!0;return t.typeAnnotation=e,this.finishNode(t,"TSTypeAnnotation")}const r=this.tsIsIdentifier()&&this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));if(!r){if(!n)return this.tsParseTypeAnnotation(!1,t);const e=this.startNodeAtNode(t);return e.parameterName=this.parseIdentifier(),e.asserts=n,t.typeAnnotation=this.finishNode(e,"TSTypePredicate"),this.finishNode(t,"TSTypeAnnotation")}const s=this.tsParseTypeAnnotation(!1),i=this.startNodeAtNode(t);return i.parameterName=r,i.typeAnnotation=s,i.asserts=n,t.typeAnnotation=this.finishNode(i,"TSTypePredicate"),this.finishNode(t,"TSTypeAnnotation")}))}tsTryParseTypeOrTypePredicateAnnotation(){return this.match(l.colon)?this.tsParseTypeOrTypePredicateAnnotation(l.colon):void 0}tsTryParseTypeAnnotation(){return this.match(l.colon)?this.tsParseTypeAnnotation():void 0}tsTryParseType(){return this.tsEatThenParseType(l.colon)}tsParseTypePredicatePrefix(){const e=this.parseIdentifier();if(this.isContextual("is")&&!this.hasPrecedingLineBreak())return this.next(),e}tsParseTypePredicateAsserts(){if(!this.match(l.name)||"asserts"!==this.state.value||this.hasPrecedingLineBreak())return!1;const e=this.state.containsEsc;return this.next(),!(!this.match(l.name)&&!this.match(l._this)||(e&&this.raise(this.state.lastTokStart,E.InvalidEscapedReservedWord,"asserts"),0))}tsParseTypeAnnotation(e=!0,t=this.startNode()){return this.tsInType((()=>{e&&this.expect(l.colon),t.typeAnnotation=this.tsParseType()})),this.finishNode(t,"TSTypeAnnotation")}tsParseType(){ae(this.state.inType);const e=this.tsParseNonConditionalType();if(this.hasPrecedingLineBreak()||!this.eat(l._extends))return e;const t=this.startNodeAtNode(e);return t.checkType=e,t.extendsType=this.tsParseNonConditionalType(),this.expect(l.question),t.trueType=this.tsParseType(),this.expect(l.colon),t.falseType=this.tsParseType(),this.finishNode(t,"TSConditionalType")}tsParseNonConditionalType(){return this.tsIsStartOfFunctionType()?this.tsParseFunctionOrConstructorType("TSFunctionType"):this.match(l._new)?this.tsParseFunctionOrConstructorType("TSConstructorType"):this.tsParseUnionTypeOrHigher()}tsParseTypeAssertion(){const e=this.startNode(),t=this.tsTryNextParseConstantContext();return e.typeAnnotation=t||this.tsNextThenParseType(),this.expectRelational(">"),e.expression=this.parseMaybeUnary(),this.finishNode(e,"TSTypeAssertion")}tsParseHeritageClause(e){const t=this.state.start,n=this.tsParseDelimitedList("HeritageClauseElement",this.tsParseExpressionWithTypeArguments.bind(this));return n.length||this.raise(t,oe.EmptyHeritageClauseType,e),n}tsParseExpressionWithTypeArguments(){const e=this.startNode();return e.expression=this.tsParseEntityName(!1),this.isRelational("<")&&(e.typeParameters=this.tsParseTypeArguments()),this.finishNode(e,"TSExpressionWithTypeArguments")}tsParseInterfaceDeclaration(e){e.id=this.parseIdentifier(),this.checkLVal(e.id,130,void 0,"typescript interface declaration"),e.typeParameters=this.tsTryParseTypeParameters(),this.eat(l._extends)&&(e.extends=this.tsParseHeritageClause("extends"));const t=this.startNode();return t.body=this.tsInType(this.tsParseObjectTypeMembers.bind(this)),e.body=this.finishNode(t,"TSInterfaceBody"),this.finishNode(e,"TSInterfaceDeclaration")}tsParseTypeAliasDeclaration(e){return e.id=this.parseIdentifier(),this.checkLVal(e.id,2,void 0,"typescript type alias"),e.typeParameters=this.tsTryParseTypeParameters(),e.typeAnnotation=this.tsInType((()=>{if(this.expect(l.eq),this.isContextual("intrinsic")&&this.lookahead().type!==l.dot){const e=this.startNode();return this.next(),this.finishNode(e,"TSIntrinsicKeyword")}return this.tsParseType()})),this.semicolon(),this.finishNode(e,"TSTypeAliasDeclaration")}tsInNoContext(e){const t=this.state.context;this.state.context=[t[0]];try{return e()}finally{this.state.context=t}}tsInType(e){const t=this.state.inType;this.state.inType=!0;try{return e()}finally{this.state.inType=t}}tsEatThenParseType(e){return this.match(e)?this.tsNextThenParseType():void 0}tsExpectThenParseType(e){return this.tsDoThenParseType((()=>this.expect(e)))}tsNextThenParseType(){return this.tsDoThenParseType((()=>this.next()))}tsDoThenParseType(e){return this.tsInType((()=>(e(),this.tsParseType())))}tsParseEnumMember(){const e=this.startNode();return e.id=this.match(l.string)?this.parseExprAtom():this.parseIdentifier(!0),this.eat(l.eq)&&(e.initializer=this.parseMaybeAssignAllowIn()),this.finishNode(e,"TSEnumMember")}tsParseEnumDeclaration(e,t){return t&&(e.const=!0),e.id=this.parseIdentifier(),this.checkLVal(e.id,t?779:267,void 0,"typescript enum declaration"),this.expect(l.braceL),e.members=this.tsParseDelimitedList("EnumMembers",this.tsParseEnumMember.bind(this)),this.expect(l.braceR),this.finishNode(e,"TSEnumDeclaration")}tsParseModuleBlock(){const e=this.startNode();return this.scope.enter(0),this.expect(l.braceL),this.parseBlockOrModuleBlockBody(e.body=[],void 0,!0,l.braceR),this.scope.exit(),this.finishNode(e,"TSModuleBlock")}tsParseModuleOrNamespaceDeclaration(e,t=!1){if(e.id=this.parseIdentifier(),t||this.checkLVal(e.id,1024,null,"module or namespace declaration"),this.eat(l.dot)){const t=this.startNode();this.tsParseModuleOrNamespaceDeclaration(t,!0),e.body=t}else this.scope.enter(128),this.prodParam.enter(0),e.body=this.tsParseModuleBlock(),this.prodParam.exit(),this.scope.exit();return this.finishNode(e,"TSModuleDeclaration")}tsParseAmbientExternalModuleDeclaration(e){return this.isContextual("global")?(e.global=!0,e.id=this.parseIdentifier()):this.match(l.string)?e.id=this.parseExprAtom():this.unexpected(),this.match(l.braceL)?(this.scope.enter(128),this.prodParam.enter(0),e.body=this.tsParseModuleBlock(),this.prodParam.exit(),this.scope.exit()):this.semicolon(),this.finishNode(e,"TSModuleDeclaration")}tsParseImportEqualsDeclaration(e,t){return e.isExport=t||!1,e.id=this.parseIdentifier(),this.checkLVal(e.id,9,void 0,"import equals declaration"),this.expect(l.eq),e.moduleReference=this.tsParseModuleReference(),this.semicolon(),this.finishNode(e,"TSImportEqualsDeclaration")}tsIsExternalModuleReference(){return this.isContextual("require")&&40===this.lookaheadCharCode()}tsParseModuleReference(){return this.tsIsExternalModuleReference()?this.tsParseExternalModuleReference():this.tsParseEntityName(!1)}tsParseExternalModuleReference(){const e=this.startNode();if(this.expectContextual("require"),this.expect(l.parenL),!this.match(l.string))throw this.unexpected();return e.expression=this.parseExprAtom(),this.expect(l.parenR),this.finishNode(e,"TSExternalModuleReference")}tsLookAhead(e){const t=this.state.clone(),n=e();return this.state=t,n}tsTryParseAndCatch(e){const t=this.tryParse((t=>e()||t()));if(!t.aborted&&t.node)return t.error&&(this.state=t.failState),t.node}tsTryParse(e){const t=this.state.clone(),n=e();return void 0!==n&&!1!==n?n:void(this.state=t)}tsTryParseDeclare(e){if(this.isLineTerminator())return;let t,n=this.state.type;return this.isContextual("let")&&(n=l._var,t="let"),this.tsInDeclareContext((()=>{switch(n){case l._function:return e.declare=!0,this.parseFunctionStatement(e,!1,!0);case l._class:return e.declare=!0,this.parseClass(e,!0,!1);case l._const:if(this.match(l._const)&&this.isLookaheadContextual("enum"))return this.expect(l._const),this.expectContextual("enum"),this.tsParseEnumDeclaration(e,!0);case l._var:return t=t||this.state.value,this.parseVarStatement(e,t);case l.name:{const t=this.state.value;return"global"===t?this.tsParseAmbientExternalModuleDeclaration(e):this.tsParseDeclaration(e,t,!0)}}}))}tsTryParseExportDeclaration(){return this.tsParseDeclaration(this.startNode(),this.state.value,!0)}tsParseExpressionStatement(e,t){switch(t.name){case"declare":{const t=this.tsTryParseDeclare(e);if(t)return t.declare=!0,t;break}case"global":if(this.match(l.braceL)){this.scope.enter(128),this.prodParam.enter(0);const n=e;return n.global=!0,n.id=t,n.body=this.tsParseModuleBlock(),this.scope.exit(),this.prodParam.exit(),this.finishNode(n,"TSModuleDeclaration")}break;default:return this.tsParseDeclaration(e,t.name,!1)}}tsParseDeclaration(e,t,n){switch(t){case"abstract":if(this.tsCheckLineTerminatorAndMatch(l._class,n)){const t=e;return t.abstract=!0,n&&(this.next(),this.match(l._class)||this.unexpected(null,l._class)),this.parseClass(t,!0,!1)}break;case"enum":if(n||this.match(l.name))return n&&this.next(),this.tsParseEnumDeclaration(e,!1);break;case"interface":if(this.tsCheckLineTerminatorAndMatch(l.name,n))return n&&this.next(),this.tsParseInterfaceDeclaration(e);break;case"module":if(n&&this.next(),this.match(l.string))return this.tsParseAmbientExternalModuleDeclaration(e);if(this.tsCheckLineTerminatorAndMatch(l.name,n))return this.tsParseModuleOrNamespaceDeclaration(e);break;case"namespace":if(this.tsCheckLineTerminatorAndMatch(l.name,n))return n&&this.next(),this.tsParseModuleOrNamespaceDeclaration(e);break;case"type":if(this.tsCheckLineTerminatorAndMatch(l.name,n))return n&&this.next(),this.tsParseTypeAliasDeclaration(e)}}tsCheckLineTerminatorAndMatch(e,t){return(t||this.match(e))&&!this.isLineTerminator()}tsTryParseGenericAsyncArrowFunction(e,t){if(!this.isRelational("<"))return;const n=this.state.maybeInArrowParameters;this.state.maybeInArrowParameters=!0;const r=this.tsTryParseAndCatch((()=>{const n=this.startNodeAt(e,t);return n.typeParameters=this.tsParseTypeParameters(),super.parseFunctionParams(n),n.returnType=this.tsTryParseTypeOrTypePredicateAnnotation(),this.expect(l.arrow),n}));return this.state.maybeInArrowParameters=n,r?this.parseArrowExpression(r,null,!0):void 0}tsParseTypeArguments(){const e=this.startNode();return e.params=this.tsInType((()=>this.tsInNoContext((()=>(this.expectRelational("<"),this.tsParseDelimitedList("TypeParametersOrArguments",this.tsParseType.bind(this))))))),0===e.params.length&&this.raise(e.start,oe.EmptyTypeArguments),this.state.exprAllowed=!1,this.expectRelational(">"),this.finishNode(e,"TSTypeParameterInstantiation")}tsIsDeclarationStart(){if(this.match(l.name))switch(this.state.value){case"abstract":case"declare":case"enum":case"interface":case"module":case"namespace":case"type":return!0}return!1}isExportDefaultSpecifier(){return!this.tsIsDeclarationStart()&&super.isExportDefaultSpecifier()}parseAssignableListItem(e,t){const n=this.state.start,r=this.state.startLoc;let s,i=!1;void 0!==e&&(s=this.parseAccessModifier(),i=!!this.tsParseModifier(["readonly"]),!1===e&&(s||i)&&this.raise(n,oe.UnexpectedParameterModifier));const a=this.parseMaybeDefault();this.parseAssignableListItemTypes(a);const o=this.parseMaybeDefault(a.start,a.loc.start,a);if(s||i){const e=this.startNodeAt(n,r);return t.length&&(e.decorators=t),s&&(e.accessibility=s),i&&(e.readonly=i),"Identifier"!==o.type&&"AssignmentPattern"!==o.type&&this.raise(e.start,oe.UnsupportedParameterPropertyKind),e.parameter=o,this.finishNode(e,"TSParameterProperty")}return t.length&&(a.decorators=t),o}parseFunctionBodyAndFinish(e,t,n=!1){this.match(l.colon)&&(e.returnType=this.tsParseTypeOrTypePredicateAnnotation(l.colon));const r="FunctionDeclaration"===t?"TSDeclareFunction":"ClassMethod"===t?"TSDeclareMethod":void 0;r&&!this.match(l.braceL)&&this.isLineTerminator()?this.finishNode(e,r):"TSDeclareFunction"===r&&this.state.isDeclareContext&&(this.raise(e.start,oe.DeclareFunctionHasImplementation),e.declare)?super.parseFunctionBodyAndFinish(e,r,n):super.parseFunctionBodyAndFinish(e,t,n)}registerFunctionStatementId(e){!e.body&&e.id?this.checkLVal(e.id,1024,null,"function name"):super.registerFunctionStatementId(...arguments)}tsCheckForInvalidTypeCasts(e){e.forEach((e=>{"TSTypeCastExpression"===(null==e?void 0:e.type)&&this.raise(e.typeAnnotation.start,oe.UnexpectedTypeAnnotation)}))}toReferencedList(e,t){return this.tsCheckForInvalidTypeCasts(e),e}parseArrayLike(...e){const t=super.parseArrayLike(...e);return"ArrayExpression"===t.type&&this.tsCheckForInvalidTypeCasts(t.elements),t}parseSubscript(e,t,n,r,s){if(!this.hasPrecedingLineBreak()&&this.match(l.bang)){this.state.exprAllowed=!1,this.next();const r=this.startNodeAt(t,n);return r.expression=e,this.finishNode(r,"TSNonNullExpression")}if(this.isRelational("<")){const i=this.tsTryParseAndCatch((()=>{if(!r&&this.atPossibleAsyncArrow(e)){const e=this.tsTryParseGenericAsyncArrowFunction(t,n);if(e)return e}const i=this.startNodeAt(t,n);i.callee=e;const a=this.tsParseTypeArguments();if(a){if(!r&&this.eat(l.parenL))return i.arguments=this.parseCallExpressionArguments(l.parenR,!1),this.tsCheckForInvalidTypeCasts(i.arguments),i.typeParameters=a,this.finishCallExpression(i,s.optionalChainMember);if(this.match(l.backQuote)){const r=this.parseTaggedTemplateExpression(e,t,n,s);return r.typeParameters=a,r}}this.unexpected()}));if(i)return i}return super.parseSubscript(e,t,n,r,s)}parseNewArguments(e){if(this.isRelational("<")){const t=this.tsTryParseAndCatch((()=>{const e=this.tsParseTypeArguments();return this.match(l.parenL)||this.unexpected(),e}));t&&(e.typeParameters=t)}super.parseNewArguments(e)}parseExprOp(e,t,n,r){if(ie(l._in.binop)>r&&!this.hasPrecedingLineBreak()&&this.isContextual("as")){const s=this.startNodeAt(t,n);s.expression=e;const i=this.tsTryNextParseConstantContext();return s.typeAnnotation=i||this.tsNextThenParseType(),this.finishNode(s,"TSAsExpression"),this.reScan_lt_gt(),this.parseExprOp(s,t,n,r)}return super.parseExprOp(e,t,n,r)}checkReservedWord(e,t,n,r){}checkDuplicateExports(){}parseImport(e){if(this.match(l.name)||this.match(l.star)||this.match(l.braceL)){const t=this.lookahead();if(this.match(l.name)&&t.type===l.eq)return this.tsParseImportEqualsDeclaration(e);!this.isContextual("type")||t.type===l.comma||t.type===l.name&&"from"===t.value||(e.importKind="type",this.next())}e.importKind||(e.importKind="value");const t=super.parseImport(e);return"type"===t.importKind&&t.specifiers.length>1&&"ImportDefaultSpecifier"===t.specifiers[0].type&&this.raise(t.start,"A type-only import can specify a default import or named bindings, but not both."),t}parseExport(e){if(this.match(l._import))return this.expect(l._import),this.tsParseImportEqualsDeclaration(e,!0);if(this.eat(l.eq)){const t=e;return t.expression=this.parseExpression(),this.semicolon(),this.finishNode(t,"TSExportAssignment")}if(this.eatContextual("as")){const t=e;return this.expectContextual("namespace"),t.id=this.parseIdentifier(),this.semicolon(),this.finishNode(t,"TSNamespaceExportDeclaration")}return this.isContextual("type")&&this.lookahead().type===l.braceL?(this.next(),e.exportKind="type"):e.exportKind="value",super.parseExport(e)}isAbstractClass(){return this.isContextual("abstract")&&this.lookahead().type===l._class}parseExportDefaultExpression(){if(this.isAbstractClass()){const e=this.startNode();return this.next(),this.parseClass(e,!0,!0),e.abstract=!0,e}if("interface"===this.state.value){const e=this.tsParseDeclaration(this.startNode(),this.state.value,!0);if(e)return e}return super.parseExportDefaultExpression()}parseStatementContent(e,t){if(this.state.type===l._const){const e=this.lookahead();if(e.type===l.name&&"enum"===e.value){const e=this.startNode();return this.expect(l._const),this.expectContextual("enum"),this.tsParseEnumDeclaration(e,!0)}}return super.parseStatementContent(e,t)}parseAccessModifier(){return this.tsParseModifier(["public","protected","private"])}parseClassMember(e,t,n){this.tsParseModifiers(t,["declare"]);const r=this.parseAccessModifier();r&&(t.accessibility=r),this.tsParseModifiers(t,["declare"]);const s=()=>{super.parseClassMember(e,t,n)};t.declare?this.tsInDeclareContext(s):s()}parseClassMemberWithIsStatic(e,t,n,r){this.tsParseModifiers(t,["abstract","readonly","declare"]);const s=this.tsTryParseIndexSignature(t);if(s)return e.body.push(s),t.abstract&&this.raise(t.start,oe.IndexSignatureHasAbstract),r&&this.raise(t.start,oe.IndexSignatureHasStatic),t.accessibility&&this.raise(t.start,oe.IndexSignatureHasAccessibility,t.accessibility),void(t.declare&&this.raise(t.start,oe.IndexSignatureHasDeclare));super.parseClassMemberWithIsStatic(e,t,n,r)}parsePostMemberNameModifiers(e){this.eat(l.question)&&(e.optional=!0),e.readonly&&this.match(l.parenL)&&this.raise(e.start,oe.ClassMethodHasReadonly),e.declare&&this.match(l.parenL)&&this.raise(e.start,oe.ClassMethodHasDeclare)}parseExpressionStatement(e,t){return("Identifier"===t.type?this.tsParseExpressionStatement(e,t):void 0)||super.parseExpressionStatement(e,t)}shouldParseExportDeclaration(){return!!this.tsIsDeclarationStart()||super.shouldParseExportDeclaration()}parseConditional(e,t,n,r){if(!r||!this.match(l.question))return super.parseConditional(e,t,n,r);const s=this.tryParse((()=>super.parseConditional(e,t,n)));return s.node?(s.error&&(this.state=s.failState),s.node):(r.start=s.error.pos||this.state.start,e)}parseParenItem(e,t,n){if(e=super.parseParenItem(e,t,n),this.eat(l.question)&&(e.optional=!0,this.resetEndLocation(e)),this.match(l.colon)){const r=this.startNodeAt(t,n);return r.expression=e,r.typeAnnotation=this.tsParseTypeAnnotation(),this.finishNode(r,"TSTypeCastExpression")}return e}parseExportDeclaration(e){const t=this.state.start,n=this.state.startLoc,r=this.eatContextual("declare");let s;return this.match(l.name)&&(s=this.tsTryParseExportDeclaration()),s||(s=super.parseExportDeclaration(e)),s&&("TSInterfaceDeclaration"===s.type||"TSTypeAliasDeclaration"===s.type||r)&&(e.exportKind="type"),s&&r&&(this.resetStartLocation(s,t,n),s.declare=!0),s}parseClassId(e,t,n){if((!t||n)&&this.isContextual("implements"))return;super.parseClassId(e,t,n,e.declare?1024:139);const r=this.tsTryParseTypeParameters();r&&(e.typeParameters=r)}parseClassPropertyAnnotation(e){!e.optional&&this.eat(l.bang)&&(e.definite=!0);const t=this.tsTryParseTypeAnnotation();t&&(e.typeAnnotation=t)}parseClassProperty(e){return this.parseClassPropertyAnnotation(e),this.state.isDeclareContext&&this.match(l.eq)&&this.raise(this.state.start,oe.DeclareClassFieldHasInitializer),super.parseClassProperty(e)}parseClassPrivateProperty(e){return e.abstract&&this.raise(e.start,oe.PrivateElementHasAbstract),e.accessibility&&this.raise(e.start,oe.PrivateElementHasAccessibility,e.accessibility),this.parseClassPropertyAnnotation(e),super.parseClassPrivateProperty(e)}pushClassMethod(e,t,n,r,s,i){const a=this.tsTryParseTypeParameters();a&&s&&this.raise(a.start,oe.ConstructorHasTypeParameters),a&&(t.typeParameters=a),super.pushClassMethod(e,t,n,r,s,i)}pushClassPrivateMethod(e,t,n,r){const s=this.tsTryParseTypeParameters();s&&(t.typeParameters=s),super.pushClassPrivateMethod(e,t,n,r)}parseClassSuper(e){super.parseClassSuper(e),e.superClass&&this.isRelational("<")&&(e.superTypeParameters=this.tsParseTypeArguments()),this.eatContextual("implements")&&(e.implements=this.tsParseHeritageClause("implements"))}parseObjPropValue(e,...t){const n=this.tsTryParseTypeParameters();n&&(e.typeParameters=n),super.parseObjPropValue(e,...t)}parseFunctionParams(e,t){const n=this.tsTryParseTypeParameters();n&&(e.typeParameters=n),super.parseFunctionParams(e,t)}parseVarId(e,t){super.parseVarId(e,t),"Identifier"===e.id.type&&this.eat(l.bang)&&(e.definite=!0);const n=this.tsTryParseTypeAnnotation();n&&(e.id.typeAnnotation=n,this.resetEndLocation(e.id))}parseAsyncArrowFromCallExpression(e,t){return this.match(l.colon)&&(e.returnType=this.tsParseTypeAnnotation()),super.parseAsyncArrowFromCallExpression(e,t)}parseMaybeAssign(...e){var t,n,r,s,i,a,o;let u,c,p,h;if(this.match(l.jsxTagStart)){if(u=this.state.clone(),c=this.tryParse((()=>super.parseMaybeAssign(...e)),u),!c.error)return c.node;const{context:t}=this.state;t[t.length-1]===b.j_oTag?t.length-=2:t[t.length-1]===b.j_expr&&(t.length-=1)}if(!(null==(t=c)?void 0:t.error)&&!this.isRelational("<"))return super.parseMaybeAssign(...e);u=u||this.state.clone();const d=this.tryParse((t=>{var n;h=this.tsParseTypeParameters();const r=super.parseMaybeAssign(...e);return("ArrowFunctionExpression"!==r.type||r.extra&&r.extra.parenthesized)&&t(),0!==(null==(n=h)?void 0:n.params.length)&&this.resetStartLocationFromNode(r,h),r.typeParameters=h,r}),u);if(!d.error&&!d.aborted)return d.node;if(!c&&(ae(!this.hasPlugin("jsx")),p=this.tryParse((()=>super.parseMaybeAssign(...e)),u),!p.error))return p.node;if(null==(n=c)?void 0:n.node)return this.state=c.failState,c.node;if(d.node)return this.state=d.failState,d.node;if(null==(r=p)?void 0:r.node)return this.state=p.failState,p.node;if(null==(s=c)?void 0:s.thrown)throw c.error;if(d.thrown)throw d.error;if(null==(i=p)?void 0:i.thrown)throw p.error;throw(null==(a=c)?void 0:a.error)||d.error||(null==(o=p)?void 0:o.error)}parseMaybeUnary(e){return!this.hasPlugin("jsx")&&this.isRelational("<")?this.tsParseTypeAssertion():super.parseMaybeUnary(e)}parseArrow(e){if(this.match(l.colon)){const t=this.tryParse((e=>{const t=this.tsParseTypeOrTypePredicateAnnotation(l.colon);return!this.canInsertSemicolon()&&this.match(l.arrow)||e(),t}));if(t.aborted)return;t.thrown||(t.error&&(this.state=t.failState),e.returnType=t.node)}return super.parseArrow(e)}parseAssignableListItemTypes(e){this.eat(l.question)&&("Identifier"===e.type||this.state.isDeclareContext||this.state.inType||this.raise(e.start,oe.PatternIsOptional),e.optional=!0);const t=this.tsTryParseTypeAnnotation();return t&&(e.typeAnnotation=t),this.resetEndLocation(e),e}toAssignable(e){switch(e.type){case"TSTypeCastExpression":return super.toAssignable(this.typeCastToParameter(e));case"TSParameterProperty":default:return super.toAssignable(e);case"TSAsExpression":case"TSNonNullExpression":case"TSTypeAssertion":return e.expression=this.toAssignable(e.expression),e}}checkLVal(e,t=64,n,r){switch(e.type){case"TSTypeCastExpression":return;case"TSParameterProperty":return void this.checkLVal(e.parameter,t,n,"parameter property");case"TSAsExpression":case"TSNonNullExpression":case"TSTypeAssertion":return void this.checkLVal(e.expression,t,n,r);default:return void super.checkLVal(e,t,n,r)}}parseBindingAtom(){return this.state.type===l._this?this.parseIdentifier(!0):super.parseBindingAtom()}parseMaybeDecoratorArguments(e){if(this.isRelational("<")){const t=this.tsParseTypeArguments();if(this.match(l.parenL)){const n=super.parseMaybeDecoratorArguments(e);return n.typeParameters=t,n}this.unexpected(this.state.start,l.parenL)}return super.parseMaybeDecoratorArguments(e)}isClassMethod(){return this.isRelational("<")||super.isClassMethod()}isClassProperty(){return this.match(l.bang)||this.match(l.colon)||super.isClassProperty()}parseMaybeDefault(...e){const t=super.parseMaybeDefault(...e);return"AssignmentPattern"===t.type&&t.typeAnnotation&&t.right.start<t.typeAnnotation.start&&this.raise(t.typeAnnotation.start,oe.TypeAnnotationAfterAssign),t}getTokenFromCode(e){return!this.state.inType||62!==e&&60!==e?super.getTokenFromCode(e):this.finishOp(l.relational,1)}reScan_lt_gt(){if(this.match(l.relational)){const e=this.input.charCodeAt(this.state.start);60!==e&&62!==e||(this.state.pos-=1,this.readToken_lt_gt(e))}}toAssignableList(e){for(let t=0;t<e.length;t++){const n=e[t];if(n)switch(n.type){case"TSTypeCastExpression":e[t]=this.typeCastToParameter(n);break;case"TSAsExpression":case"TSTypeAssertion":this.state.maybeInArrowParameters?this.raise(n.start,oe.UnexpectedTypeCastInParameter):e[t]=this.typeCastToParameter(n)}}return super.toAssignableList(...arguments)}typeCastToParameter(e){return e.expression.typeAnnotation=e.typeAnnotation,this.resetEndLocation(e.expression,e.typeAnnotation.end,e.typeAnnotation.loc.end),e.expression}shouldParseArrow(){return this.match(l.colon)||super.shouldParseArrow()}shouldParseAsyncArrow(){return this.match(l.colon)||super.shouldParseAsyncArrow()}canHaveLeadingDecorator(){return super.canHaveLeadingDecorator()||this.isAbstractClass()}jsxParseOpeningElementAfterName(e){if(this.isRelational("<")){const t=this.tsTryParseAndCatch((()=>this.tsParseTypeArguments()));t&&(e.typeParameters=t)}return super.jsxParseOpeningElementAfterName(e)}getGetterSetterExpectedParamCount(e){const t=super.getGetterSetterExpectedParamCount(e),n=e.params[0];return n&&"Identifier"===n.type&&"this"===n.name?t+1:t}parseCatchClauseParam(){const e=super.parseCatchClauseParam(),t=this.tsTryParseTypeAnnotation();return t&&(e.typeAnnotation=t,this.resetEndLocation(e)),e}tsInDeclareContext(e){const t=this.state.isDeclareContext;this.state.isDeclareContext=!0;try{return e()}finally{this.state.isDeclareContext=t}}},v8intrinsic:e=>class extends e{parseV8Intrinsic(){if(this.match(l.modulo)){const e=this.state.start,t=this.startNode();if(this.eat(l.modulo),this.match(l.name)){const e=this.parseIdentifierName(this.state.start),n=this.createIdentifier(t,e);if(n.type="V8IntrinsicIdentifier",this.match(l.parenL))return n}this.unexpected(e)}}parseExprAtom(){return this.parseV8Intrinsic()||super.parseExprAtom(...arguments)}},placeholders:e=>class extends e{parsePlaceholder(e){if(this.match(l.placeholder)){const t=this.startNode();return this.next(),this.assertNoSpace("Unexpected space in placeholder."),t.name=super.parseIdentifier(!0),this.assertNoSpace("Unexpected space in placeholder."),this.expect(l.placeholder),this.finishPlaceholder(t,e)}}finishPlaceholder(e,t){const n=!(!e.expectedNode||"Placeholder"!==e.type);return e.expectedNode=t,n?e:this.finishNode(e,"Placeholder")}getTokenFromCode(e){return 37===e&&37===this.input.charCodeAt(this.state.pos+1)?this.finishOp(l.placeholder,2):super.getTokenFromCode(...arguments)}parseExprAtom(){return this.parsePlaceholder("Expression")||super.parseExprAtom(...arguments)}parseIdentifier(){return this.parsePlaceholder("Identifier")||super.parseIdentifier(...arguments)}checkReservedWord(e){void 0!==e&&super.checkReservedWord(...arguments)}parseBindingAtom(){return this.parsePlaceholder("Pattern")||super.parseBindingAtom(...arguments)}checkLVal(e){"Placeholder"!==e.type&&super.checkLVal(...arguments)}toAssignable(e){return e&&"Placeholder"===e.type&&"Expression"===e.expectedNode?(e.expectedNode="Pattern",e):super.toAssignable(...arguments)}verifyBreakContinue(e){e.label&&"Placeholder"===e.label.type||super.verifyBreakContinue(...arguments)}parseExpressionStatement(e,t){if("Placeholder"!==t.type||t.extra&&t.extra.parenthesized)return super.parseExpressionStatement(...arguments);if(this.match(l.colon)){const n=e;return n.label=this.finishPlaceholder(t,"Identifier"),this.next(),n.body=this.parseStatement("label"),this.finishNode(n,"LabeledStatement")}return this.semicolon(),e.name=t.name,this.finishPlaceholder(e,"Statement")}parseBlock(){return this.parsePlaceholder("BlockStatement")||super.parseBlock(...arguments)}parseFunctionId(){return this.parsePlaceholder("Identifier")||super.parseFunctionId(...arguments)}parseClass(e,t,n){const r=t?"ClassDeclaration":"ClassExpression";this.next(),this.takeDecorators(e);const s=this.state.strict,i=this.parsePlaceholder("Identifier");if(i)if(this.match(l._extends)||this.match(l.placeholder)||this.match(l.braceL))e.id=i;else{if(n||!t)return e.id=null,e.body=this.finishPlaceholder(i,"ClassBody"),this.finishNode(e,r);this.unexpected(null,"A class name is required")}else this.parseClassId(e,t,n);return this.parseClassSuper(e),e.body=this.parsePlaceholder("ClassBody")||this.parseClassBody(!!e.superClass,s),this.finishNode(e,r)}parseExport(e){const t=this.parsePlaceholder("Identifier");if(!t)return super.parseExport(...arguments);if(!this.isContextual("from")&&!this.match(l.comma))return e.specifiers=[],e.source=null,e.declaration=this.finishPlaceholder(t,"Declaration"),this.finishNode(e,"ExportNamedDeclaration");this.expectPlugin("exportDefaultFrom");const n=this.startNode();return n.exported=t,e.specifiers=[this.finishNode(n,"ExportDefaultSpecifier")],super.parseExport(e)}isExportDefaultSpecifier(){if(this.match(l._default)){const e=this.nextTokenStart();if(this.isUnparsedContextual(e,"from")&&this.input.startsWith(l.placeholder.label,this.nextTokenStartSince(e+4)))return!0}return super.isExportDefaultSpecifier()}maybeParseExportDefaultSpecifier(e){return!!(e.specifiers&&e.specifiers.length>0)||super.maybeParseExportDefaultSpecifier(...arguments)}checkExport(e){const{specifiers:t}=e;(null==t?void 0:t.length)&&(e.specifiers=t.filter((e=>"Placeholder"===e.exported.type))),super.checkExport(e),e.specifiers=t}parseImport(e){const t=this.parsePlaceholder("Identifier");if(!t)return super.parseImport(...arguments);if(e.specifiers=[],!this.isContextual("from")&&!this.match(l.comma))return e.source=this.finishPlaceholder(t,"StringLiteral"),this.semicolon(),this.finishNode(e,"ImportDeclaration");const n=this.startNodeAtNode(t);return n.local=t,this.finishNode(n,"ImportDefaultSpecifier"),e.specifiers.push(n),this.eat(l.comma)&&(this.maybeParseStarImportSpecifier(e)||this.parseNamedImportSpecifiers(e)),this.expectContextual("from"),e.source=this.parseImportSource(),this.semicolon(),this.finishNode(e,"ImportDeclaration")}parseImportSource(){return this.parsePlaceholder("StringLiteral")||super.parseImportSource(...arguments)}}},de=Object.keys(he),fe={sourceType:"script",sourceFilename:void 0,startLine:1,allowAwaitOutsideFunction:!1,allowReturnOutsideFunction:!1,allowImportExportEverywhere:!1,allowSuperOutsideMethod:!1,allowUndeclaredExports:!1,plugins:[],strictMode:null,ranges:!1,tokens:!1,createParenthesizedExpressions:!1,errorRecovery:!1};class De{constructor(){this.strict=void 0,this.curLine=void 0,this.startLoc=void 0,this.endLoc=void 0,this.errors=[],this.potentialArrowAt=-1,this.noArrowAt=[],this.noArrowParamsConversionAt=[],this.maybeInArrowParameters=!1,this.inPipeline=!1,this.inType=!1,this.noAnonFunctionType=!1,this.inPropertyName=!1,this.hasFlowComment=!1,this.isIterator=!1,this.isDeclareContext=!1,this.topicContext={maxNumOfResolvableTopics:0,maxTopicIndex:null},this.soloAwait=!1,this.inFSharpPipelineDirectBody=!1,this.labels=[],this.decoratorStack=[[]],this.comments=[],this.trailingComments=[],this.leadingComments=[],this.commentStack=[],this.commentPreviousNode=null,this.pos=0,this.lineStart=0,this.type=l.eof,this.value=null,this.start=0,this.end=0,this.lastTokEndLoc=null,this.lastTokStartLoc=null,this.lastTokStart=0,this.lastTokEnd=0,this.context=[b.braceStatement],this.exprAllowed=!0,this.containsEsc=!1,this.octalPositions=[],this.exportedIdentifiers=[],this.tokensLength=0}init(e){this.strict=!1!==e.strictMode&&"module"===e.sourceType,this.curLine=e.startLine,this.startLoc=this.endLoc=this.curPosition()}curPosition(){return new m(this.curLine,this.pos-this.lineStart)}clone(e){const t=new De,n=Object.keys(this);for(let r=0,s=n.length;r<s;r++){const s=n[r];let i=this[s];!e&&Array.isArray(i)&&(i=i.slice()),t[s]=i}return t}}var me=function(e){return e>=48&&e<=57};const ge=new Set(["g","m","s","i","y","u"]),ye={decBinOct:[46,66,69,79,95,98,101,111],hex:[46,88,95,120]},Ee={bin:[48,49]};Ee.oct=[...Ee.bin,50,51,52,53,54,55],Ee.dec=[...Ee.oct,56,57],Ee.hex=[...Ee.dec,65,66,67,68,69,70,97,98,99,100,101,102];class Ce{constructor(e){this.type=e.type,this.value=e.value,this.start=e.start,this.end=e.end,this.loc=new g(e.startLoc,e.endLoc)}}class Ae{constructor(){this.shorthandAssign=-1,this.doubleProto=-1}}class be{constructor(e,t,n){this.type=void 0,this.start=void 0,this.end=void 0,this.loc=void 0,this.range=void 0,this.leadingComments=void 0,this.trailingComments=void 0,this.innerComments=void 0,this.extra=void 0,this.type="",this.start=t,this.end=0,this.loc=new g(n),(null==e?void 0:e.options.ranges)&&(this.range=[t,0]),(null==e?void 0:e.filename)&&(this.loc.filename=e.filename)}__clone(){const e=new be,t=Object.keys(this);for(let n=0,r=t.length;n<r;n++){const r=t[n];"leadingComments"!==r&&"trailingComments"!==r&&"innerComments"!==r&&(e[r]=this[r])}return e}}const Fe=e=>"ParenthesizedExpression"===e.type?Fe(e.expression):e;class xe{constructor(e=0){this.type=void 0,this.type=e}canBeArrowParameterDeclaration(){return 2===this.type||1===this.type}isCertainlyParameterDeclaration(){return 3===this.type}}class ve extends xe{constructor(e){super(e),this.errors=new Map}recordDeclarationError(e,t){this.errors.set(e,t)}clearDeclarationError(e){this.errors.delete(e)}iterateErrors(e){this.errors.forEach(e)}}class Se{constructor(e){this.stack=[new xe],this.raise=e}enter(e){this.stack.push(e)}exit(){this.stack.pop()}recordParameterInitializerError(e,t){const{stack:n}=this;let r=n.length-1,s=n[r];for(;!s.isCertainlyParameterDeclaration();){if(!s.canBeArrowParameterDeclaration())return;s.recordDeclarationError(e,t),s=n[--r]}this.raise(e,t)}recordAsyncArrowParametersError(e,t){const{stack:n}=this;let r=n.length-1,s=n[r];for(;s.canBeArrowParameterDeclaration();)2===s.type&&s.recordDeclarationError(e,t),s=n[--r]}validateAsPattern(){const{stack:e}=this,t=e[e.length-1];t.canBeArrowParameterDeclaration()&&t.iterateErrors(((t,n)=>{this.raise(n,t);let r=e.length-2,s=e[r];for(;s.canBeArrowParameterDeclaration();)s.clearDeclarationError(n),s=e[--r]}))}}function Te(){return new xe}const we={kind:"loop"},Be={kind:"switch"},Pe=/[\uD800-\uDFFF]/u;class Ne{constructor(){this.privateNames=new Set,this.loneAccessors=new Map,this.undefinedPrivateNames=new Map}}class ke{constructor(e){this.stack=[],this.undefinedPrivateNames=new Map,this.raise=e}current(){return this.stack[this.stack.length-1]}enter(){this.stack.push(new Ne)}exit(){const e=this.stack.pop(),t=this.current();for(let n=0,r=Array.from(e.undefinedPrivateNames);n<r.length;n++){const[e,s]=r[n];t?t.undefinedPrivateNames.has(e)||t.undefinedPrivateNames.set(e,s):this.raise(s,E.InvalidPrivateFieldResolution,e)}}declarePrivateName(e,t,n){const r=this.current();let s=r.privateNames.has(e);if(3&t){const n=s&&r.loneAccessors.get(e);if(n){const i=4&n,a=4&t;s=(3&n)==(3&t)||i!==a,s||r.loneAccessors.delete(e)}else s||r.loneAccessors.set(e,t)}s&&this.raise(n,E.PrivateNameRedeclaration,e),r.privateNames.add(e),r.undefinedPrivateNames.delete(e)}usePrivateName(e,t){let n;for(let t=0,r=this.stack;t<r.length;t++)if(n=r[t],n.privateNames.has(e))return;n?n.undefinedPrivateNames.set(e,t):this.raise(t,E.InvalidPrivateFieldResolution,e)}}class Ie extends class extends class extends class extends class extends class extends class extends class extends class extends class{constructor(){this.sawUnambiguousESM=!1,this.ambiguousScriptDifferentAst=!1}hasPlugin(e){return this.plugins.has(e)}getPluginOption(e,t){if(this.hasPlugin(e))return this.plugins.get(e)[t]}}{addComment(e){this.filename&&(e.loc.filename=this.filename),this.state.trailingComments.push(e),this.state.leadingComments.push(e)}adjustCommentsAfterTrailingComma(e,t,n){if(0===this.state.leadingComments.length)return;let r=null,s=t.length;for(;null===r&&s>0;)r=t[--s];if(null===r)return;for(let e=0;e<this.state.leadingComments.length;e++)this.state.leadingComments[e].end<this.state.commentPreviousNode.end&&(this.state.leadingComments.splice(e,1),e--);const i=[];for(let t=0;t<this.state.leadingComments.length;t++){const r=this.state.leadingComments[t];r.end<e.end?(i.push(r),n||(this.state.leadingComments.splice(t,1),t--)):(void 0===e.trailingComments&&(e.trailingComments=[]),e.trailingComments.push(r))}n&&(this.state.leadingComments=[]),i.length>0?r.trailingComments=i:void 0!==r.trailingComments&&(r.trailingComments=[])}processComment(e){if("Program"===e.type&&e.body.length>0)return;const t=this.state.commentStack;let n,r,s,i,a;if(this.state.trailingComments.length>0)this.state.trailingComments[0].start>=e.end?(s=this.state.trailingComments,this.state.trailingComments=[]):this.state.trailingComments.length=0;else if(t.length>0){const n=y(t);n.trailingComments&&n.trailingComments[0].start>=e.end&&(s=n.trailingComments,delete n.trailingComments)}for(t.length>0&&y(t).start>=e.start&&(n=t.pop());t.length>0&&y(t).start>=e.start;)r=t.pop();if(!r&&n&&(r=n),n)switch(e.type){case"ObjectExpression":this.adjustCommentsAfterTrailingComma(e,e.properties);break;case"ObjectPattern":this.adjustCommentsAfterTrailingComma(e,e.properties,!0);break;case"CallExpression":this.adjustCommentsAfterTrailingComma(e,e.arguments);break;case"ArrayExpression":this.adjustCommentsAfterTrailingComma(e,e.elements);break;case"ArrayPattern":this.adjustCommentsAfterTrailingComma(e,e.elements,!0)}else this.state.commentPreviousNode&&("ImportSpecifier"===this.state.commentPreviousNode.type&&"ImportSpecifier"!==e.type||"ExportSpecifier"===this.state.commentPreviousNode.type&&"ExportSpecifier"!==e.type)&&this.adjustCommentsAfterTrailingComma(e,[this.state.commentPreviousNode]);if(r){if(r.leadingComments)if(r!==e&&r.leadingComments.length>0&&y(r.leadingComments).end<=e.start)e.leadingComments=r.leadingComments,delete r.leadingComments;else for(i=r.leadingComments.length-2;i>=0;--i)if(r.leadingComments[i].end<=e.start){e.leadingComments=r.leadingComments.splice(0,i+1);break}}else if(this.state.leadingComments.length>0)if(y(this.state.leadingComments).end<=e.start){if(this.state.commentPreviousNode)for(a=0;a<this.state.leadingComments.length;a++)this.state.leadingComments[a].end<this.state.commentPreviousNode.end&&(this.state.leadingComments.splice(a,1),a--);this.state.leadingComments.length>0&&(e.leadingComments=this.state.leadingComments,this.state.leadingComments=[])}else{for(i=0;i<this.state.leadingComments.length&&!(this.state.leadingComments[i].end>e.start);i++);const t=this.state.leadingComments.slice(0,i);t.length&&(e.leadingComments=t),s=this.state.leadingComments.slice(i),0===s.length&&(s=null)}if(this.state.commentPreviousNode=e,s)if(s.length&&s[0].start>=e.start&&y(s).end<=e.end)e.innerComments=s;else{const t=s.findIndex((t=>t.end>=e.end));t>0?(e.innerComments=s.slice(0,t),e.trailingComments=s.slice(t)):e.trailingComments=s}t.push(e)}}{getLocationForPosition(e){let t;return t=e===this.state.start?this.state.startLoc:e===this.state.lastTokStart?this.state.lastTokStartLoc:e===this.state.end?this.state.endLoc:e===this.state.lastTokEnd?this.state.lastTokEndLoc:function(e,t){let n,r=1,s=0;for(h.lastIndex=0;(n=h.exec(e))&&n.index<t;)r++,s=h.lastIndex;return new m(r,t-s)}(this.input,e),t}raise(e,t,...n){return this.raiseWithData(e,void 0,t,...n)}raiseWithData(e,t,n,...r){const s=this.getLocationForPosition(e),i=n.replace(/%(\d+)/g,((e,t)=>r[t]))+" (".concat(s.line,":").concat(s.column,")");return this._raise(Object.assign({loc:s,pos:e},t),i)}_raise(e,t){const n=new SyntaxError(t);if(Object.assign(n,e),this.options.errorRecovery)return this.isLookahead||this.state.errors.push(n),n;throw n}}{constructor(e,t){super(),this.isLookahead=void 0,this.tokens=[],this.state=new De,this.state.init(e),this.input=t,this.length=t.length,this.isLookahead=!1}pushToken(e){this.tokens.length=this.state.tokensLength,this.tokens.push(e),++this.state.tokensLength}next(){this.isLookahead||(this.checkKeywordEscapes(),this.options.tokens&&this.pushToken(new Ce(this.state))),this.state.lastTokEnd=this.state.end,this.state.lastTokStart=this.state.start,this.state.lastTokEndLoc=this.state.endLoc,this.state.lastTokStartLoc=this.state.startLoc,this.nextToken()}eat(e){return!!this.match(e)&&(this.next(),!0)}match(e){return this.state.type===e}lookahead(){const e=this.state;this.state=e.clone(!0),this.isLookahead=!0,this.next(),this.isLookahead=!1;const t=this.state;return this.state=e,t}nextTokenStart(){return this.nextTokenStartSince(this.state.pos)}nextTokenStartSince(e){return f.lastIndex=e,e+f.exec(this.input)[0].length}lookaheadCharCode(){return this.input.charCodeAt(this.nextTokenStart())}setStrict(e){if(this.state.strict=e,this.match(l.num)||this.match(l.string)){for(this.state.pos=this.state.start;this.state.pos<this.state.lineStart;)this.state.lineStart=this.input.lastIndexOf("\n",this.state.lineStart-2)+1,--this.state.curLine;this.nextToken()}}curContext(){return this.state.context[this.state.context.length-1]}nextToken(){const e=this.curContext();if((null==e?void 0:e.preserveSpace)||this.skipSpace(),this.state.octalPositions=[],this.state.start=this.state.pos,this.state.startLoc=this.state.curPosition(),this.state.pos>=this.length)return void this.finishToken(l.eof);const t=null==e?void 0:e.override;t?t(this):this.getTokenFromCode(this.input.codePointAt(this.state.pos))}pushComment(e,t,n,r,s,i){const a={type:e?"CommentBlock":"CommentLine",value:t,start:n,end:r,loc:new g(s,i)};this.options.tokens&&this.pushToken(a),this.state.comments.push(a),this.addComment(a)}skipBlockComment(){const e=this.state.curPosition(),t=this.state.pos,n=this.input.indexOf("*/",this.state.pos+2);if(-1===n)throw this.raise(t,E.UnterminatedComment);let r;for(this.state.pos=n+2,h.lastIndex=t;(r=h.exec(this.input))&&r.index<this.state.pos;)++this.state.curLine,this.state.lineStart=r.index+r[0].length;this.isLookahead||this.pushComment(!0,this.input.slice(t+2,n),t,this.state.pos,e,this.state.curPosition())}skipLineComment(e){const t=this.state.pos,n=this.state.curPosition();let r=this.input.charCodeAt(this.state.pos+=e);if(this.state.pos<this.length)for(;!d(r)&&++this.state.pos<this.length;)r=this.input.charCodeAt(this.state.pos);this.isLookahead||this.pushComment(!1,this.input.slice(t+e,this.state.pos),t,this.state.pos,n,this.state.curPosition())}skipSpace(){e:for(;this.state.pos<this.length;){const e=this.input.charCodeAt(this.state.pos);switch(e){case 32:case 160:case 9:++this.state.pos;break;case 13:10===this.input.charCodeAt(this.state.pos+1)&&++this.state.pos;case 10:case 8232:case 8233:++this.state.pos,++this.state.curLine,this.state.lineStart=this.state.pos;break;case 47:switch(this.input.charCodeAt(this.state.pos+1)){case 42:this.skipBlockComment();break;case 47:this.skipLineComment(2);break;default:break e}break;default:if(!D(e))break e;++this.state.pos}}}finishToken(e,t){this.state.end=this.state.pos,this.state.endLoc=this.state.curPosition();const n=this.state.type;this.state.type=e,this.state.value=t,this.isLookahead||this.updateContext(n)}readToken_numberSign(){if(0===this.state.pos&&this.readToken_interpreter())return;const e=this.state.pos+1,t=this.input.charCodeAt(e);if(t>=48&&t<=57)throw this.raise(this.state.pos,E.UnexpectedDigitAfterHash);if(123===t||91===t&&this.hasPlugin("recordAndTuple")){if(this.expectPlugin("recordAndTuple"),"hash"!==this.getPluginOption("recordAndTuple","syntaxType"))throw this.raise(this.state.pos,123===t?E.RecordExpressionHashIncorrectStartSyntaxType:E.TupleExpressionHashIncorrectStartSyntaxType);123===t?this.finishToken(l.braceHashL):this.finishToken(l.bracketHashL),this.state.pos+=2}else this.finishOp(l.hash,1)}readToken_dot(){const e=this.input.charCodeAt(this.state.pos+1);e>=48&&e<=57?this.readNumber(!0):46===e&&46===this.input.charCodeAt(this.state.pos+2)?(this.state.pos+=3,this.finishToken(l.ellipsis)):(++this.state.pos,this.finishToken(l.dot))}readToken_slash(){if(this.state.exprAllowed&&!this.state.inType)return++this.state.pos,void this.readRegexp();61===this.input.charCodeAt(this.state.pos+1)?this.finishOp(l.assign,2):this.finishOp(l.slash,1)}readToken_interpreter(){if(0!==this.state.pos||this.length<2)return!1;let e=this.input.charCodeAt(this.state.pos+1);if(33!==e)return!1;const t=this.state.pos;for(this.state.pos+=1;!d(e)&&++this.state.pos<this.length;)e=this.input.charCodeAt(this.state.pos);const n=this.input.slice(t+2,this.state.pos);return this.finishToken(l.interpreterDirective,n),!0}readToken_mult_modulo(e){let t=42===e?l.star:l.modulo,n=1,r=this.input.charCodeAt(this.state.pos+1);const s=this.state.exprAllowed;42===e&&42===r&&(n++,r=this.input.charCodeAt(this.state.pos+2),t=l.exponent),61!==r||s||(n++,t=l.assign),this.finishOp(t,n)}readToken_pipe_amp(e){const t=this.input.charCodeAt(this.state.pos+1);if(t!==e){if(124===e){if(62===t)return void this.finishOp(l.pipeline,2);if(this.hasPlugin("recordAndTuple")&&125===t){if("bar"!==this.getPluginOption("recordAndTuple","syntaxType"))throw this.raise(this.state.pos,E.RecordExpressionBarIncorrectEndSyntaxType);return void this.finishOp(l.braceBarR,2)}if(this.hasPlugin("recordAndTuple")&&93===t){if("bar"!==this.getPluginOption("recordAndTuple","syntaxType"))throw this.raise(this.state.pos,E.TupleExpressionBarIncorrectEndSyntaxType);return void this.finishOp(l.bracketBarR,2)}}61!==t?this.finishOp(124===e?l.bitwiseOR:l.bitwiseAND,1):this.finishOp(l.assign,2)}else 61===this.input.charCodeAt(this.state.pos+2)?this.finishOp(l.assign,3):this.finishOp(124===e?l.logicalOR:l.logicalAND,2)}readToken_caret(){61===this.input.charCodeAt(this.state.pos+1)?this.finishOp(l.assign,2):this.finishOp(l.bitwiseXOR,1)}readToken_plus_min(e){const t=this.input.charCodeAt(this.state.pos+1);if(t===e)return 45!==t||this.inModule||62!==this.input.charCodeAt(this.state.pos+2)||0!==this.state.lastTokEnd&&!this.hasPrecedingLineBreak()?void this.finishOp(l.incDec,2):(this.skipLineComment(3),this.skipSpace(),void this.nextToken());61===t?this.finishOp(l.assign,2):this.finishOp(l.plusMin,1)}readToken_lt_gt(e){const t=this.input.charCodeAt(this.state.pos+1);let n=1;return t===e?(n=62===e&&62===this.input.charCodeAt(this.state.pos+2)?3:2,61===this.input.charCodeAt(this.state.pos+n)?void this.finishOp(l.assign,n+1):void this.finishOp(l.bitShift,n)):33!==t||60!==e||this.inModule||45!==this.input.charCodeAt(this.state.pos+2)||45!==this.input.charCodeAt(this.state.pos+3)?(61===t&&(n=2),void this.finishOp(l.relational,n)):(this.skipLineComment(4),this.skipSpace(),void this.nextToken())}readToken_eq_excl(e){const t=this.input.charCodeAt(this.state.pos+1);if(61!==t)return 61===e&&62===t?(this.state.pos+=2,void this.finishToken(l.arrow)):void this.finishOp(61===e?l.eq:l.bang,1);this.finishOp(l.equality,61===this.input.charCodeAt(this.state.pos+2)?3:2)}readToken_question(){const e=this.input.charCodeAt(this.state.pos+1),t=this.input.charCodeAt(this.state.pos+2);63===e?61===t?this.finishOp(l.assign,3):this.finishOp(l.nullishCoalescing,2):46!==e||t>=48&&t<=57?(++this.state.pos,this.finishToken(l.question)):(this.state.pos+=2,this.finishToken(l.questionDot))}getTokenFromCode(e){switch(e){case 46:return void this.readToken_dot();case 40:return++this.state.pos,void this.finishToken(l.parenL);case 41:return++this.state.pos,void this.finishToken(l.parenR);case 59:return++this.state.pos,void this.finishToken(l.semi);case 44:return++this.state.pos,void this.finishToken(l.comma);case 91:if(this.hasPlugin("recordAndTuple")&&124===this.input.charCodeAt(this.state.pos+1)){if("bar"!==this.getPluginOption("recordAndTuple","syntaxType"))throw this.raise(this.state.pos,E.TupleExpressionBarIncorrectStartSyntaxType);this.finishToken(l.bracketBarL),this.state.pos+=2}else++this.state.pos,this.finishToken(l.bracketL);return;case 93:return++this.state.pos,void this.finishToken(l.bracketR);case 123:if(this.hasPlugin("recordAndTuple")&&124===this.input.charCodeAt(this.state.pos+1)){if("bar"!==this.getPluginOption("recordAndTuple","syntaxType"))throw this.raise(this.state.pos,E.RecordExpressionBarIncorrectStartSyntaxType);this.finishToken(l.braceBarL),this.state.pos+=2}else++this.state.pos,this.finishToken(l.braceL);return;case 125:return++this.state.pos,void this.finishToken(l.braceR);case 58:return void(this.hasPlugin("functionBind")&&58===this.input.charCodeAt(this.state.pos+1)?this.finishOp(l.doubleColon,2):(++this.state.pos,this.finishToken(l.colon)));case 63:return void this.readToken_question();case 96:return++this.state.pos,void this.finishToken(l.backQuote);case 48:{const e=this.input.charCodeAt(this.state.pos+1);if(120===e||88===e)return void this.readRadixNumber(16);if(111===e||79===e)return void this.readRadixNumber(8);if(98===e||66===e)return void this.readRadixNumber(2)}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return void this.readNumber(!1);case 34:case 39:return void this.readString(e);case 47:return void this.readToken_slash();case 37:case 42:return void this.readToken_mult_modulo(e);case 124:case 38:return void this.readToken_pipe_amp(e);case 94:return void this.readToken_caret();case 43:case 45:return void this.readToken_plus_min(e);case 60:case 62:return void this.readToken_lt_gt(e);case 61:case 33:return void this.readToken_eq_excl(e);case 126:return void this.finishOp(l.tilde,1);case 64:return++this.state.pos,void this.finishToken(l.at);case 35:return void this.readToken_numberSign();case 92:return void this.readWord();default:if(P(e))return void this.readWord()}throw this.raise(this.state.pos,E.InvalidOrUnexpectedToken,String.fromCodePoint(e))}finishOp(e,t){const n=this.input.slice(this.state.pos,this.state.pos+t);this.state.pos+=t,this.finishToken(e,n)}readRegexp(){const e=this.state.pos;let t,n;for(;;){if(this.state.pos>=this.length)throw this.raise(e,E.UnterminatedRegExp);const r=this.input.charAt(this.state.pos);if(p.test(r))throw this.raise(e,E.UnterminatedRegExp);if(t)t=!1;else{if("["===r)n=!0;else if("]"===r&&n)n=!1;else if("/"===r&&!n)break;t="\\"===r}++this.state.pos}const r=this.input.slice(e,this.state.pos);++this.state.pos;let s="";for(;this.state.pos<this.length;){const e=this.input[this.state.pos],t=this.input.codePointAt(this.state.pos);if(ge.has(e))s.indexOf(e)>-1&&this.raise(this.state.pos+1,E.DuplicateRegExpFlags);else{if(!N(t)&&92!==t)break;this.raise(this.state.pos+1,E.MalformedRegExpFlags)}++this.state.pos,s+=e}this.finishToken(l.regexp,{pattern:r,flags:s})}readInt(e,t,n,r=!0){const s=this.state.pos,i=16===e?ye.hex:ye.decBinOct,a=16===e?Ee.hex:10===e?Ee.dec:8===e?Ee.oct:Ee.bin;let o=!1,u=0;for(let s=0,c=null==t?1/0:t;s<c;++s){const t=this.input.charCodeAt(this.state.pos);let c;if(95!==t){if(c=t>=97?t-97+10:t>=65?t-65+10:me(t)?t-48:1/0,c>=e)if(this.options.errorRecovery&&c<=9)c=0,this.raise(this.state.start+s+2,E.InvalidDigit,e);else{if(!n)break;c=0,o=!0}++this.state.pos,u=u*e+c}else{const e=this.input.charCodeAt(this.state.pos-1),t=this.input.charCodeAt(this.state.pos+1);(-1===a.indexOf(t)||i.indexOf(e)>-1||i.indexOf(t)>-1||Number.isNaN(t))&&this.raise(this.state.pos,E.UnexpectedNumericSeparator),r||this.raise(this.state.pos,E.NumericSeparatorInEscapeSequence),++this.state.pos}}return this.state.pos===s||null!=t&&this.state.pos-s!==t||o?null:u}readRadixNumber(e){const t=this.state.pos;let n=!1;this.state.pos+=2;const r=this.readInt(e);null==r&&this.raise(this.state.start+2,E.InvalidDigit,e);const s=this.input.charCodeAt(this.state.pos);if(110===s)++this.state.pos,n=!0;else if(109===s)throw this.raise(t,E.InvalidDecimal);if(P(this.input.codePointAt(this.state.pos)))throw this.raise(this.state.pos,E.NumberIdentifier);if(n){const e=this.input.slice(t,this.state.pos).replace(/[_n]/g,"");this.finishToken(l.bigint,e)}else this.finishToken(l.num,r)}readNumber(e){const t=this.state.pos;let n=!1,r=!1,s=!1,i=!1,a=!1;e||null!==this.readInt(10)||this.raise(t,E.InvalidNumber);const o=this.state.pos-t>=2&&48===this.input.charCodeAt(t);if(o){const e=this.input.slice(t,this.state.pos);if(this.state.strict)this.raise(t,E.StrictOctalLiteral);else{const n=e.indexOf("_");n>0&&this.raise(n+t,E.ZeroDigitNumericSeparator)}a=o&&!/[89]/.test(e)}let u=this.input.charCodeAt(this.state.pos);if(46!==u||a||(++this.state.pos,this.readInt(10),n=!0,u=this.input.charCodeAt(this.state.pos)),69!==u&&101!==u||a||(u=this.input.charCodeAt(++this.state.pos),43!==u&&45!==u||++this.state.pos,null===this.readInt(10)&&this.raise(t,E.InvalidOrMissingExponent),n=!0,i=!0,u=this.input.charCodeAt(this.state.pos)),110===u&&((n||o)&&this.raise(t,E.InvalidBigIntLiteral),++this.state.pos,r=!0),109===u&&(this.expectPlugin("decimal",this.state.pos),(i||o)&&this.raise(t,E.InvalidDecimal),++this.state.pos,s=!0),P(this.input.codePointAt(this.state.pos)))throw this.raise(this.state.pos,E.NumberIdentifier);const c=this.input.slice(t,this.state.pos).replace(/[_mn]/g,"");if(r)return void this.finishToken(l.bigint,c);if(s)return void this.finishToken(l.decimal,c);const p=a?parseInt(c,8):parseFloat(c);this.finishToken(l.num,p)}readCodePoint(e){let t;if(123===this.input.charCodeAt(this.state.pos)){const n=++this.state.pos;if(t=this.readHexChar(this.input.indexOf("}",this.state.pos)-this.state.pos,!0,e),++this.state.pos,null!==t&&t>1114111){if(!e)return null;this.raise(n,E.InvalidCodePoint)}}else t=this.readHexChar(4,!1,e);return t}readString(e){let t="",n=++this.state.pos;for(;;){if(this.state.pos>=this.length)throw this.raise(this.state.start,E.UnterminatedString);const r=this.input.charCodeAt(this.state.pos);if(r===e)break;if(92===r)t+=this.input.slice(n,this.state.pos),t+=this.readEscapedChar(!1),n=this.state.pos;else if(8232===r||8233===r)++this.state.pos,++this.state.curLine,this.state.lineStart=this.state.pos;else{if(d(r))throw this.raise(this.state.start,E.UnterminatedString);++this.state.pos}}t+=this.input.slice(n,this.state.pos++),this.finishToken(l.string,t)}readTmplToken(){let e="",t=this.state.pos,n=!1;for(;;){if(this.state.pos>=this.length)throw this.raise(this.state.start,E.UnterminatedTemplate);const r=this.input.charCodeAt(this.state.pos);if(96===r||36===r&&123===this.input.charCodeAt(this.state.pos+1))return this.state.pos===this.state.start&&this.match(l.template)?36===r?(this.state.pos+=2,void this.finishToken(l.dollarBraceL)):(++this.state.pos,void this.finishToken(l.backQuote)):(e+=this.input.slice(t,this.state.pos),void this.finishToken(l.template,n?null:e));if(92===r){e+=this.input.slice(t,this.state.pos);const r=this.readEscapedChar(!0);null===r?n=!0:e+=r,t=this.state.pos}else if(d(r)){switch(e+=this.input.slice(t,this.state.pos),++this.state.pos,r){case 13:10===this.input.charCodeAt(this.state.pos)&&++this.state.pos;case 10:e+="\n";break;default:e+=String.fromCharCode(r)}++this.state.curLine,this.state.lineStart=this.state.pos,t=this.state.pos}else++this.state.pos}}readEscapedChar(e){const t=!e,n=this.input.charCodeAt(++this.state.pos);switch(++this.state.pos,n){case 110:return"\n";case 114:return"\r";case 120:{const e=this.readHexChar(2,!1,t);return null===e?null:String.fromCharCode(e)}case 117:{const e=this.readCodePoint(t);return null===e?null:String.fromCodePoint(e)}case 116:return"\t";case 98:return"\b";case 118:return"\v";case 102:return"\f";case 13:10===this.input.charCodeAt(this.state.pos)&&++this.state.pos;case 10:this.state.lineStart=this.state.pos,++this.state.curLine;case 8232:case 8233:return"";case 56:case 57:if(e)return null;this.state.strict&&this.raise(this.state.pos-1,E.StrictNumericEscape);default:if(n>=48&&n<=55){const t=this.state.pos-1;let n=this.input.substr(this.state.pos-1,3).match(/^[0-7]+/)[0],r=parseInt(n,8);r>255&&(n=n.slice(0,-1),r=parseInt(n,8)),this.state.pos+=n.length-1;const s=this.input.charCodeAt(this.state.pos);if("0"!==n||56===s||57===s){if(e)return null;this.state.strict?this.raise(t,E.StrictNumericEscape):this.state.octalPositions.push(t)}return String.fromCharCode(r)}return String.fromCharCode(n)}}readHexChar(e,t,n){const r=this.state.pos,s=this.readInt(16,e,t,!1);return null===s&&(n?this.raise(r,E.InvalidEscapeSequence):this.state.pos=r-1),s}readWord1(){let e="";this.state.containsEsc=!1;const t=this.state.pos;let n=this.state.pos;for(;this.state.pos<this.length;){const r=this.input.codePointAt(this.state.pos);if(N(r))this.state.pos+=r<=65535?1:2;else if(this.state.isIterator&&64===r)++this.state.pos;else{if(92!==r)break;{this.state.containsEsc=!0,e+=this.input.slice(n,this.state.pos);const r=this.state.pos,s=this.state.pos===t?P:N;if(117!==this.input.charCodeAt(++this.state.pos)){this.raise(this.state.pos,E.MissingUnicodeEscape);continue}++this.state.pos;const i=this.readCodePoint(!0);null!==i&&(s(i)||this.raise(r,E.EscapedCharNotAnIdentifier),e+=String.fromCodePoint(i)),n=this.state.pos}}}return e+this.input.slice(n,this.state.pos)}isIterator(e){return"@@iterator"===e||"@@asyncIterator"===e}readWord(){const e=this.readWord1(),t=o.get(e)||l.name;!this.state.isIterator||this.isIterator(e)&&this.state.inType||this.raise(this.state.pos,E.InvalidIdentifier,e),this.finishToken(t,e)}checkKeywordEscapes(){const e=this.state.type.keyword;e&&this.state.containsEsc&&this.raise(this.state.start,E.InvalidEscapedReservedWord,e)}braceIsBlock(e){const t=this.curContext();return t===b.functionExpression||t===b.functionStatement||(e!==l.colon||t!==b.braceStatement&&t!==b.braceExpression?e===l._return||e===l.name&&this.state.exprAllowed?this.hasPrecedingLineBreak():e===l._else||e===l.semi||e===l.eof||e===l.parenR||e===l.arrow||(e===l.braceL?t===b.braceStatement:e!==l._var&&e!==l._const&&e!==l.name&&(e===l.relational||!this.state.exprAllowed)):!t.isExpr)}updateContext(e){const t=this.state.type;let n;!t.keyword||e!==l.dot&&e!==l.questionDot?(n=t.updateContext)?n.call(this,e):this.state.exprAllowed=t.beforeExpr:this.state.exprAllowed=!1}}{addExtra(e,t,n){e&&((e.extra=e.extra||{})[t]=n)}isRelational(e){return this.match(l.relational)&&this.state.value===e}expectRelational(e){this.isRelational(e)?this.next():this.unexpected(null,l.relational)}isContextual(e){return this.match(l.name)&&this.state.value===e&&!this.state.containsEsc}isUnparsedContextual(e,t){const n=e+t.length;return this.input.slice(e,n)===t&&(n===this.input.length||!N(this.input.charCodeAt(n)))}isLookaheadContextual(e){const t=this.nextTokenStart();return this.isUnparsedContextual(t,e)}eatContextual(e){return this.isContextual(e)&&this.eat(l.name)}expectContextual(e,t){this.eatContextual(e)||this.unexpected(null,t)}canInsertSemicolon(){return this.match(l.eof)||this.match(l.braceR)||this.hasPrecedingLineBreak()}hasPrecedingLineBreak(){return p.test(this.input.slice(this.state.lastTokEnd,this.state.start))}isLineTerminator(){return this.eat(l.semi)||this.canInsertSemicolon()}semicolon(){this.isLineTerminator()||this.unexpected(null,l.semi)}expect(e,t){this.eat(e)||this.unexpected(t,e)}assertNoSpace(e="Unexpected space."){this.state.start>this.state.lastTokEnd&&this.raise(this.state.lastTokEnd,e)}unexpected(e,t="Unexpected token"){throw"string"!=typeof t&&(t='Unexpected token, expected "'.concat(t.label,'"')),this.raise(null!=e?e:this.state.start,t)}expectPlugin(e,t){if(!this.hasPlugin(e))throw this.raiseWithData(null!=t?t:this.state.start,{missingPlugin:[e]},"This experimental syntax requires enabling the parser plugin: '".concat(e,"'"));return!0}expectOnePlugin(e,t){if(!e.some((e=>this.hasPlugin(e))))throw this.raiseWithData(null!=t?t:this.state.start,{missingPlugin:e},"This experimental syntax requires enabling one of the following parser plugin(s): '".concat(e.join(", "),"'"))}tryParse(e,t=this.state.clone()){const n={node:null};try{const r=e(((e=null)=>{throw n.node=e,n}));if(this.state.errors.length>t.errors.length){const e=this.state;return this.state=t,{node:r,error:e.errors[t.errors.length],thrown:!1,aborted:!1,failState:e}}return{node:r,error:null,thrown:!1,aborted:!1,failState:null}}catch(e){const r=this.state;if(this.state=t,e instanceof SyntaxError)return{node:null,error:e,thrown:!0,aborted:!1,failState:r};if(e===n)return{node:n.node,error:null,thrown:!1,aborted:!0,failState:r};throw e}}checkExpressionErrors(e,t){if(!e)return!1;const{shorthandAssign:n,doubleProto:r}=e;if(!t)return n>=0||r>=0;n>=0&&this.unexpected(n),r>=0&&this.raise(r,E.DuplicateProto)}isLiteralPropertyName(){return this.match(l.name)||!!this.state.type.keyword||this.match(l.string)||this.match(l.num)||this.match(l.bigint)||this.match(l.decimal)}}{startNode(){return new be(this,this.state.start,this.state.startLoc)}startNodeAt(e,t){return new be(this,e,t)}startNodeAtNode(e){return this.startNodeAt(e.start,e.loc.start)}finishNode(e,t){return this.finishNodeAt(e,t,this.state.lastTokEnd,this.state.lastTokEndLoc)}finishNodeAt(e,t,n,r){return e.type=t,e.end=n,e.loc.end=r,this.options.ranges&&(e.range[1]=n),this.processComment(e),e}resetStartLocation(e,t,n){e.start=t,e.loc.start=n,this.options.ranges&&(e.range[0]=t)}resetEndLocation(e,t=this.state.lastTokEnd,n=this.state.lastTokEndLoc){e.end=t,e.loc.end=n,this.options.ranges&&(e.range[1]=t)}resetStartLocationFromNode(e,t){this.resetStartLocation(e,t.start,t.loc.start)}}{toAssignable(e){var t,n;let r;switch(("ParenthesizedExpression"===e.type||(null==(t=e.extra)?void 0:t.parenthesized))&&(r=Fe(e),"Identifier"!==r.type&&"MemberExpression"!==r.type&&this.raise(e.start,E.InvalidParenthesizedAssignment)),e.type){case"Identifier":case"ObjectPattern":case"ArrayPattern":case"AssignmentPattern":break;case"ObjectExpression":e.type="ObjectPattern";for(let t=0,n=e.properties.length,r=n-1;t<n;t++){var s;const n=e.properties[t],i=t===r;this.toAssignableObjectExpressionProp(n,i),i&&"RestElement"===n.type&&(null==(s=e.extra)?void 0:s.trailingComma)&&this.raiseRestNotLast(e.extra.trailingComma)}break;case"ObjectProperty":this.toAssignable(e.value);break;case"SpreadElement":{this.checkToRestConversion(e),e.type="RestElement";const t=e.argument;this.toAssignable(t);break}case"ArrayExpression":e.type="ArrayPattern",this.toAssignableList(e.elements,null==(n=e.extra)?void 0:n.trailingComma);break;case"AssignmentExpression":"="!==e.operator&&this.raise(e.left.end,E.MissingEqInAssignment),e.type="AssignmentPattern",delete e.operator,this.toAssignable(e.left);break;case"ParenthesizedExpression":this.toAssignable(r)}return e}toAssignableObjectExpressionProp(e,t){if("ObjectMethod"===e.type){const t="get"===e.kind||"set"===e.kind?E.PatternHasAccessor:E.PatternHasMethod;this.raise(e.key.start,t)}else"SpreadElement"!==e.type||t?this.toAssignable(e):this.raiseRestNotLast(e.start)}toAssignableList(e,t){let n=e.length;if(n){const r=e[n-1];if("RestElement"===(null==r?void 0:r.type))--n;else if("SpreadElement"===(null==r?void 0:r.type)){r.type="RestElement";const e=r.argument;this.toAssignable(e),"Identifier"!==e.type&&"MemberExpression"!==e.type&&"ArrayPattern"!==e.type&&"ObjectPattern"!==e.type&&this.unexpected(e.start),t&&this.raiseTrailingCommaAfterRest(t),--n}}for(let t=0;t<n;t++){const n=e[t];n&&(this.toAssignable(n),"RestElement"===n.type&&this.raiseRestNotLast(n.start))}return e}toReferencedList(e,t){return e}toReferencedListDeep(e,t){this.toReferencedList(e,t);for(let t=0;t<e.length;t++){const n=e[t];"ArrayExpression"===(null==n?void 0:n.type)&&this.toReferencedListDeep(n.elements)}}parseSpread(e,t){const n=this.startNode();return this.next(),n.argument=this.parseMaybeAssignAllowIn(e,void 0,t),this.finishNode(n,"SpreadElement")}parseRestBinding(){const e=this.startNode();return this.next(),e.argument=this.parseBindingAtom(),this.finishNode(e,"RestElement")}parseBindingAtom(){switch(this.state.type){case l.bracketL:{const e=this.startNode();return this.next(),e.elements=this.parseBindingList(l.bracketR,93,!0),this.finishNode(e,"ArrayPattern")}case l.braceL:return this.parseObjectLike(l.braceR,!0)}return this.parseIdentifier()}parseBindingList(e,t,n,r){const s=[];let i=!0;for(;!this.eat(e);)if(i?i=!1:this.expect(l.comma),n&&this.match(l.comma))s.push(null);else{if(this.eat(e))break;if(this.match(l.ellipsis)){s.push(this.parseAssignableListItemTypes(this.parseRestBinding())),this.checkCommaAfterRest(t),this.expect(e);break}{const e=[];for(this.match(l.at)&&this.hasPlugin("decorators")&&this.raise(this.state.start,E.UnsupportedParameterDecorator);this.match(l.at);)e.push(this.parseDecorator());s.push(this.parseAssignableListItem(r,e))}}return s}parseAssignableListItem(e,t){const n=this.parseMaybeDefault();this.parseAssignableListItemTypes(n);const r=this.parseMaybeDefault(n.start,n.loc.start,n);return t.length&&(n.decorators=t),r}parseAssignableListItemTypes(e){return e}parseMaybeDefault(e,t,n){var r,s,i;if(t=null!=(r=t)?r:this.state.startLoc,e=null!=(s=e)?s:this.state.start,n=null!=(i=n)?i:this.parseBindingAtom(),!this.eat(l.eq))return n;const a=this.startNodeAt(e,t);return a.left=n,a.right=this.parseMaybeAssignAllowIn(),this.finishNode(a,"AssignmentPattern")}checkLVal(e,t=64,n,r,s,i=!1){switch(e.type){case"Identifier":if(this.state.strict&&(i?R(e.name,this.inModule):M(e.name))&&this.raise(e.start,64===t?E.StrictEvalArguments:E.StrictEvalArgumentsBinding,e.name),n){const t="_".concat(e.name);n[t]?this.raise(e.start,E.ParamDupe):n[t]=!0}s&&"let"===e.name&&this.raise(e.start,E.LetInLexicalBinding),64&t||this.scope.declareName(e.name,t,e.start);break;case"MemberExpression":64!==t&&this.raise(e.start,E.InvalidPropertyBindingPattern);break;case"ObjectPattern":for(let r=0,i=e.properties;r<i.length;r++){let e=i[r];if("ObjectProperty"===e.type)e=e.value;else if("ObjectMethod"===e.type)continue;this.checkLVal(e,t,n,"object destructuring pattern",s)}break;case"ArrayPattern":for(let r=0,i=e.elements;r<i.length;r++){const e=i[r];e&&this.checkLVal(e,t,n,"array destructuring pattern",s)}break;case"AssignmentPattern":this.checkLVal(e.left,t,n,"assignment pattern");break;case"RestElement":this.checkLVal(e.argument,t,n,"rest element");break;case"ParenthesizedExpression":this.checkLVal(e.expression,t,n,"parenthesized expression");break;default:this.raise(e.start,64===t?E.InvalidLhs:E.InvalidLhsBinding,r)}}checkToRestConversion(e){"Identifier"!==e.argument.type&&"MemberExpression"!==e.argument.type&&this.raise(e.argument.start,E.InvalidRestAssignmentPattern)}checkCommaAfterRest(e){this.match(l.comma)&&(this.lookaheadCharCode()===e?this.raiseTrailingCommaAfterRest(this.state.start):this.raiseRestNotLast(this.state.start))}raiseRestNotLast(e){throw this.raise(e,E.ElementAfterRest)}raiseTrailingCommaAfterRest(e){this.raise(e,E.RestTrailingComma)}}{checkProto(e,t,n,r){if("SpreadElement"===e.type||"ObjectMethod"===e.type||e.computed||e.shorthand)return;const s=e.key;if("__proto__"===("Identifier"===s.type?s.name:s.value)){if(t)return void this.raise(s.start,E.RecordNoProto);n.used&&(r?-1===r.doubleProto&&(r.doubleProto=s.start):this.raise(s.start,E.DuplicateProto)),n.used=!0}}shouldExitDescending(e,t){return"ArrowFunctionExpression"===e.type&&e.start===t}getExpression(){let e=0;this.hasPlugin("topLevelAwait")&&this.inModule&&(e|=2),this.scope.enter(1),this.prodParam.enter(e),this.nextToken();const t=this.parseExpression();return this.match(l.eof)||this.unexpected(),t.comments=this.state.comments,t.errors=this.state.errors,t}parseExpression(e,t){return e?this.disallowInAnd((()=>this.parseExpressionBase(t))):this.allowInAnd((()=>this.parseExpressionBase(t)))}parseExpressionBase(e){const t=this.state.start,n=this.state.startLoc,r=this.parseMaybeAssign(e);if(this.match(l.comma)){const s=this.startNodeAt(t,n);for(s.expressions=[r];this.eat(l.comma);)s.expressions.push(this.parseMaybeAssign(e));return this.toReferencedList(s.expressions),this.finishNode(s,"SequenceExpression")}return r}parseMaybeAssignDisallowIn(e,t,n){return this.disallowInAnd((()=>this.parseMaybeAssign(e,t,n)))}parseMaybeAssignAllowIn(e,t,n){return this.allowInAnd((()=>this.parseMaybeAssign(e,t,n)))}parseMaybeAssign(e,t,n){const r=this.state.start,s=this.state.startLoc;if(this.isContextual("yield")&&this.prodParam.hasYield){this.state.exprAllowed=!0;let e=this.parseYield();return t&&(e=t.call(this,e,r,s)),e}let i;e?i=!1:(e=new Ae,i=!0),(this.match(l.parenL)||this.match(l.name))&&(this.state.potentialArrowAt=this.state.start);let a=this.parseMaybeConditional(e,n);if(t&&(a=t.call(this,a,r,s)),this.state.type.isAssign){const t=this.startNodeAt(r,s),n=this.state.value;return t.operator=n,this.match(l.eq)?(t.left=this.toAssignable(a),e.doubleProto=-1):t.left=a,e.shorthandAssign>=t.left.start&&(e.shorthandAssign=-1),this.checkLVal(a,void 0,void 0,"assignment expression"),this.next(),t.right=this.parseMaybeAssign(),this.finishNode(t,"AssignmentExpression")}return i&&this.checkExpressionErrors(e,!0),a}parseMaybeConditional(e,t){const n=this.state.start,r=this.state.startLoc,s=this.state.potentialArrowAt,i=this.parseExprOps(e);return this.shouldExitDescending(i,s)?i:this.parseConditional(i,n,r,t)}parseConditional(e,t,n,r){if(this.eat(l.question)){const r=this.startNodeAt(t,n);return r.test=e,r.consequent=this.parseMaybeAssignAllowIn(),this.expect(l.colon),r.alternate=this.parseMaybeAssign(),this.finishNode(r,"ConditionalExpression")}return e}parseExprOps(e){const t=this.state.start,n=this.state.startLoc,r=this.state.potentialArrowAt,s=this.parseMaybeUnary(e);return this.shouldExitDescending(s,r)?s:this.parseExprOp(s,t,n,-1)}parseExprOp(e,t,n,r){let s=this.state.type.binop;if(null!=s&&(this.prodParam.hasIn||!this.match(l._in))&&s>r){const i=this.state.type;if(i===l.pipeline){if(this.expectPlugin("pipelineOperator"),this.state.inFSharpPipelineDirectBody)return e;this.state.inPipeline=!0,this.checkPipelineAtInfixOperator(e,t)}const a=this.startNodeAt(t,n);a.left=e,a.operator=this.state.value,i!==l.exponent||"UnaryExpression"!==e.type||!this.options.createParenthesizedExpressions&&e.extra&&e.extra.parenthesized||this.raise(e.argument.start,E.UnexpectedTokenUnaryExponentiation);const o=i===l.logicalOR||i===l.logicalAND,u=i===l.nullishCoalescing;if(u&&(s=l.logicalAND.binop),this.next(),i===l.pipeline&&"minimal"===this.getPluginOption("pipelineOperator","proposal")&&this.match(l.name)&&"await"===this.state.value&&this.prodParam.hasAwait)throw this.raise(this.state.start,E.UnexpectedAwaitAfterPipelineBody);a.right=this.parseExprOpRightExpr(i,s),this.finishNode(a,o||u?"LogicalExpression":"BinaryExpression");const c=this.state.type;if(u&&(c===l.logicalOR||c===l.logicalAND)||o&&c===l.nullishCoalescing)throw this.raise(this.state.start,E.MixingCoalesceWithLogical);return this.parseExprOp(a,t,n,r)}return e}parseExprOpRightExpr(e,t){const n=this.state.start,r=this.state.startLoc;if(e===l.pipeline)switch(this.getPluginOption("pipelineOperator","proposal")){case"smart":return this.withTopicPermittingContext((()=>this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(e,t),n,r)));case"fsharp":return this.withSoloAwaitPermittingContext((()=>this.parseFSharpPipelineBody(t)))}return this.parseExprOpBaseRightExpr(e,t)}parseExprOpBaseRightExpr(e,t){const n=this.state.start,r=this.state.startLoc;return this.parseExprOp(this.parseMaybeUnary(),n,r,e.rightAssociative?t-1:t)}parseMaybeUnary(e){if(this.isContextual("await")&&this.isAwaitAllowed())return this.parseAwait();const t=this.match(l.incDec),n=this.startNode();if(this.state.type.prefix){n.operator=this.state.value,n.prefix=!0,this.match(l._throw)&&this.expectPlugin("throwExpressions");const r=this.match(l._delete);if(this.next(),n.argument=this.parseMaybeUnary(),this.checkExpressionErrors(e,!0),this.state.strict&&r){const e=n.argument;"Identifier"===e.type?this.raise(n.start,E.StrictDelete):"MemberExpression"!==e.type&&"OptionalMemberExpression"!==e.type||"PrivateName"!==e.property.type||this.raise(n.start,E.DeletePrivateField)}if(!t)return this.finishNode(n,"UnaryExpression")}return this.parseUpdate(n,t,e)}parseUpdate(e,t,n){if(t)return this.checkLVal(e.argument,void 0,void 0,"prefix operation"),this.finishNode(e,"UpdateExpression");const r=this.state.start,s=this.state.startLoc;let i=this.parseExprSubscripts(n);if(this.checkExpressionErrors(n,!1))return i;for(;this.state.type.postfix&&!this.canInsertSemicolon();){const e=this.startNodeAt(r,s);e.operator=this.state.value,e.prefix=!1,e.argument=i,this.checkLVal(i,void 0,void 0,"postfix operation"),this.next(),i=this.finishNode(e,"UpdateExpression")}return i}parseExprSubscripts(e){const t=this.state.start,n=this.state.startLoc,r=this.state.potentialArrowAt,s=this.parseExprAtom(e);return this.shouldExitDescending(s,r)?s:this.parseSubscripts(s,t,n)}parseSubscripts(e,t,n,r){const s={optionalChainMember:!1,maybeAsyncArrow:this.atPossibleAsyncArrow(e),stop:!1};do{e=this.parseSubscript(e,t,n,r,s),s.maybeAsyncArrow=!1}while(!s.stop);return e}parseSubscript(e,t,n,r,s){if(!r&&this.eat(l.doubleColon))return this.parseBind(e,t,n,r,s);if(this.match(l.backQuote))return this.parseTaggedTemplateExpression(e,t,n,s);let i=!1;if(this.match(l.questionDot)){if(s.optionalChainMember=i=!0,r&&40===this.lookaheadCharCode())return s.stop=!0,e;this.next()}return!r&&this.match(l.parenL)?this.parseCoverCallAndAsyncArrowHead(e,t,n,s,i):i||this.match(l.bracketL)||this.eat(l.dot)?this.parseMember(e,t,n,s,i):(s.stop=!0,e)}parseMember(e,t,n,r,s){const i=this.startNodeAt(t,n),a=this.eat(l.bracketL);i.object=e,i.computed=a;const o=a?this.parseExpression():this.parseMaybePrivateName(!0);return"PrivateName"===o.type&&("Super"===i.object.type&&this.raise(t,E.SuperPrivateField),this.classScope.usePrivateName(o.id.name,o.start)),i.property=o,a&&this.expect(l.bracketR),r.optionalChainMember?(i.optional=s,this.finishNode(i,"OptionalMemberExpression")):this.finishNode(i,"MemberExpression")}parseBind(e,t,n,r,s){const i=this.startNodeAt(t,n);return i.object=e,i.callee=this.parseNoCallExpr(),s.stop=!0,this.parseSubscripts(this.finishNode(i,"BindExpression"),t,n,r)}parseCoverCallAndAsyncArrowHead(e,t,n,r,s){const i=this.state.maybeInArrowParameters;this.state.maybeInArrowParameters=!0,this.next();let a=this.startNodeAt(t,n);return a.callee=e,r.maybeAsyncArrow&&this.expressionScope.enter(new ve(2)),r.optionalChainMember&&(a.optional=s),a.arguments=s?this.parseCallExpressionArguments(l.parenR,!1):this.parseCallExpressionArguments(l.parenR,r.maybeAsyncArrow,"Import"===e.type,"Super"!==e.type,a),this.finishCallExpression(a,r.optionalChainMember),r.maybeAsyncArrow&&this.shouldParseAsyncArrow()&&!s?(r.stop=!0,this.expressionScope.validateAsPattern(),this.expressionScope.exit(),a=this.parseAsyncArrowFromCallExpression(this.startNodeAt(t,n),a)):(r.maybeAsyncArrow&&this.expressionScope.exit(),this.toReferencedArguments(a)),this.state.maybeInArrowParameters=i,a}toReferencedArguments(e,t){this.toReferencedListDeep(e.arguments,t)}parseTaggedTemplateExpression(e,t,n,r){const s=this.startNodeAt(t,n);return s.tag=e,s.quasi=this.parseTemplate(!0),r.optionalChainMember&&this.raise(t,E.OptionalChainingNoTemplate),this.finishNode(s,"TaggedTemplateExpression")}atPossibleAsyncArrow(e){return"Identifier"===e.type&&"async"===e.name&&this.state.lastTokEnd===e.end&&!this.canInsertSemicolon()&&e.end-e.start==5&&e.start===this.state.potentialArrowAt}finishCallExpression(e,t){if("Import"===e.callee.type)if(2===e.arguments.length&&(this.hasPlugin("moduleAttributes")||this.expectPlugin("importAssertions")),0===e.arguments.length||e.arguments.length>2)this.raise(e.start,E.ImportCallArity,this.hasPlugin("importAssertions")||this.hasPlugin("moduleAttributes")?"one or two arguments":"one argument");else for(let t=0,n=e.arguments;t<n.length;t++){const e=n[t];"SpreadElement"===e.type&&this.raise(e.start,E.ImportCallSpreadArgument)}return this.finishNode(e,t?"OptionalCallExpression":"CallExpression")}parseCallExpressionArguments(e,t,n,r,s){const i=[];let a,o=!0;const u=this.state.inFSharpPipelineDirectBody;for(this.state.inFSharpPipelineDirectBody=!1;!this.eat(e);){if(o)o=!1;else if(this.expect(l.comma),this.match(e)){!n||this.hasPlugin("importAssertions")||this.hasPlugin("moduleAttributes")||this.raise(this.state.lastTokStart,E.ImportCallArgumentTrailingComma),s&&this.addExtra(s,"trailingComma",this.state.lastTokStart),this.next();break}this.match(l.parenL)&&!a&&(a=this.state.start),i.push(this.parseExprListItem(!1,t?new Ae:void 0,t?{start:0}:void 0,r))}return t&&a&&this.shouldParseAsyncArrow()&&this.unexpected(),this.state.inFSharpPipelineDirectBody=u,i}shouldParseAsyncArrow(){return this.match(l.arrow)&&!this.canInsertSemicolon()}parseAsyncArrowFromCallExpression(e,t){var n;return this.expect(l.arrow),this.parseArrowExpression(e,t.arguments,!0,null==(n=t.extra)?void 0:n.trailingComma),e}parseNoCallExpr(){const e=this.state.start,t=this.state.startLoc;return this.parseSubscripts(this.parseExprAtom(),e,t,!0)}parseExprAtom(e){this.state.type===l.slash&&this.readRegexp();const t=this.state.potentialArrowAt===this.state.start;let n;switch(this.state.type){case l._super:return this.parseSuper();case l._import:return n=this.startNode(),this.next(),this.match(l.dot)?this.parseImportMetaProperty(n):(this.match(l.parenL)||this.raise(this.state.lastTokStart,E.UnsupportedImport),this.finishNode(n,"Import"));case l._this:return n=this.startNode(),this.next(),this.finishNode(n,"ThisExpression");case l.name:{const e=this.state.containsEsc,n=this.parseIdentifier();if(!e&&"async"===n.name&&!this.canInsertSemicolon()){if(this.match(l._function)){const e=this.state.context.length-1;if(this.state.context[e]!==b.functionStatement)throw new Error("Internal error");return this.state.context[e]=b.functionExpression,this.next(),this.parseFunction(this.startNodeAtNode(n),void 0,!0)}if(this.match(l.name))return this.parseAsyncArrowUnaryFunction(n)}return t&&this.match(l.arrow)&&!this.canInsertSemicolon()?(this.next(),this.parseArrowExpression(this.startNodeAtNode(n),[n],!1)):n}case l._do:return this.parseDo();case l.regexp:{const e=this.state.value;return n=this.parseLiteral(e.value,"RegExpLiteral"),n.pattern=e.pattern,n.flags=e.flags,n}case l.num:return this.parseLiteral(this.state.value,"NumericLiteral");case l.bigint:return this.parseLiteral(this.state.value,"BigIntLiteral");case l.decimal:return this.parseLiteral(this.state.value,"DecimalLiteral");case l.string:return this.parseLiteral(this.state.value,"StringLiteral");case l._null:return n=this.startNode(),this.next(),this.finishNode(n,"NullLiteral");case l._true:case l._false:return this.parseBooleanLiteral();case l.parenL:return this.parseParenAndDistinguishExpression(t);case l.bracketBarL:case l.bracketHashL:return this.parseArrayLike(this.state.type===l.bracketBarL?l.bracketBarR:l.bracketR,!1,!0,e);case l.bracketL:return this.parseArrayLike(l.bracketR,!0,!1,e);case l.braceBarL:case l.braceHashL:return this.parseObjectLike(this.state.type===l.braceBarL?l.braceBarR:l.braceR,!1,!0,e);case l.braceL:return this.parseObjectLike(l.braceR,!1,!1,e);case l._function:return this.parseFunctionOrFunctionSent();case l.at:this.parseDecorators();case l._class:return n=this.startNode(),this.takeDecorators(n),this.parseClass(n,!1);case l._new:return this.parseNewOrNewTarget();case l.backQuote:return this.parseTemplate(!1);case l.doubleColon:{n=this.startNode(),this.next(),n.object=null;const e=n.callee=this.parseNoCallExpr();if("MemberExpression"===e.type)return this.finishNode(n,"BindExpression");throw this.raise(e.start,E.UnsupportedBind)}case l.hash:{if(this.state.inPipeline)return n=this.startNode(),"smart"!==this.getPluginOption("pipelineOperator","proposal")&&this.raise(n.start,E.PrimaryTopicRequiresSmartPipeline),this.next(),this.primaryTopicReferenceIsAllowedInCurrentTopicContext()||this.raise(n.start,E.PrimaryTopicNotAllowed),this.registerTopicReference(),this.finishNode(n,"PipelinePrimaryTopicReference");const e=this.input.codePointAt(this.state.end);if(P(e)||92===e){const e=this.state.start;if(n=this.parseMaybePrivateName(!0),this.match(l._in))this.expectPlugin("privateIn"),this.classScope.usePrivateName(n.id.name,n.start);else{if(!this.hasPlugin("privateIn"))throw this.unexpected(e);this.raise(this.state.start,E.PrivateInExpectedIn,n.id.name)}return n}}case l.relational:if("<"===this.state.value){const e=this.input.codePointAt(this.nextTokenStart());(P(e)||62===e)&&this.expectOnePlugin(["jsx","flow","typescript"])}default:throw this.unexpected()}}parseAsyncArrowUnaryFunction(e){const t=this.startNodeAtNode(e);this.prodParam.enter(se(!0,this.prodParam.hasYield));const n=[this.parseIdentifier()];return this.prodParam.exit(),this.hasPrecedingLineBreak()&&this.raise(this.state.pos,E.LineTerminatorBeforeArrow),this.expect(l.arrow),this.parseArrowExpression(t,n,!0),t}parseDo(){this.expectPlugin("doExpressions");const e=this.startNode();this.next();const t=this.state.labels;return this.state.labels=[],e.body=this.parseBlock(),this.state.labels=t,this.finishNode(e,"DoExpression")}parseSuper(){const e=this.startNode();return this.next(),!this.match(l.parenL)||this.scope.allowDirectSuper||this.options.allowSuperOutsideMethod?this.scope.allowSuper||this.options.allowSuperOutsideMethod||this.raise(e.start,E.UnexpectedSuper):this.raise(e.start,E.SuperNotAllowed),this.match(l.parenL)||this.match(l.bracketL)||this.match(l.dot)||this.raise(e.start,E.UnsupportedSuper),this.finishNode(e,"Super")}parseBooleanLiteral(){const e=this.startNode();return e.value=this.match(l._true),this.next(),this.finishNode(e,"BooleanLiteral")}parseMaybePrivateName(e){if(this.match(l.hash)){this.expectOnePlugin(["classPrivateProperties","classPrivateMethods"]),e||this.raise(this.state.pos,E.UnexpectedPrivateField);const t=this.startNode();return this.next(),this.assertNoSpace("Unexpected space between # and identifier"),t.id=this.parseIdentifier(!0),this.finishNode(t,"PrivateName")}return this.parseIdentifier(!0)}parseFunctionOrFunctionSent(){const e=this.startNode();if(this.next(),this.prodParam.hasYield&&this.match(l.dot)){const t=this.createIdentifier(this.startNodeAtNode(e),"function");return this.next(),this.parseMetaProperty(e,t,"sent")}return this.parseFunction(e)}parseMetaProperty(e,t,n){e.meta=t,"function"===t.name&&"sent"===n&&(this.isContextual(n)?this.expectPlugin("functionSent"):this.hasPlugin("functionSent")||this.unexpected());const r=this.state.containsEsc;return e.property=this.parseIdentifier(!0),(e.property.name!==n||r)&&this.raise(e.property.start,E.UnsupportedMetaProperty,t.name,n),this.finishNode(e,"MetaProperty")}parseImportMetaProperty(e){const t=this.createIdentifier(this.startNodeAtNode(e),"import");return this.next(),this.isContextual("meta")&&(this.inModule||this.raiseWithData(t.start,{code:"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED"},E.ImportMetaOutsideModule),this.sawUnambiguousESM=!0),this.parseMetaProperty(e,t,"meta")}parseLiteral(e,t,n,r){n=n||this.state.start,r=r||this.state.startLoc;const s=this.startNodeAt(n,r);return this.addExtra(s,"rawValue",e),this.addExtra(s,"raw",this.input.slice(n,this.state.end)),s.value=e,this.next(),this.finishNode(s,t)}parseParenAndDistinguishExpression(e){const t=this.state.start,n=this.state.startLoc;let r;this.next(),this.expressionScope.enter(new ve(1));const s=this.state.maybeInArrowParameters,i=this.state.inFSharpPipelineDirectBody;this.state.maybeInArrowParameters=!0,this.state.inFSharpPipelineDirectBody=!1;const a=this.state.start,o=this.state.startLoc,u=[],c=new Ae,p={start:0};let h,d,f=!0;for(;!this.match(l.parenR);){if(f)f=!1;else if(this.expect(l.comma,p.start||null),this.match(l.parenR)){d=this.state.start;break}if(this.match(l.ellipsis)){const e=this.state.start,t=this.state.startLoc;h=this.state.start,u.push(this.parseParenItem(this.parseRestBinding(),e,t)),this.checkCommaAfterRest(41);break}u.push(this.parseMaybeAssignAllowIn(c,this.parseParenItem,p))}const D=this.state.lastTokEnd,m=this.state.lastTokEndLoc;this.expect(l.parenR),this.state.maybeInArrowParameters=s,this.state.inFSharpPipelineDirectBody=i;let g=this.startNodeAt(t,n);if(e&&this.shouldParseArrow()&&(g=this.parseArrow(g))){this.expressionScope.validateAsPattern(),this.expressionScope.exit();for(let e=0;e<u.length;e++){const t=u[e];t.extra&&t.extra.parenthesized&&this.unexpected(t.extra.parenStart)}return this.parseArrowExpression(g,u,!1),g}if(this.expressionScope.exit(),u.length||this.unexpected(this.state.lastTokStart),d&&this.unexpected(d),h&&this.unexpected(h),this.checkExpressionErrors(c,!0),p.start&&this.unexpected(p.start),this.toReferencedListDeep(u,!0),u.length>1?(r=this.startNodeAt(a,o),r.expressions=u,this.finishNodeAt(r,"SequenceExpression",D,m)):r=u[0],!this.options.createParenthesizedExpressions)return this.addExtra(r,"parenthesized",!0),this.addExtra(r,"parenStart",t),r;const y=this.startNodeAt(t,n);return y.expression=r,this.finishNode(y,"ParenthesizedExpression"),y}shouldParseArrow(){return!this.canInsertSemicolon()}parseArrow(e){if(this.eat(l.arrow))return e}parseParenItem(e,t,n){return e}parseNewOrNewTarget(){const e=this.startNode();if(this.next(),this.match(l.dot)){const t=this.createIdentifier(this.startNodeAtNode(e),"new");this.next();const n=this.parseMetaProperty(e,t,"target");if(!this.scope.inNonArrowFunction&&!this.scope.inClass){let e=E.UnexpectedNewTarget;this.hasPlugin("classProperties")&&(e+=" or class properties"),this.raise(n.start,e)}return n}return this.parseNew(e)}parseNew(e){return e.callee=this.parseNoCallExpr(),"Import"===e.callee.type?this.raise(e.callee.start,E.ImportCallNotNewExpression):"OptionalMemberExpression"===e.callee.type||"OptionalCallExpression"===e.callee.type?this.raise(this.state.lastTokEnd,E.OptionalChainingNoNew):this.eat(l.questionDot)&&this.raise(this.state.start,E.OptionalChainingNoNew),this.parseNewArguments(e),this.finishNode(e,"NewExpression")}parseNewArguments(e){if(this.eat(l.parenL)){const t=this.parseExprList(l.parenR);this.toReferencedList(t),e.arguments=t}else e.arguments=[]}parseTemplateElement(e){const t=this.startNode();return null===this.state.value&&(e||this.raise(this.state.start+1,E.InvalidEscapeSequenceTemplate)),t.value={raw:this.input.slice(this.state.start,this.state.end).replace(/\r\n?/g,"\n"),cooked:this.state.value},this.next(),t.tail=this.match(l.backQuote),this.finishNode(t,"TemplateElement")}parseTemplate(e){const t=this.startNode();this.next(),t.expressions=[];let n=this.parseTemplateElement(e);for(t.quasis=[n];!n.tail;)this.expect(l.dollarBraceL),t.expressions.push(this.parseTemplateSubstitution()),this.expect(l.braceR),t.quasis.push(n=this.parseTemplateElement(e));return this.next(),this.finishNode(t,"TemplateLiteral")}parseTemplateSubstitution(){return this.parseExpression()}parseObjectLike(e,t,n,r){n&&this.expectPlugin("recordAndTuple");const s=this.state.inFSharpPipelineDirectBody;this.state.inFSharpPipelineDirectBody=!1;const i=Object.create(null);let a=!0;const o=this.startNode();for(o.properties=[],this.next();!this.match(e);){if(a)a=!1;else if(this.expect(l.comma),this.match(e)){this.addExtra(o,"trailingComma",this.state.lastTokStart);break}const s=this.parsePropertyDefinition(t,r);t||this.checkProto(s,n,i,r),n&&"ObjectProperty"!==s.type&&"SpreadElement"!==s.type&&this.raise(s.start,E.InvalidRecordProperty),s.shorthand&&this.addExtra(s,"shorthand",!0),o.properties.push(s)}this.state.exprAllowed=!1,this.next(),this.state.inFSharpPipelineDirectBody=s;let u="ObjectExpression";return t?u="ObjectPattern":n&&(u="RecordExpression"),this.finishNode(o,u)}maybeAsyncOrAccessorProp(e){return!e.computed&&"Identifier"===e.key.type&&(this.isLiteralPropertyName()||this.match(l.bracketL)||this.match(l.star))}parsePropertyDefinition(e,t){let n=[];if(this.match(l.at))for(this.hasPlugin("decorators")&&this.raise(this.state.start,E.UnsupportedPropertyDecorator);this.match(l.at);)n.push(this.parseDecorator());const r=this.startNode();let s,i,a=!1,o=!1,u=!1;if(this.match(l.ellipsis))return n.length&&this.unexpected(),e?(this.next(),r.argument=this.parseIdentifier(),this.checkCommaAfterRest(125),this.finishNode(r,"RestElement")):this.parseSpread();n.length&&(r.decorators=n,n=[]),r.method=!1,(e||t)&&(s=this.state.start,i=this.state.startLoc),e||(a=this.eat(l.star));const c=this.state.containsEsc,p=this.parsePropertyName(r,!1);if(!e&&!a&&!c&&this.maybeAsyncOrAccessorProp(r)){const e=p.name;"async"!==e||this.hasPrecedingLineBreak()||(o=!0,a=this.eat(l.star),this.parsePropertyName(r,!1)),"get"!==e&&"set"!==e||(u=!0,r.kind=e,this.match(l.star)&&(a=!0,this.raise(this.state.pos,E.AccessorIsGenerator,e),this.next()),this.parsePropertyName(r,!1))}return this.parseObjPropValue(r,s,i,a,o,e,u,t),r}getGetterSetterExpectedParamCount(e){return"get"===e.kind?0:1}getObjectOrClassMethodParams(e){return e.params}checkGetterSetterParams(e){var t;const n=this.getGetterSetterExpectedParamCount(e),r=this.getObjectOrClassMethodParams(e),s=e.start;r.length!==n&&("get"===e.kind?this.raise(s,E.BadGetterArity):this.raise(s,E.BadSetterArity)),"set"===e.kind&&"RestElement"===(null==(t=r[r.length-1])?void 0:t.type)&&this.raise(s,E.BadSetterRestParameter)}parseObjectMethod(e,t,n,r,s){return s?(this.parseMethod(e,t,!1,!1,!1,"ObjectMethod"),this.checkGetterSetterParams(e),e):n||t||this.match(l.parenL)?(r&&this.unexpected(),e.kind="method",e.method=!0,this.parseMethod(e,t,n,!1,!1,"ObjectMethod")):void 0}parseObjectProperty(e,t,n,r,s){return e.shorthand=!1,this.eat(l.colon)?(e.value=r?this.parseMaybeDefault(this.state.start,this.state.startLoc):this.parseMaybeAssignAllowIn(s),this.finishNode(e,"ObjectProperty")):e.computed||"Identifier"!==e.key.type?void 0:(this.checkReservedWord(e.key.name,e.key.start,!0,!1),r?e.value=this.parseMaybeDefault(t,n,e.key.__clone()):this.match(l.eq)&&s?(-1===s.shorthandAssign&&(s.shorthandAssign=this.state.start),e.value=this.parseMaybeDefault(t,n,e.key.__clone())):e.value=e.key.__clone(),e.shorthand=!0,this.finishNode(e,"ObjectProperty"))}parseObjPropValue(e,t,n,r,s,i,a,o){const u=this.parseObjectMethod(e,r,s,i,a)||this.parseObjectProperty(e,t,n,i,o);return u||this.unexpected(),u}parsePropertyName(e,t){if(this.eat(l.bracketL))e.computed=!0,e.key=this.parseMaybeAssignAllowIn(),this.expect(l.bracketR);else{const n=this.state.inPropertyName;this.state.inPropertyName=!0,e.key=this.match(l.num)||this.match(l.string)||this.match(l.bigint)||this.match(l.decimal)?this.parseExprAtom():this.parseMaybePrivateName(t),"PrivateName"!==e.key.type&&(e.computed=!1),this.state.inPropertyName=n}return e.key}initFunction(e,t){e.id=null,e.generator=!1,e.async=!!t}parseMethod(e,t,n,r,s,i,a=!1){this.initFunction(e,n),e.generator=!!t;const o=r;return this.scope.enter(18|(a?64:0)|(s?32:0)),this.prodParam.enter(se(n,e.generator)),this.parseFunctionParams(e,o),this.parseFunctionBodyAndFinish(e,i,!0),this.prodParam.exit(),this.scope.exit(),e}parseArrayLike(e,t,n,r){n&&this.expectPlugin("recordAndTuple");const s=this.state.inFSharpPipelineDirectBody;this.state.inFSharpPipelineDirectBody=!1;const i=this.startNode();return this.next(),i.elements=this.parseExprList(e,!n,r,i),this.state.inFSharpPipelineDirectBody=s,this.finishNode(i,n?"TupleExpression":"ArrayExpression")}parseArrowExpression(e,t,n,r){this.scope.enter(6);let s=se(n,!1);!this.match(l.bracketL)&&this.prodParam.hasIn&&(s|=8),this.prodParam.enter(s),this.initFunction(e,n);const i=this.state.maybeInArrowParameters;return t&&(this.state.maybeInArrowParameters=!0,this.setArrowFunctionParameters(e,t,r)),this.state.maybeInArrowParameters=!1,this.parseFunctionBody(e,!0),this.prodParam.exit(),this.scope.exit(),this.state.maybeInArrowParameters=i,this.finishNode(e,"ArrowFunctionExpression")}setArrowFunctionParameters(e,t,n){e.params=this.toAssignableList(t,n)}parseFunctionBodyAndFinish(e,t,n=!1){this.parseFunctionBody(e,!1,n),this.finishNode(e,t)}parseFunctionBody(e,t,n=!1){const r=t&&!this.match(l.braceL);if(this.expressionScope.enter(Te()),r)e.body=this.parseMaybeAssign(),this.checkParams(e,!1,t,!1);else{const r=this.state.strict,s=this.state.labels;this.state.labels=[],this.prodParam.enter(4|this.prodParam.currentFlags()),e.body=this.parseBlock(!0,!1,(s=>{const i=!this.isSimpleParamList(e.params);if(s&&i){const t="method"!==e.kind&&"constructor"!==e.kind||!e.key?e.start:e.key.end;this.raise(t,E.IllegalLanguageModeDirective)}const a=!r&&this.state.strict;this.checkParams(e,!(this.state.strict||t||n||i),t,a),this.state.strict&&e.id&&this.checkLVal(e.id,65,void 0,"function name",void 0,a)})),this.prodParam.exit(),this.expressionScope.exit(),this.state.labels=s}}isSimpleParamList(e){for(let t=0,n=e.length;t<n;t++)if("Identifier"!==e[t].type)return!1;return!0}checkParams(e,t,n,r=!0){const s=Object.create(null);for(let n=0;n<e.params.length;n++)this.checkLVal(e.params[n],5,t?null:s,"function parameter list",void 0,r)}parseExprList(e,t,n,r){const s=[];let i=!0;for(;!this.eat(e);){if(i)i=!1;else if(this.expect(l.comma),this.match(e)){r&&this.addExtra(r,"trailingComma",this.state.lastTokStart),this.next();break}s.push(this.parseExprListItem(t,n))}return s}parseExprListItem(e,t,n,r){let s;if(this.match(l.comma))e||this.raise(this.state.pos,E.UnexpectedToken,","),s=null;else if(this.match(l.ellipsis)){const e=this.state.start,r=this.state.startLoc;s=this.parseParenItem(this.parseSpread(t,n),e,r)}else if(this.match(l.question)){this.expectPlugin("partialApplication"),r||this.raise(this.state.start,E.UnexpectedArgumentPlaceholder);const e=this.startNode();this.next(),s=this.finishNode(e,"ArgumentPlaceholder")}else s=this.parseMaybeAssignAllowIn(t,this.parseParenItem,n);return s}parseIdentifier(e){const t=this.startNode(),n=this.parseIdentifierName(t.start,e);return this.createIdentifier(t,n)}createIdentifier(e,t){return e.name=t,e.loc.identifierName=t,this.finishNode(e,"Identifier")}parseIdentifierName(e,t){let n;const{start:r,type:s}=this.state;if(s===l.name)n=this.state.value;else{if(!s.keyword)throw this.unexpected();{n=s.keyword;const e=this.curContext();s!==l._class&&s!==l._function||e!==b.functionStatement&&e!==b.functionExpression||this.state.context.pop()}}return t?this.state.type=l.name:this.checkReservedWord(n,r,!!s.keyword,!1),this.next(),n}checkReservedWord(e,t,n,r){if(this.prodParam.hasYield&&"yield"===e)this.raise(t,E.YieldBindingIdentifier);else{if("await"===e){if(this.prodParam.hasAwait)return void this.raise(t,E.AwaitBindingIdentifier);this.expressionScope.recordAsyncArrowParametersError(t,E.AwaitBindingIdentifier)}!this.scope.inClass||this.scope.inNonArrowFunction||"arguments"!==e?n&&j(e)?this.raise(t,E.UnexpectedKeyword,e):(this.state.strict?r?R:_:O)(e,this.inModule)&&(this.prodParam.hasAwait||"await"!==e?this.raise(t,E.UnexpectedReservedWord,e):this.raise(t,this.hasPlugin("topLevelAwait")?E.AwaitNotInAsyncContext:E.AwaitNotInAsyncFunction)):this.raise(t,E.ArgumentsInClass)}}isAwaitAllowed(){return this.scope.inFunction?this.prodParam.hasAwait:!!this.options.allowAwaitOutsideFunction||!!this.hasPlugin("topLevelAwait")&&this.inModule&&this.prodParam.hasAwait}parseAwait(){const e=this.startNode();return this.next(),this.expressionScope.recordParameterInitializerError(e.start,E.AwaitExpressionFormalParameter),this.eat(l.star)&&this.raise(e.start,E.ObsoleteAwaitStar),this.scope.inFunction||this.options.allowAwaitOutsideFunction||(this.hasPrecedingLineBreak()||this.match(l.plusMin)||this.match(l.parenL)||this.match(l.bracketL)||this.match(l.backQuote)||this.match(l.regexp)||this.match(l.slash)||this.hasPlugin("v8intrinsic")&&this.match(l.modulo)?this.ambiguousScriptDifferentAst=!0:this.sawUnambiguousESM=!0),this.state.soloAwait||(e.argument=this.parseMaybeUnary()),this.finishNode(e,"AwaitExpression")}parseYield(){const e=this.startNode();return this.expressionScope.recordParameterInitializerError(e.start,E.YieldInParameter),this.next(),this.match(l.semi)||!this.match(l.star)&&!this.state.type.startsExpr||this.hasPrecedingLineBreak()?(e.delegate=!1,e.argument=null):(e.delegate=this.eat(l.star),e.argument=this.parseMaybeAssign()),this.finishNode(e,"YieldExpression")}checkPipelineAtInfixOperator(e,t){"smart"===this.getPluginOption("pipelineOperator","proposal")&&"SequenceExpression"===e.type&&this.raise(t,E.PipelineHeadSequenceExpression)}parseSmartPipelineBody(e,t,n){return this.checkSmartPipelineBodyEarlyErrors(e,t),this.parseSmartPipelineBodyInStyle(e,t,n)}checkSmartPipelineBodyEarlyErrors(e,t){if(this.match(l.arrow))throw this.raise(this.state.start,E.PipelineBodyNoArrow);"SequenceExpression"===e.type&&this.raise(t,E.PipelineBodySequenceExpression)}parseSmartPipelineBodyInStyle(e,t,n){const r=this.startNodeAt(t,n),s=this.isSimpleReference(e);return s?r.callee=e:(this.topicReferenceWasUsedInCurrentTopicContext()||this.raise(t,E.PipelineTopicUnused),r.expression=e),this.finishNode(r,s?"PipelineBareFunction":"PipelineTopicExpression")}isSimpleReference(e){switch(e.type){case"MemberExpression":return!e.computed&&this.isSimpleReference(e.object);case"Identifier":return!0;default:return!1}}withTopicPermittingContext(e){const t=this.state.topicContext;this.state.topicContext={maxNumOfResolvableTopics:1,maxTopicIndex:null};try{return e()}finally{this.state.topicContext=t}}withTopicForbiddingContext(e){const t=this.state.topicContext;this.state.topicContext={maxNumOfResolvableTopics:0,maxTopicIndex:null};try{return e()}finally{this.state.topicContext=t}}withSoloAwaitPermittingContext(e){const t=this.state.soloAwait;this.state.soloAwait=!0;try{return e()}finally{this.state.soloAwait=t}}allowInAnd(e){const t=this.prodParam.currentFlags();if(8&~t){this.prodParam.enter(8|t);try{return e()}finally{this.prodParam.exit()}}return e()}disallowInAnd(e){const t=this.prodParam.currentFlags();if(8&t){this.prodParam.enter(-9&t);try{return e()}finally{this.prodParam.exit()}}return e()}registerTopicReference(){this.state.topicContext.maxTopicIndex=0}primaryTopicReferenceIsAllowedInCurrentTopicContext(){return this.state.topicContext.maxNumOfResolvableTopics>=1}topicReferenceWasUsedInCurrentTopicContext(){return null!=this.state.topicContext.maxTopicIndex&&this.state.topicContext.maxTopicIndex>=0}parseFSharpPipelineBody(e){const t=this.state.start,n=this.state.startLoc;this.state.potentialArrowAt=this.state.start;const r=this.state.inFSharpPipelineDirectBody;this.state.inFSharpPipelineDirectBody=!0;const s=this.parseExprOp(this.parseMaybeUnary(),t,n,e);return this.state.inFSharpPipelineDirectBody=r,s}}{parseTopLevel(e,t){if(t.sourceType=this.options.sourceType,t.interpreter=this.parseInterpreterDirective(),this.parseBlockBody(t,!0,!0,l.eof),this.inModule&&!this.options.allowUndeclaredExports&&this.scope.undefinedExports.size>0)for(let e=0,t=Array.from(this.scope.undefinedExports);e<t.length;e++){const[n]=t[e],r=this.scope.undefinedExports.get(n);this.raise(r,E.ModuleExportUndefined,n)}return e.program=this.finishNode(t,"Program"),e.comments=this.state.comments,this.options.tokens&&(e.tokens=this.tokens),this.finishNode(e,"File")}stmtToDirective(e){const t=e.expression,n=this.startNodeAt(t.start,t.loc.start),r=this.startNodeAt(e.start,e.loc.start),s=this.input.slice(t.start,t.end),i=n.value=s.slice(1,-1);return this.addExtra(n,"raw",s),this.addExtra(n,"rawValue",i),r.value=this.finishNodeAt(n,"DirectiveLiteral",t.end,t.loc.end),this.finishNodeAt(r,"Directive",e.end,e.loc.end)}parseInterpreterDirective(){if(!this.match(l.interpreterDirective))return null;const e=this.startNode();return e.value=this.state.value,this.next(),this.finishNode(e,"InterpreterDirective")}isLet(e){if(!this.isContextual("let"))return!1;const t=this.nextTokenStart(),n=this.input.charCodeAt(t);if(91===n)return!0;if(e)return!1;if(123===n)return!0;if(P(n)){let e=t+1;for(;N(this.input.charCodeAt(e));)++e;const n=this.input.slice(t,e);if(!q.test(n))return!0}return!1}parseStatement(e,t){return this.match(l.at)&&this.parseDecorators(!0),this.parseStatementContent(e,t)}parseStatementContent(e,t){let n=this.state.type;const r=this.startNode();let s;switch(this.isLet(e)&&(n=l._var,s="let"),n){case l._break:case l._continue:return this.parseBreakContinueStatement(r,n.keyword);case l._debugger:return this.parseDebuggerStatement(r);case l._do:return this.parseDoStatement(r);case l._for:return this.parseForStatement(r);case l._function:if(46===this.lookaheadCharCode())break;return e&&(this.state.strict?this.raise(this.state.start,E.StrictFunction):"if"!==e&&"label"!==e&&this.raise(this.state.start,E.SloppyFunction)),this.parseFunctionStatement(r,!1,!e);case l._class:return e&&this.unexpected(),this.parseClass(r,!0);case l._if:return this.parseIfStatement(r);case l._return:return this.parseReturnStatement(r);case l._switch:return this.parseSwitchStatement(r);case l._throw:return this.parseThrowStatement(r);case l._try:return this.parseTryStatement(r);case l._const:case l._var:return s=s||this.state.value,e&&"var"!==s&&this.raise(this.state.start,E.UnexpectedLexicalDeclaration),this.parseVarStatement(r,s);case l._while:return this.parseWhileStatement(r);case l._with:return this.parseWithStatement(r);case l.braceL:return this.parseBlock();case l.semi:return this.parseEmptyStatement(r);case l._import:{const e=this.lookaheadCharCode();if(40===e||46===e)break}case l._export:{let e;return this.options.allowImportExportEverywhere||t||this.raise(this.state.start,E.UnexpectedImportExport),this.next(),n===l._import?(e=this.parseImport(r),"ImportDeclaration"!==e.type||e.importKind&&"value"!==e.importKind||(this.sawUnambiguousESM=!0)):(e=this.parseExport(r),("ExportNamedDeclaration"!==e.type||e.exportKind&&"value"!==e.exportKind)&&("ExportAllDeclaration"!==e.type||e.exportKind&&"value"!==e.exportKind)&&"ExportDefaultDeclaration"!==e.type||(this.sawUnambiguousESM=!0)),this.assertModuleNodeAllowed(r),e}default:if(this.isAsyncFunction())return e&&this.raise(this.state.start,E.AsyncFunctionInSingleStatementContext),this.next(),this.parseFunctionStatement(r,!0,!e)}const i=this.state.value,a=this.parseExpression();return n===l.name&&"Identifier"===a.type&&this.eat(l.colon)?this.parseLabeledStatement(r,i,a,e):this.parseExpressionStatement(r,a)}assertModuleNodeAllowed(e){this.options.allowImportExportEverywhere||this.inModule||this.raiseWithData(e.start,{code:"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED"},E.ImportOutsideModule)}takeDecorators(e){const t=this.state.decoratorStack[this.state.decoratorStack.length-1];t.length&&(e.decorators=t,this.resetStartLocationFromNode(e,t[0]),this.state.decoratorStack[this.state.decoratorStack.length-1]=[])}canHaveLeadingDecorator(){return this.match(l._class)}parseDecorators(e){const t=this.state.decoratorStack[this.state.decoratorStack.length-1];for(;this.match(l.at);){const e=this.parseDecorator();t.push(e)}if(this.match(l._export))e||this.unexpected(),this.hasPlugin("decorators")&&!this.getPluginOption("decorators","decoratorsBeforeExport")&&this.raise(this.state.start,E.DecoratorExportClass);else if(!this.canHaveLeadingDecorator())throw this.raise(this.state.start,E.UnexpectedLeadingDecorator)}parseDecorator(){this.expectOnePlugin(["decorators-legacy","decorators"]);const e=this.startNode();if(this.next(),this.hasPlugin("decorators")){this.state.decoratorStack.push([]);const t=this.state.start,n=this.state.startLoc;let r;if(this.eat(l.parenL))r=this.parseExpression(),this.expect(l.parenR);else for(r=this.parseIdentifier(!1);this.eat(l.dot);){const e=this.startNodeAt(t,n);e.object=r,e.property=this.parseIdentifier(!0),e.computed=!1,r=this.finishNode(e,"MemberExpression")}e.expression=this.parseMaybeDecoratorArguments(r),this.state.decoratorStack.pop()}else e.expression=this.parseExprSubscripts();return this.finishNode(e,"Decorator")}parseMaybeDecoratorArguments(e){if(this.eat(l.parenL)){const t=this.startNodeAtNode(e);return t.callee=e,t.arguments=this.parseCallExpressionArguments(l.parenR,!1),this.toReferencedList(t.arguments),this.finishNode(t,"CallExpression")}return e}parseBreakContinueStatement(e,t){const n="break"===t;return this.next(),this.isLineTerminator()?e.label=null:(e.label=this.parseIdentifier(),this.semicolon()),this.verifyBreakContinue(e,t),this.finishNode(e,n?"BreakStatement":"ContinueStatement")}verifyBreakContinue(e,t){const n="break"===t;let r;for(r=0;r<this.state.labels.length;++r){const t=this.state.labels[r];if(null==e.label||t.name===e.label.name){if(null!=t.kind&&(n||"loop"===t.kind))break;if(e.label&&n)break}}r===this.state.labels.length&&this.raise(e.start,E.IllegalBreakContinue,t)}parseDebuggerStatement(e){return this.next(),this.semicolon(),this.finishNode(e,"DebuggerStatement")}parseHeaderExpression(){this.expect(l.parenL);const e=this.parseExpression();return this.expect(l.parenR),e}parseDoStatement(e){return this.next(),this.state.labels.push(we),e.body=this.withTopicForbiddingContext((()=>this.parseStatement("do"))),this.state.labels.pop(),this.expect(l._while),e.test=this.parseHeaderExpression(),this.eat(l.semi),this.finishNode(e,"DoWhileStatement")}parseForStatement(e){this.next(),this.state.labels.push(we);let t=-1;if(this.isAwaitAllowed()&&this.eatContextual("await")&&(t=this.state.lastTokStart),this.scope.enter(0),this.expect(l.parenL),this.match(l.semi))return t>-1&&this.unexpected(t),this.parseFor(e,null);const n=this.isLet();if(this.match(l._var)||this.match(l._const)||n){const r=this.startNode(),s=n?"let":this.state.value;return this.next(),this.parseVar(r,!0,s),this.finishNode(r,"VariableDeclaration"),(this.match(l._in)||this.isContextual("of"))&&1===r.declarations.length?this.parseForIn(e,r,t):(t>-1&&this.unexpected(t),this.parseFor(e,r))}const r=new Ae,s=this.parseExpression(!0,r);if(this.match(l._in)||this.isContextual("of")){this.toAssignable(s);const n=this.isContextual("of")?"for-of statement":"for-in statement";return this.checkLVal(s,void 0,void 0,n),this.parseForIn(e,s,t)}return this.checkExpressionErrors(r,!0),t>-1&&this.unexpected(t),this.parseFor(e,s)}parseFunctionStatement(e,t,n){return this.next(),this.parseFunction(e,1|(n?0:2),t)}parseIfStatement(e){return this.next(),e.test=this.parseHeaderExpression(),e.consequent=this.parseStatement("if"),e.alternate=this.eat(l._else)?this.parseStatement("if"):null,this.finishNode(e,"IfStatement")}parseReturnStatement(e){return this.prodParam.hasReturn||this.options.allowReturnOutsideFunction||this.raise(this.state.start,E.IllegalReturn),this.next(),this.isLineTerminator()?e.argument=null:(e.argument=this.parseExpression(),this.semicolon()),this.finishNode(e,"ReturnStatement")}parseSwitchStatement(e){this.next(),e.discriminant=this.parseHeaderExpression();const t=e.cases=[];let n,r;for(this.expect(l.braceL),this.state.labels.push(Be),this.scope.enter(0);!this.match(l.braceR);)if(this.match(l._case)||this.match(l._default)){const e=this.match(l._case);n&&this.finishNode(n,"SwitchCase"),t.push(n=this.startNode()),n.consequent=[],this.next(),e?n.test=this.parseExpression():(r&&this.raise(this.state.lastTokStart,E.MultipleDefaultsInSwitch),r=!0,n.test=null),this.expect(l.colon)}else n?n.consequent.push(this.parseStatement(null)):this.unexpected();return this.scope.exit(),n&&this.finishNode(n,"SwitchCase"),this.next(),this.state.labels.pop(),this.finishNode(e,"SwitchStatement")}parseThrowStatement(e){return this.next(),this.hasPrecedingLineBreak()&&this.raise(this.state.lastTokEnd,E.NewlineAfterThrow),e.argument=this.parseExpression(),this.semicolon(),this.finishNode(e,"ThrowStatement")}parseCatchClauseParam(){const e=this.parseBindingAtom(),t="Identifier"===e.type;return this.scope.enter(t?8:0),this.checkLVal(e,9,null,"catch clause"),e}parseTryStatement(e){if(this.next(),e.block=this.parseBlock(),e.handler=null,this.match(l._catch)){const t=this.startNode();this.next(),this.match(l.parenL)?(this.expect(l.parenL),t.param=this.parseCatchClauseParam(),this.expect(l.parenR)):(t.param=null,this.scope.enter(0)),t.body=this.withTopicForbiddingContext((()=>this.parseBlock(!1,!1))),this.scope.exit(),e.handler=this.finishNode(t,"CatchClause")}return e.finalizer=this.eat(l._finally)?this.parseBlock():null,e.handler||e.finalizer||this.raise(e.start,E.NoCatchOrFinally),this.finishNode(e,"TryStatement")}parseVarStatement(e,t){return this.next(),this.parseVar(e,!1,t),this.semicolon(),this.finishNode(e,"VariableDeclaration")}parseWhileStatement(e){return this.next(),e.test=this.parseHeaderExpression(),this.state.labels.push(we),e.body=this.withTopicForbiddingContext((()=>this.parseStatement("while"))),this.state.labels.pop(),this.finishNode(e,"WhileStatement")}parseWithStatement(e){return this.state.strict&&this.raise(this.state.start,E.StrictWith),this.next(),e.object=this.parseHeaderExpression(),e.body=this.withTopicForbiddingContext((()=>this.parseStatement("with"))),this.finishNode(e,"WithStatement")}parseEmptyStatement(e){return this.next(),this.finishNode(e,"EmptyStatement")}parseLabeledStatement(e,t,n,r){for(let e=0,r=this.state.labels;e<r.length;e++)r[e].name===t&&this.raise(n.start,E.LabelRedeclaration,t);const s=this.state.type.isLoop?"loop":this.match(l._switch)?"switch":null;for(let t=this.state.labels.length-1;t>=0;t--){const n=this.state.labels[t];if(n.statementStart!==e.start)break;n.statementStart=this.state.start,n.kind=s}return this.state.labels.push({name:t,kind:s,statementStart:this.state.start}),e.body=this.parseStatement(r?-1===r.indexOf("label")?r+"label":r:"label"),this.state.labels.pop(),e.label=n,this.finishNode(e,"LabeledStatement")}parseExpressionStatement(e,t){return e.expression=t,this.semicolon(),this.finishNode(e,"ExpressionStatement")}parseBlock(e=!1,t=!0,n){const r=this.startNode();return this.expect(l.braceL),t&&this.scope.enter(0),this.parseBlockBody(r,e,!1,l.braceR,n),t&&this.scope.exit(),this.finishNode(r,"BlockStatement")}isValidDirective(e){return"ExpressionStatement"===e.type&&"StringLiteral"===e.expression.type&&!e.expression.extra.parenthesized}parseBlockBody(e,t,n,r,s){const i=e.body=[],a=e.directives=[];this.parseBlockOrModuleBlockBody(i,t?a:void 0,n,r,s)}parseBlockOrModuleBlockBody(e,t,n,r,s){const i=[],a=this.state.strict;let o=!1,u=!1;for(;!this.match(r);){!u&&this.state.octalPositions.length&&i.push(...this.state.octalPositions);const r=this.parseStatement(null,n);if(t&&!u&&this.isValidDirective(r)){const e=this.stmtToDirective(r);t.push(e),o||"use strict"!==e.value.value||(o=!0,this.setStrict(!0))}else u=!0,e.push(r)}if(this.state.strict&&i.length)for(let e=0;e<i.length;e++){const t=i[e];this.raise(t,E.StrictOctalLiteral)}s&&s.call(this,o),a||this.setStrict(!1),this.next()}parseFor(e,t){return e.init=t,this.expect(l.semi),e.test=this.match(l.semi)?null:this.parseExpression(),this.expect(l.semi),e.update=this.match(l.parenR)?null:this.parseExpression(),this.expect(l.parenR),e.body=this.withTopicForbiddingContext((()=>this.parseStatement("for"))),this.scope.exit(),this.state.labels.pop(),this.finishNode(e,"ForStatement")}parseForIn(e,t,n){const r=this.match(l._in);return this.next(),r?n>-1&&this.unexpected(n):e.await=n>-1,"VariableDeclaration"!==t.type||null==t.declarations[0].init||r&&!this.state.strict&&"var"===t.kind&&"Identifier"===t.declarations[0].id.type?"AssignmentPattern"===t.type&&this.raise(t.start,E.InvalidLhs,"for-loop"):this.raise(t.start,E.ForInOfLoopInitializer,r?"for-in":"for-of"),e.left=t,e.right=r?this.parseExpression():this.parseMaybeAssignAllowIn(),this.expect(l.parenR),e.body=this.withTopicForbiddingContext((()=>this.parseStatement("for"))),this.scope.exit(),this.state.labels.pop(),this.finishNode(e,r?"ForInStatement":"ForOfStatement")}parseVar(e,t,n){const r=e.declarations=[],s=this.hasPlugin("typescript");for(e.kind=n;;){const e=this.startNode();if(this.parseVarId(e,n),this.eat(l.eq)?e.init=t?this.parseMaybeAssignDisallowIn():this.parseMaybeAssignAllowIn():("const"!==n||this.match(l._in)||this.isContextual("of")?"Identifier"===e.id.type||t&&(this.match(l._in)||this.isContextual("of"))||this.raise(this.state.lastTokEnd,E.DeclarationMissingInitializer,"Complex binding patterns"):s||this.raise(this.state.lastTokEnd,E.DeclarationMissingInitializer,"Const declarations"),e.init=null),r.push(this.finishNode(e,"VariableDeclarator")),!this.eat(l.comma))break}return e}parseVarId(e,t){e.id=this.parseBindingAtom(),this.checkLVal(e.id,"var"===t?5:9,void 0,"variable declaration","var"!==t)}parseFunction(e,t=0,n=!1){const r=1&t,s=2&t,i=!(!r||4&t);this.initFunction(e,n),this.match(l.star)&&s&&this.raise(this.state.start,E.GeneratorInSingleStatementContext),e.generator=this.eat(l.star),r&&(e.id=this.parseFunctionId(i));const a=this.state.maybeInArrowParameters;return this.state.maybeInArrowParameters=!1,this.scope.enter(2),this.prodParam.enter(se(n,e.generator)),r||(e.id=this.parseFunctionId()),this.parseFunctionParams(e,!1),this.withTopicForbiddingContext((()=>{this.parseFunctionBodyAndFinish(e,r?"FunctionDeclaration":"FunctionExpression")})),this.prodParam.exit(),this.scope.exit(),r&&!s&&this.registerFunctionStatementId(e),this.state.maybeInArrowParameters=a,e}parseFunctionId(e){return e||this.match(l.name)?this.parseIdentifier():null}parseFunctionParams(e,t){this.expect(l.parenL),this.expressionScope.enter(new xe(3)),e.params=this.parseBindingList(l.parenR,41,!1,t),this.expressionScope.exit()}registerFunctionStatementId(e){e.id&&this.scope.declareName(e.id.name,this.state.strict||e.generator||e.async?this.scope.treatFunctionsAsVar?5:9:17,e.id.start)}parseClass(e,t,n){this.next(),this.takeDecorators(e);const r=this.state.strict;return this.state.strict=!0,this.parseClassId(e,t,n),this.parseClassSuper(e),e.body=this.parseClassBody(!!e.superClass,r),this.finishNode(e,t?"ClassDeclaration":"ClassExpression")}isClassProperty(){return this.match(l.eq)||this.match(l.semi)||this.match(l.braceR)}isClassMethod(){return this.match(l.parenL)}isNonstaticConstructor(e){return!(e.computed||e.static||"constructor"!==e.key.name&&"constructor"!==e.key.value)}parseClassBody(e,t){this.classScope.enter();const n={constructorAllowsSuper:e,hadConstructor:!1,hadStaticBlock:!1};let r=[];const s=this.startNode();if(s.body=[],this.expect(l.braceL),this.withTopicForbiddingContext((()=>{for(;!this.match(l.braceR);){if(this.eat(l.semi)){if(r.length>0)throw this.raise(this.state.lastTokEnd,E.DecoratorSemicolon);continue}if(this.match(l.at)){r.push(this.parseDecorator());continue}const e=this.startNode();r.length&&(e.decorators=r,this.resetStartLocationFromNode(e,r[0]),r=[]),this.parseClassMember(s,e,n),"constructor"===e.kind&&e.decorators&&e.decorators.length>0&&this.raise(e.start,E.DecoratorConstructor)}})),this.state.strict=t,this.next(),r.length)throw this.raise(this.state.start,E.TrailingDecorator);return this.classScope.exit(),this.finishNode(s,"ClassBody")}parseClassMemberFromModifier(e,t){const n=this.parseIdentifier(!0);if(this.isClassMethod()){const r=t;return r.kind="method",r.computed=!1,r.key=n,r.static=!1,this.pushClassMethod(e,r,!1,!1,!1,!1),!0}if(this.isClassProperty()){const r=t;return r.computed=!1,r.key=n,r.static=!1,e.body.push(this.parseClassProperty(r)),!0}return!1}parseClassMember(e,t,n){const r=this.isContextual("static");if(r){if(this.parseClassMemberFromModifier(e,t))return;if(this.eat(l.braceL))return void this.parseClassStaticBlock(e,t,n)}this.parseClassMemberWithIsStatic(e,t,n,r)}parseClassMemberWithIsStatic(e,t,n,r){const s=t,i=t,a=t,o=t,u=s,c=s;if(t.static=r,this.eat(l.star))return u.kind="method",this.parseClassElementName(u),"PrivateName"===u.key.type?void this.pushClassPrivateMethod(e,i,!0,!1):(this.isNonstaticConstructor(s)&&this.raise(s.key.start,E.ConstructorIsGenerator),void this.pushClassMethod(e,s,!0,!1,!1,!1));const p=this.state.containsEsc,h=this.parseClassElementName(t),d="PrivateName"===h.type,f="Identifier"===h.type,D=this.state.start;if(this.parsePostMemberNameModifiers(c),this.isClassMethod()){if(u.kind="method",d)return void this.pushClassPrivateMethod(e,i,!1,!1);const t=this.isNonstaticConstructor(s);let r=!1;t&&(s.kind="constructor",n.hadConstructor&&!this.hasPlugin("typescript")&&this.raise(h.start,E.DuplicateConstructor),n.hadConstructor=!0,r=n.constructorAllowsSuper),this.pushClassMethod(e,s,!1,!1,t,r)}else if(this.isClassProperty())d?this.pushClassPrivateProperty(e,o):this.pushClassProperty(e,a);else if(!f||"async"!==h.name||p||this.isLineTerminator())!f||"get"!==h.name&&"set"!==h.name||p||this.match(l.star)&&this.isLineTerminator()?this.isLineTerminator()?d?this.pushClassPrivateProperty(e,o):this.pushClassProperty(e,a):this.unexpected():(u.kind=h.name,this.parseClassElementName(s),"PrivateName"===u.key.type?this.pushClassPrivateMethod(e,i,!1,!1):(this.isNonstaticConstructor(s)&&this.raise(s.key.start,E.ConstructorIsAccessor),this.pushClassMethod(e,s,!1,!1,!1,!1)),this.checkGetterSetterParams(s));else{const t=this.eat(l.star);c.optional&&this.unexpected(D),u.kind="method",this.parseClassElementName(u),this.parsePostMemberNameModifiers(c),"PrivateName"===u.key.type?this.pushClassPrivateMethod(e,i,t,!0):(this.isNonstaticConstructor(s)&&this.raise(s.key.start,E.ConstructorIsAsync),this.pushClassMethod(e,s,t,!0,!1,!1))}}parseClassElementName(e){const t=this.parsePropertyName(e,!0);return e.computed||!e.static||"prototype"!==t.name&&"prototype"!==t.value||this.raise(t.start,E.StaticPrototype),"PrivateName"===t.type&&"constructor"===t.id.name&&this.raise(t.start,E.ConstructorClassPrivateField),t}parseClassStaticBlock(e,t,n){var r;this.expectPlugin("classStaticBlock",t.start),this.scope.enter(80),this.expressionScope.enter(Te());const s=this.state.labels;this.state.labels=[],this.prodParam.enter(0);const i=t.body=[];this.parseBlockOrModuleBlockBody(i,void 0,!1,l.braceR),this.prodParam.exit(),this.expressionScope.exit(),this.scope.exit(),this.state.labels=s,e.body.push(this.finishNode(t,"StaticBlock")),n.hadStaticBlock&&this.raise(t.start,E.DuplicateStaticBlock),(null==(r=t.decorators)?void 0:r.length)&&this.raise(t.start,E.DecoratorStaticBlock),n.hadStaticBlock=!0}pushClassProperty(e,t){t.computed||"constructor"!==t.key.name&&"constructor"!==t.key.value||this.raise(t.key.start,E.ConstructorClassField),e.body.push(this.parseClassProperty(t))}pushClassPrivateProperty(e,t){this.expectPlugin("classPrivateProperties",t.key.start);const n=this.parseClassPrivateProperty(t);e.body.push(n),this.classScope.declarePrivateName(n.key.id.name,0,n.key.start)}pushClassMethod(e,t,n,r,s,i){e.body.push(this.parseMethod(t,n,r,s,i,"ClassMethod",!0))}pushClassPrivateMethod(e,t,n,r){this.expectPlugin("classPrivateMethods",t.key.start);const s=this.parseMethod(t,n,r,!1,!1,"ClassPrivateMethod",!0);e.body.push(s);const i="get"===s.kind?s.static?6:2:"set"===s.kind?s.static?5:1:0;this.classScope.declarePrivateName(s.key.id.name,i,s.key.start)}parsePostMemberNameModifiers(e){}parseClassPrivateProperty(e){return this.parseInitializer(e),this.semicolon(),this.finishNode(e,"ClassPrivateProperty")}parseClassProperty(e){return e.typeAnnotation&&!this.match(l.eq)||this.expectPlugin("classProperties"),this.parseInitializer(e),this.semicolon(),this.finishNode(e,"ClassProperty")}parseInitializer(e){this.scope.enter(80),this.expressionScope.enter(Te()),this.prodParam.enter(0),e.value=this.eat(l.eq)?this.parseMaybeAssignAllowIn():null,this.expressionScope.exit(),this.prodParam.exit(),this.scope.exit()}parseClassId(e,t,n,r=139){this.match(l.name)?(e.id=this.parseIdentifier(),t&&this.checkLVal(e.id,r,void 0,"class name")):n||!t?e.id=null:this.unexpected(null,E.MissingClassName)}parseClassSuper(e){e.superClass=this.eat(l._extends)?this.parseExprSubscripts():null}parseExport(e){const t=this.maybeParseExportDefaultSpecifier(e),n=!t||this.eat(l.comma),r=n&&this.eatExportStar(e),s=r&&this.maybeParseExportNamespaceSpecifier(e),i=n&&(!s||this.eat(l.comma)),a=t||r;if(r&&!s)return t&&this.unexpected(),this.parseExportFrom(e,!0),this.finishNode(e,"ExportAllDeclaration");const o=this.maybeParseExportNamedSpecifiers(e);if(t&&n&&!r&&!o||s&&i&&!o)throw this.unexpected(null,l.braceL);let u;if(a||o?(u=!1,this.parseExportFrom(e,a)):u=this.maybeParseExportDeclaration(e),a||o||u)return this.checkExport(e,!0,!1,!!e.source),this.finishNode(e,"ExportNamedDeclaration");if(this.eat(l._default))return e.declaration=this.parseExportDefaultExpression(),this.checkExport(e,!0,!0),this.finishNode(e,"ExportDefaultDeclaration");throw this.unexpected(null,l.braceL)}eatExportStar(e){return this.eat(l.star)}maybeParseExportDefaultSpecifier(e){if(this.isExportDefaultSpecifier()){this.expectPlugin("exportDefaultFrom");const t=this.startNode();return t.exported=this.parseIdentifier(!0),e.specifiers=[this.finishNode(t,"ExportDefaultSpecifier")],!0}return!1}maybeParseExportNamespaceSpecifier(e){if(this.isContextual("as")){e.specifiers||(e.specifiers=[]);const t=this.startNodeAt(this.state.lastTokStart,this.state.lastTokStartLoc);return this.next(),t.exported=this.parseModuleExportName(),e.specifiers.push(this.finishNode(t,"ExportNamespaceSpecifier")),!0}return!1}maybeParseExportNamedSpecifiers(e){return!!this.match(l.braceL)&&(e.specifiers||(e.specifiers=[]),e.specifiers.push(...this.parseExportSpecifiers()),e.source=null,e.declaration=null,!0)}maybeParseExportDeclaration(e){return!!this.shouldParseExportDeclaration()&&(e.specifiers=[],e.source=null,e.declaration=this.parseExportDeclaration(e),!0)}isAsyncFunction(){if(!this.isContextual("async"))return!1;const e=this.nextTokenStart();return!p.test(this.input.slice(this.state.pos,e))&&this.isUnparsedContextual(e,"function")}parseExportDefaultExpression(){const e=this.startNode(),t=this.isAsyncFunction();if(this.match(l._function)||t)return this.next(),t&&this.next(),this.parseFunction(e,5,t);if(this.match(l._class))return this.parseClass(e,!0,!0);if(this.match(l.at))return this.hasPlugin("decorators")&&this.getPluginOption("decorators","decoratorsBeforeExport")&&this.raise(this.state.start,E.DecoratorBeforeExport),this.parseDecorators(!1),this.parseClass(e,!0,!0);if(this.match(l._const)||this.match(l._var)||this.isLet())throw this.raise(this.state.start,E.UnsupportedDefaultExport);{const e=this.parseMaybeAssignAllowIn();return this.semicolon(),e}}parseExportDeclaration(e){return this.parseStatement(null)}isExportDefaultSpecifier(){if(this.match(l.name)){const e=this.state.value;if("async"===e&&!this.state.containsEsc||"let"===e)return!1;if(("type"===e||"interface"===e)&&!this.state.containsEsc){const e=this.lookahead();if(e.type===l.name&&"from"!==e.value||e.type===l.braceL)return this.expectOnePlugin(["flow","typescript"]),!1}}else if(!this.match(l._default))return!1;const e=this.nextTokenStart(),t=this.isUnparsedContextual(e,"from");if(44===this.input.charCodeAt(e)||this.match(l.name)&&t)return!0;if(this.match(l._default)&&t){const t=this.input.charCodeAt(this.nextTokenStartSince(e+4));return 34===t||39===t}return!1}parseExportFrom(e,t){if(this.eatContextual("from")){e.source=this.parseImportSource(),this.checkExport(e);const t=this.maybeParseImportAssertions();t&&(e.assertions=t)}else t?this.unexpected():e.source=null;this.semicolon()}shouldParseExportDeclaration(){if(this.match(l.at)&&(this.expectOnePlugin(["decorators","decorators-legacy"]),this.hasPlugin("decorators"))){if(!this.getPluginOption("decorators","decoratorsBeforeExport"))return!0;this.unexpected(this.state.start,E.DecoratorBeforeExport)}return"var"===this.state.type.keyword||"const"===this.state.type.keyword||"function"===this.state.type.keyword||"class"===this.state.type.keyword||this.isLet()||this.isAsyncFunction()}checkExport(e,t,n,r){if(t)if(n){if(this.checkDuplicateExports(e,"default"),this.hasPlugin("exportDefaultFrom")){var s;const t=e.declaration;"Identifier"!==t.type||"from"!==t.name||t.end-t.start!=4||(null==(s=t.extra)?void 0:s.parenthesized)||this.raise(t.start,E.ExportDefaultFromAsIdentifier)}}else if(e.specifiers&&e.specifiers.length)for(let t=0,n=e.specifiers;t<n.length;t++){const e=n[t],{exported:s}=e,i="Identifier"===s.type?s.name:s.value;if(this.checkDuplicateExports(e,i),!r&&e.local){const{local:t}=e;"StringLiteral"===t.type?this.raise(e.start,E.ExportBindingIsString,t.extra.raw,i):(this.checkReservedWord(t.name,t.start,!0,!1),this.scope.checkLocalExport(t))}}else if(e.declaration)if("FunctionDeclaration"===e.declaration.type||"ClassDeclaration"===e.declaration.type){const t=e.declaration.id;if(!t)throw new Error("Assertion failure");this.checkDuplicateExports(e,t.name)}else if("VariableDeclaration"===e.declaration.type)for(let t=0,n=e.declaration.declarations;t<n.length;t++){const e=n[t];this.checkDeclaration(e.id)}if(this.state.decoratorStack[this.state.decoratorStack.length-1].length)throw this.raise(e.start,E.UnsupportedDecoratorExport)}checkDeclaration(e){if("Identifier"===e.type)this.checkDuplicateExports(e,e.name);else if("ObjectPattern"===e.type)for(let t=0,n=e.properties;t<n.length;t++){const e=n[t];this.checkDeclaration(e)}else if("ArrayPattern"===e.type)for(let t=0,n=e.elements;t<n.length;t++){const e=n[t];e&&this.checkDeclaration(e)}else"ObjectProperty"===e.type?this.checkDeclaration(e.value):"RestElement"===e.type?this.checkDeclaration(e.argument):"AssignmentPattern"===e.type&&this.checkDeclaration(e.left)}checkDuplicateExports(e,t){this.state.exportedIdentifiers.indexOf(t)>-1&&this.raise(e.start,"default"===t?E.DuplicateDefaultExport:E.DuplicateExport,t),this.state.exportedIdentifiers.push(t)}parseExportSpecifiers(){const e=[];let t=!0;for(this.expect(l.braceL);!this.eat(l.braceR);){if(t)t=!1;else if(this.expect(l.comma),this.eat(l.braceR))break;const n=this.startNode();n.local=this.parseModuleExportName(),n.exported=this.eatContextual("as")?this.parseModuleExportName():n.local.__clone(),e.push(this.finishNode(n,"ExportSpecifier"))}return e}parseModuleExportName(){if(this.match(l.string)){this.expectPlugin("moduleStringNames");const e=this.parseLiteral(this.state.value,"StringLiteral"),t=e.value.match(Pe);return t&&this.raise(e.start,E.ModuleExportNameHasLoneSurrogate,t[0].charCodeAt(0).toString(16)),e}return this.parseIdentifier(!0)}parseImport(e){if(e.specifiers=[],!this.match(l.string)){const t=!this.maybeParseDefaultImportSpecifier(e)||this.eat(l.comma),n=t&&this.maybeParseStarImportSpecifier(e);t&&!n&&this.parseNamedImportSpecifiers(e),this.expectContextual("from")}e.source=this.parseImportSource();const t=this.maybeParseImportAssertions();if(t)e.assertions=t;else{const t=this.maybeParseModuleAttributes();t&&(e.attributes=t)}return this.semicolon(),this.finishNode(e,"ImportDeclaration")}parseImportSource(){return this.match(l.string)||this.unexpected(),this.parseExprAtom()}shouldParseDefaultImport(e){return this.match(l.name)}parseImportSpecifierLocal(e,t,n,r){t.local=this.parseIdentifier(),this.checkLVal(t.local,9,void 0,r),e.specifiers.push(this.finishNode(t,n))}parseAssertEntries(){const e=[],t=new Set;do{if(this.match(l.braceR))break;const n=this.startNode(),r=this.state.value;if(this.match(l.string)?n.key=this.parseLiteral(r,"StringLiteral"):n.key=this.parseIdentifier(!0),this.expect(l.colon),"type"!==r&&this.raise(n.key.start,E.ModuleAttributeDifferentFromType,r),t.has(r)&&this.raise(n.key.start,E.ModuleAttributesWithDuplicateKeys,r),t.add(r),!this.match(l.string))throw this.unexpected(this.state.start,E.ModuleAttributeInvalidValue);n.value=this.parseLiteral(this.state.value,"StringLiteral"),this.finishNode(n,"ImportAttribute"),e.push(n)}while(this.eat(l.comma));return e}maybeParseModuleAttributes(){if(!this.match(l._with)||this.hasPrecedingLineBreak())return this.hasPlugin("moduleAttributes")?[]:null;this.expectPlugin("moduleAttributes"),this.next();const e=[],t=new Set;do{const n=this.startNode();if(n.key=this.parseIdentifier(!0),"type"!==n.key.name&&this.raise(n.key.start,E.ModuleAttributeDifferentFromType,n.key.name),t.has(n.key.name)&&this.raise(n.key.start,E.ModuleAttributesWithDuplicateKeys,n.key.name),t.add(n.key.name),this.expect(l.colon),!this.match(l.string))throw this.unexpected(this.state.start,E.ModuleAttributeInvalidValue);n.value=this.parseLiteral(this.state.value,"StringLiteral"),this.finishNode(n,"ImportAttribute"),e.push(n)}while(this.eat(l.comma));return e}maybeParseImportAssertions(){if(!this.isContextual("assert")||this.hasPrecedingLineBreak())return this.hasPlugin("importAssertions")?[]:null;this.expectPlugin("importAssertions"),this.next(),this.eat(l.braceL);const e=this.parseAssertEntries();return this.eat(l.braceR),e}maybeParseDefaultImportSpecifier(e){return!!this.shouldParseDefaultImport(e)&&(this.parseImportSpecifierLocal(e,this.startNode(),"ImportDefaultSpecifier","default import specifier"),!0)}maybeParseStarImportSpecifier(e){if(this.match(l.star)){const t=this.startNode();return this.next(),this.expectContextual("as"),this.parseImportSpecifierLocal(e,t,"ImportNamespaceSpecifier","import namespace specifier"),!0}return!1}parseNamedImportSpecifiers(e){let t=!0;for(this.expect(l.braceL);!this.eat(l.braceR);){if(t)t=!1;else{if(this.eat(l.colon))throw this.raise(this.state.start,E.DestructureNamedImport);if(this.expect(l.comma),this.eat(l.braceR))break}this.parseImportSpecifier(e)}}parseImportSpecifier(e){const t=this.startNode();if(t.imported=this.parseModuleExportName(),this.eatContextual("as"))t.local=this.parseIdentifier();else{const{imported:e}=t;if("StringLiteral"===e.type)throw this.raise(t.start,E.ImportBindingIsString,e.value);this.checkReservedWord(e.name,t.start,!0,!0),t.local=e.__clone()}this.checkLVal(t.local,9,void 0,"import specifier"),e.specifiers.push(this.finishNode(t,"ImportSpecifier"))}}{constructor(e,t){super(e=function(e){const t={};for(let n=0,r=Object.keys(fe);n<r.length;n++){const s=r[n];t[s]=e&&null!=e[s]?e[s]:fe[s]}return t}(e),t);const n=this.getScopeHandler();this.options=e,this.inModule="module"===this.options.sourceType,this.scope=new n(this.raise.bind(this),this.inModule),this.prodParam=new re,this.classScope=new ke(this.raise.bind(this)),this.expressionScope=new Se(this.raise.bind(this)),this.plugins=function(e){const t=new Map;for(let n=0;n<e.length;n++){const r=e[n],[s,i]=Array.isArray(r)?r:[r,{}];t.has(s)||t.set(s,i||{})}return t}(this.options.plugins),this.filename=e.sourceFilename}getScopeHandler(){return ee}parse(){let e=0;this.hasPlugin("topLevelAwait")&&this.inModule&&(e|=2),this.scope.enter(1),this.prodParam.enter(e);const t=this.startNode(),n=this.startNode();return this.nextToken(),t.errors=null,this.parseTopLevel(t,n),t.errors=this.state.errors,t}}function Le(e,t){let n=Ie;return(null==e?void 0:e.plugins)&&(function(e){if(ue(e,"decorators")){if(ue(e,"decorators-legacy"))throw new Error("Cannot use the decorators and decorators-legacy plugin together");const t=ce(e,"decorators","decoratorsBeforeExport");if(null==t)throw new Error("The 'decorators' plugin requires a 'decoratorsBeforeExport' option, whose value must be a boolean. If you are migrating from Babylon/Babel 6 or want to use the old decorators proposal, you should use the 'decorators-legacy' plugin instead of 'decorators'.");if("boolean"!=typeof t)throw new Error("'decoratorsBeforeExport' must be a boolean.")}if(ue(e,"flow")&&ue(e,"typescript"))throw new Error("Cannot combine flow and typescript plugins.");if(ue(e,"placeholders")&&ue(e,"v8intrinsic"))throw new Error("Cannot combine placeholders and v8intrinsic plugins.");if(ue(e,"pipelineOperator")&&!le.includes(ce(e,"pipelineOperator","proposal")))throw new Error("'pipelineOperator' requires 'proposal' option whose value should be one of: "+le.map((e=>"'".concat(e,"'"))).join(", "));if(ue(e,"moduleAttributes")){if(ue(e,"importAssertions"))throw new Error("Cannot combine importAssertions and moduleAttributes plugins.");if("may-2020"!==ce(e,"moduleAttributes","version"))throw new Error("The 'moduleAttributes' plugin requires a 'version' option, representing the last proposal update. Currently, the only supported value is 'may-2020'.")}if(ue(e,"recordAndTuple")&&!pe.includes(ce(e,"recordAndTuple","syntaxType")))throw new Error("'recordAndTuple' requires 'syntaxType' option whose value should be one of: "+pe.map((e=>"'".concat(e,"'"))).join(", "))}(e.plugins),n=function(e){const t=de.filter((t=>ue(e,t))),n=t.join("/");let r=Oe[n];if(!r){r=Ie;for(let e=0;e<t.length;e++){const n=t[e];r=he[n](r)}Oe[n]=r}return r}(e.plugins)),new n(e,t)}const Oe={};t.parse=function(e,t){var n;if("unambiguous"!==(null==(n=t)?void 0:n.sourceType))return Le(t,e).parse();t=Object.assign({},t);try{t.sourceType="module";const n=Le(t,e),r=n.parse();if(n.sawUnambiguousESM)return r;if(n.ambiguousScriptDifferentAst)try{return t.sourceType="script",Le(t,e).parse()}catch(e){}else r.program.sourceType="script";return r}catch(n){try{return t.sourceType="script",Le(t,e).parse()}catch(e){}throw n}},t.parseExpression=function(e,t){const n=Le(t,e);return n.options.strictMode&&(n.state.strict=!0),n.getExpression()},t.tokTypes=l}));const{getNextNonSpaceNonCommentCharacterIndexWithStartIndex:$n,getShebang:Vn}=Le,{hasPragma:Wn}=Xe,{locStart:zn,locEnd:Hn}=Qe,Gn=/@(?:no)?flow\b/;function Xn(t,...n){return(r,s,i={})=>{if("babel"===i.parser&&function(e,t){if(t.filepath&&t.filepath.endsWith(".js.flow"))return!0;const n=Vn(e);n&&(e=e.slice(n.length));const r=$n(e,0);return!1!==r&&(e=e.slice(0,r)),Gn.test(e)}(r,i))return i.parser="babel-flow",Kn(r,s,i);const a=Un,o="script"===i.__babelSourceType?"script":"module";let u;try{u=function(e,t){let n;for(let r=0;r<t.length;r++)try{return er(e(t[r]))}catch(e){n||(n=e)}throw n}((e=>a[t](r,e)),function(e,t,n){if(!e)return t;const r=[];for(const e of t)for(const t of n)r.push([...e,t]);return r}(r.includes("|>"),n,[["pipelineOperator",{proposal:"smart"}],["pipelineOperator",{proposal:"minimal"}],["pipelineOperator",{proposal:"fsharp"}]]).map((e=>function({sourceType:e,extraPlugins:t=[]}){return{sourceType:e,allowAwaitOutsideFunction:!0,allowImportExportEverywhere:!0,allowReturnOutsideFunction:!0,allowSuperOutsideMethod:!0,allowUndeclaredExports:!0,errorRecovery:!0,createParenthesizedExpressions:!0,plugins:["doExpressions","classProperties","exportDefaultFrom","functionBind","functionSent","classPrivateProperties","throwExpressions","classPrivateMethods","v8intrinsic","partialApplication",["decorators",{decoratorsBeforeExport:!1}],"privateIn","importAssertions",["recordAndTuple",{syntaxType:"hash"}],"decimal","moduleStringNames","classStaticBlock",...t],tokens:!0,ranges:!0}}({sourceType:o,extraPlugins:e}))))}catch(t){const{message:n,loc:r}=t;throw e(n.replace(/ \(.*\)/,""),{start:{line:r?r.line:0,column:r?r.column+1:0}})}return qn(u,Object.assign({},i,{originalText:r}))}}const Jn=Xn("parse",["jsx","flow"]),Kn=Xn("parse",["jsx",["flow",{all:!0,enums:!0}]]),Yn=Xn("parse",["jsx","typescript"],["typescript"]),Qn=Xn("parseExpression",["jsx"]),Zn=new Set(["Did not expect a type annotation here.","The only accepted module attribute is `type`","Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`"]);function er(e){const t=e.errors.find((e=>function(e){const[,t]=e.message.match(/(.*?)\s*\(\d+:\d+\)/);return Zn.has(t)}(e)));if(t)throw t;return e}function tr(t,n){switch(t.type){case"ArrayExpression":return t.elements.forEach(r);case"ObjectExpression":return t.properties.forEach(r);case"ObjectProperty":if(t.computed)throw s("computed");if(t.shorthand)throw s("shorthand");return[t.key,t.value].forEach(r);case"UnaryExpression":switch(t.operator){case"+":case"-":return r(t.argument);default:throw s("operator")}case"Identifier":if(n&&"ObjectProperty"===n.type&&n.key===t)return;throw s();case"NullLiteral":case"BooleanLiteral":case"NumericLiteral":case"StringLiteral":return;default:throw s()}function r(e){return tr(e,t)}function s(n){const r=n?"".concat(t.type," with ").concat(n,"=").concat(JSON.stringify(t[n])):t.type;return e("".concat(r," is not allowed in JSON."),{start:{line:t.loc.start.line,column:t.loc.start.column+1}})}}const nr={parse:Jn,astFormat:"estree",hasPragma:Wn,locStart:zn,locEnd:Hn},rr=Object.assign({},nr,{parse:Kn}),sr=Object.assign({},nr,{parse:Yn}),ir=Object.assign({},nr,{parse:Qn});return{parsers:{babel:nr,"babel-flow":rr,"babel-ts":sr,json:Object.assign({},ir,{hasPragma:()=>!0}),json5:ir,"json-stringify":{parse:function(e,t,n){const r=Qn(e,t,n);return r.comments.forEach(tr),tr(r),r},astFormat:"estree-json",locStart:zn,locEnd:Hn},__js_expression:ir,__vue_expression:ir,__vue_event_binding:nr}}}()},237:function(e,t,n){e.exports=function(){"use strict";var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{};function t(e,t,n){return e(n={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&n.path)}},n.exports),n.exports}var r=t((function(e,t){function n(e){return t.$0<=e&&e<=t.$9}Object.defineProperty(t,"__esModule",{value:!0}),t.$EOF=0,t.$BSPACE=8,t.$TAB=9,t.$LF=10,t.$VTAB=11,t.$FF=12,t.$CR=13,t.$SPACE=32,t.$BANG=33,t.$DQ=34,t.$HASH=35,t.$$=36,t.$PERCENT=37,t.$AMPERSAND=38,t.$SQ=39,t.$LPAREN=40,t.$RPAREN=41,t.$STAR=42,t.$PLUS=43,t.$COMMA=44,t.$MINUS=45,t.$PERIOD=46,t.$SLASH=47,t.$COLON=58,t.$SEMICOLON=59,t.$LT=60,t.$EQ=61,t.$GT=62,t.$QUESTION=63,t.$0=48,t.$7=55,t.$9=57,t.$A=65,t.$E=69,t.$F=70,t.$X=88,t.$Z=90,t.$LBRACKET=91,t.$BACKSLASH=92,t.$RBRACKET=93,t.$CARET=94,t.$_=95,t.$a=97,t.$b=98,t.$e=101,t.$f=102,t.$n=110,t.$r=114,t.$t=116,t.$u=117,t.$v=118,t.$x=120,t.$z=122,t.$LBRACE=123,t.$BAR=124,t.$RBRACE=125,t.$NBSP=160,t.$PIPE=124,t.$TILDA=126,t.$AT=64,t.$BT=96,t.isWhitespace=function(e){return e>=t.$TAB&&e<=t.$SPACE||e==t.$NBSP},t.isDigit=n,t.isAsciiLetter=function(e){return e>=t.$a&&e<=t.$z||e>=t.$A&&e<=t.$Z},t.isAsciiHexDigit=function(e){return e>=t.$a&&e<=t.$f||e>=t.$A&&e<=t.$F||n(e)},t.isNewLine=function(e){return e===t.$LF||e===t.$CR},t.isOctalDigit=function(e){return t.$0<=e&&e<=t.$7}})),s=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(e,t,n){this.filePath=e,this.name=t,this.members=n}assertNoMembers(){if(this.members.length)throw new Error("Illegal state: symbol without members expected, but got ".concat(JSON.stringify(this),"."))}}t.StaticSymbol=n,t.StaticSymbolCache=class{constructor(){this.cache=new Map}get(e,t,r){const s=(r=r||[]).length?".".concat(r.join(".")):"",i='"'.concat(e,'".').concat(t).concat(s);let a=this.cache.get(i);return a||(a=new n(e,t,r),this.cache.set(i,a)),a}}})),i=t((function(t,n){Object.defineProperty(n,"__esModule",{value:!0});const r=/-+([a-z0-9])/g;function s(e,t,n){const r=e.indexOf(t);return-1==r?n:[e.slice(0,r).trim(),e.slice(r+1).trim()]}function i(e,t,n){return Array.isArray(e)?t.visitArray(e,n):"object"==typeof(r=e)&&null!==r&&Object.getPrototypeOf(r)===u?t.visitStringMap(e,n):null==e||"string"==typeof e||"number"==typeof e||"boolean"==typeof e?t.visitPrimitive(e,n):t.visitOther(e,n);var r}n.dashCaseToCamelCase=function(e){return e.replace(r,((...e)=>e[1].toUpperCase()))},n.splitAtColon=function(e,t){return s(e,":",t)},n.splitAtPeriod=function(e,t){return s(e,".",t)},n.visitValue=i,n.isDefined=function(e){return null!=e},n.noUndefined=function(e){return void 0===e?null:e},n.ValueTransformer=class{visitArray(e,t){return e.map((e=>i(e,this,t)))}visitStringMap(e,t){const n={};return Object.keys(e).forEach((r=>{n[r]=i(e[r],this,t)})),n}visitPrimitive(e,t){return e}visitOther(e,t){return e}},n.SyncAsync={assertSync:e=>{if(c(e))throw new Error("Illegal state: value cannot be a promise");return e},then:(e,t)=>c(e)?e.then(t):t(e),all:e=>e.some(c)?Promise.all(e):e},n.error=function(e){throw new Error("Internal Error: ".concat(e))},n.syntaxError=function(e,t){const n=Error(e);return n[a]=!0,t&&(n[o]=t),n};const a="ngSyntaxError",o="ngParseErrors";n.isSyntaxError=function(e){return e[a]},n.getParseErrors=function(e){return e[o]||[]},n.escapeRegExp=function(e){return e.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")};const u=Object.getPrototypeOf({});function c(e){return!!e&&"function"==typeof e.then}n.utf8Encode=function(e){let t="";for(let n=0;n<e.length;n++){let r=e.charCodeAt(n);if(r>=55296&&r<=56319&&e.length>n+1){const t=e.charCodeAt(n+1);t>=56320&&t<=57343&&(n++,r=(r-55296<<10)+t-56320+65536)}r<=127?t+=String.fromCharCode(r):r<=2047?t+=String.fromCharCode(r>>6&31|192,63&r|128):r<=65535?t+=String.fromCharCode(r>>12|224,r>>6&63|128,63&r|128):r<=2097151&&(t+=String.fromCharCode(r>>18&7|240,r>>12&63|128,r>>6&63|128,63&r|128))}return t},n.stringify=function e(t){if("string"==typeof t)return t;if(t instanceof Array)return"["+t.map(e).join(", ")+"]";if(null==t)return""+t;if(t.overriddenName)return"".concat(t.overriddenName);if(t.name)return"".concat(t.name);if(!t.toString)return"object";const n=t.toString();if(null==n)return""+n;const r=n.indexOf("\n");return-1===r?n:n.substring(0,r)},n.resolveForwardRef=function(e){return"function"==typeof e&&e.hasOwnProperty("__forward_ref__")?e():e},n.isPromise=c,n.Version=class{constructor(e){this.full=e;const t=e.split(".");this.major=t[0],this.minor=t[1],this.patch=t.slice(2).join(".")}};const l="undefined"!=typeof window&&window,p="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,h=void 0!==e&&e||l||p;n.global=h})),a=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});const n=/^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;function r(e){return e.replace(/\W/g,"_")}t.sanitizeIdentifier=r;let a=0;function o(e){if(!e||!e.reference)return null;const t=e.reference;if(t instanceof s.StaticSymbol)return t.name;if(t.__anonymousType)return t.__anonymousType;let n=i.stringify(t);return n.indexOf("(")>=0?(n="anonymous_".concat(a++),t.__anonymousType=n):n=r(n),n}var u;t.identifierName=o,t.identifierModuleUrl=function(e){const t=e.reference;return t instanceof s.StaticSymbol?t.filePath:"./".concat(i.stringify(t))},t.viewClassName=function(e,t){return"View_".concat(o({reference:e}),"_").concat(t)},t.rendererTypeName=function(e){return"RenderType_".concat(o({reference:e}))},t.hostViewClassName=function(e){return"HostView_".concat(o({reference:e}))},t.componentFactoryName=function(e){return"".concat(o({reference:e}),"NgFactory")},function(e){e[e.Pipe=0]="Pipe",e[e.Directive=1]="Directive",e[e.NgModule=2]="NgModule",e[e.Injectable=3]="Injectable"}(u=t.CompileSummaryKind||(t.CompileSummaryKind={})),t.tokenName=function(e){return null!=e.value?r(e.value):o(e.identifier)},t.tokenReference=function(e){return null!=e.identifier?e.identifier.reference:e.value},t.CompileStylesheetMetadata=class{constructor({moduleUrl:e,styles:t,styleUrls:n}={}){this.moduleUrl=e||null,this.styles=l(t),this.styleUrls=l(n)}},t.CompileTemplateMetadata=class{constructor({encapsulation:e,template:t,templateUrl:n,htmlAst:r,styles:s,styleUrls:i,externalStylesheets:a,animations:o,ngContentSelectors:u,interpolation:c,isInline:h,preserveWhitespaces:d}){if(this.encapsulation=e,this.template=t,this.templateUrl=n,this.htmlAst=r,this.styles=l(s),this.styleUrls=l(i),this.externalStylesheets=l(a),this.animations=o?p(o):[],this.ngContentSelectors=u||[],c&&2!=c.length)throw new Error("'interpolation' should have a start and an end symbol.");this.interpolation=c,this.isInline=h,this.preserveWhitespaces=d}toSummary(){return{ngContentSelectors:this.ngContentSelectors,encapsulation:this.encapsulation,styles:this.styles,animations:this.animations}}};class c{static create({isHost:e,type:t,isComponent:r,selector:s,exportAs:a,changeDetection:o,inputs:u,outputs:l,host:p,providers:h,viewProviders:d,queries:f,guards:D,viewQueries:m,entryComponents:g,template:y,componentViewType:E,rendererType:C,componentFactory:A}){const b={},F={},x={};null!=p&&Object.keys(p).forEach((e=>{const t=p[e],r=e.match(n);null===r?x[e]=t:null!=r[1]?F[r[1]]=t:null!=r[2]&&(b[r[2]]=t)}));const v={};null!=u&&u.forEach((e=>{const t=i.splitAtColon(e,[e,e]);v[t[0]]=t[1]}));const S={};return null!=l&&l.forEach((e=>{const t=i.splitAtColon(e,[e,e]);S[t[0]]=t[1]})),new c({isHost:e,type:t,isComponent:!!r,selector:s,exportAs:a,changeDetection:o,inputs:v,outputs:S,hostListeners:b,hostProperties:F,hostAttributes:x,providers:h,viewProviders:d,queries:f,guards:D,viewQueries:m,entryComponents:g,template:y,componentViewType:E,rendererType:C,componentFactory:A})}constructor({isHost:e,type:t,isComponent:n,selector:r,exportAs:s,changeDetection:i,inputs:a,outputs:o,hostListeners:u,hostProperties:c,hostAttributes:p,providers:h,viewProviders:d,queries:f,guards:D,viewQueries:m,entryComponents:g,template:y,componentViewType:E,rendererType:C,componentFactory:A}){this.isHost=!!e,this.type=t,this.isComponent=n,this.selector=r,this.exportAs=s,this.changeDetection=i,this.inputs=a,this.outputs=o,this.hostListeners=u,this.hostProperties=c,this.hostAttributes=p,this.providers=l(h),this.viewProviders=l(d),this.queries=l(f),this.guards=D,this.viewQueries=l(m),this.entryComponents=l(g),this.template=y,this.componentViewType=E,this.rendererType=C,this.componentFactory=A}toSummary(){return{summaryKind:u.Directive,type:this.type,isComponent:this.isComponent,selector:this.selector,exportAs:this.exportAs,inputs:this.inputs,outputs:this.outputs,hostListeners:this.hostListeners,hostProperties:this.hostProperties,hostAttributes:this.hostAttributes,providers:this.providers,viewProviders:this.viewProviders,queries:this.queries,guards:this.guards,viewQueries:this.viewQueries,entryComponents:this.entryComponents,changeDetection:this.changeDetection,template:this.template&&this.template.toSummary(),componentViewType:this.componentViewType,rendererType:this.rendererType,componentFactory:this.componentFactory}}}function l(e){return e||[]}function p(e){return e.reduce(((e,t)=>{const n=Array.isArray(t)?p(t):t;return e.concat(n)}),[])}function h(e){return e.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/,"ng:///")}t.CompileDirectiveMetadata=c,t.CompilePipeMetadata=class{constructor({type:e,name:t,pure:n}){this.type=e,this.name=t,this.pure=!!n}toSummary(){return{summaryKind:u.Pipe,type:this.type,name:this.name,pure:this.pure}}},t.CompileShallowModuleMetadata=class{},t.CompileNgModuleMetadata=class{constructor({type:e,providers:t,declaredDirectives:n,exportedDirectives:r,declaredPipes:s,exportedPipes:i,entryComponents:a,bootstrapComponents:o,importedModules:u,exportedModules:c,schemas:p,transitiveModule:h,id:d}){this.type=e||null,this.declaredDirectives=l(n),this.exportedDirectives=l(r),this.declaredPipes=l(s),this.exportedPipes=l(i),this.providers=l(t),this.entryComponents=l(a),this.bootstrapComponents=l(o),this.importedModules=l(u),this.exportedModules=l(c),this.schemas=l(p),this.id=d||null,this.transitiveModule=h||null}toSummary(){const e=this.transitiveModule;return{summaryKind:u.NgModule,type:this.type,entryComponents:e.entryComponents,providers:e.providers,modules:e.modules,exportedDirectives:e.exportedDirectives,exportedPipes:e.exportedPipes}}},t.TransitiveCompileNgModuleMetadata=class{constructor(){this.directivesSet=new Set,this.directives=[],this.exportedDirectivesSet=new Set,this.exportedDirectives=[],this.pipesSet=new Set,this.pipes=[],this.exportedPipesSet=new Set,this.exportedPipes=[],this.modulesSet=new Set,this.modules=[],this.entryComponentsSet=new Set,this.entryComponents=[],this.providers=[]}addProvider(e,t){this.providers.push({provider:e,module:t})}addDirective(e){this.directivesSet.has(e.reference)||(this.directivesSet.add(e.reference),this.directives.push(e))}addExportedDirective(e){this.exportedDirectivesSet.has(e.reference)||(this.exportedDirectivesSet.add(e.reference),this.exportedDirectives.push(e))}addPipe(e){this.pipesSet.has(e.reference)||(this.pipesSet.add(e.reference),this.pipes.push(e))}addExportedPipe(e){this.exportedPipesSet.has(e.reference)||(this.exportedPipesSet.add(e.reference),this.exportedPipes.push(e))}addModule(e){this.modulesSet.has(e.reference)||(this.modulesSet.add(e.reference),this.modules.push(e))}addEntryComponent(e){this.entryComponentsSet.has(e.componentType)||(this.entryComponentsSet.add(e.componentType),this.entryComponents.push(e))}},t.ProviderMeta=class{constructor(e,{useClass:t,useValue:n,useExisting:r,useFactory:s,deps:i,multi:a}){this.token=e,this.useClass=t||null,this.useValue=n,this.useExisting=r,this.useFactory=s||null,this.dependencies=i||null,this.multi=!!a}},t.flatten=p,t.templateSourceUrl=function(e,t,n){let r;return r=n.isInline?t.type.reference instanceof s.StaticSymbol?"".concat(t.type.reference.filePath,".").concat(t.type.reference.name,".html"):"".concat(o(e),"/").concat(o(t.type),".html"):n.templateUrl,t.type.reference instanceof s.StaticSymbol?r:h(r)},t.sharedStylesheetJitUrl=function(e,t){const n=e.moduleUrl.split(/\/\\/g),r=n[n.length-1];return h("css/".concat(t).concat(r,".ngstyle.js"))},t.ngModuleJitUrl=function(e){return h("".concat(o(e.type),"/module.ngfactory.js"))},t.templateJitUrl=function(e,t){return h("".concat(o(e),"/").concat(o(t.type),".ngfactory.js"))}})),o=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(e,t,n,r){this.file=e,this.offset=t,this.line=n,this.col=r}toString(){return null!=this.offset?"".concat(this.file.url,"@").concat(this.line,":").concat(this.col):this.file.url}moveBy(e){const t=this.file.content,s=t.length;let i=this.offset,a=this.line,o=this.col;for(;i>0&&e<0;)if(i--,e++,t.charCodeAt(i)==r.$LF){a--;const e=t.substr(0,i-1).lastIndexOf(String.fromCharCode(r.$LF));o=e>0?i-e:i}else o--;for(;i<s&&e>0;){const n=t.charCodeAt(i);i++,e--,n==r.$LF?(a++,o=0):o++}return new n(this.file,i,a,o)}getContext(e,t){const n=this.file.content;let r=this.offset;if(null!=r){r>n.length-1&&(r=n.length-1);let s=r,i=0,a=0;for(;i<e&&r>0&&(r--,i++,"\n"!=n[r]||++a!=t););for(i=0,a=0;i<e&&s<n.length-1&&(s++,i++,"\n"!=n[s]||++a!=t););return{before:n.substring(r,this.offset),after:n.substring(this.offset,s+1)}}return null}}t.ParseLocation=n;class s{constructor(e,t){this.content=e,this.url=t}}t.ParseSourceFile=s;class i{constructor(e,t,n=null){this.start=e,this.end=t,this.details=n}toString(){return this.start.file.content.substring(this.start.offset,this.end.offset)}}var o;t.ParseSourceSpan=i,t.EMPTY_PARSE_LOCATION=new n(new s("",""),0,0,0),t.EMPTY_SOURCE_SPAN=new i(t.EMPTY_PARSE_LOCATION,t.EMPTY_PARSE_LOCATION),function(e){e[e.WARNING=0]="WARNING",e[e.ERROR=1]="ERROR"}(o=t.ParseErrorLevel||(t.ParseErrorLevel={})),t.ParseError=class{constructor(e,t,n=o.ERROR){this.span=e,this.msg=t,this.level=n}contextualMessage(){const e=this.span.start.getContext(100,3);return e?"".concat(this.msg,' ("').concat(e.before,"[").concat(o[this.level]," ->]").concat(e.after,'")'):this.msg}toString(){const e=this.span.details?", ".concat(this.span.details):"";return"".concat(this.contextualMessage(),": ").concat(this.span.start).concat(e)}},t.typeSourceSpan=function(e,t){const r=a.identifierModuleUrl(t),o=null!=r?"in ".concat(e," ").concat(a.identifierName(t)," in ").concat(r):"in ".concat(e," ").concat(a.identifierName(t)),u=new s("",o);return new i(new n(u,-1,-1,-1),new n(u,-1,-1,-1))},t.r3JitTypeSourceSpan=function(e,t,r){const a="in ".concat(e," ").concat(t," in ").concat(r),o=new s("",a);return new i(new n(o,-1,-1,-1),new n(o,-1,-1,-1))}})),u=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")};function c(e){return{type:"concat",parts:e}}function l(e){return{type:"indent",contents:e}}function p(e,t){return{type:"align",contents:t,n:e}}function h(e,t){return{type:"group",id:(t=t||{}).id,contents:e,break:!!t.shouldBreak,expandedStates:t.expandedStates}}const d={type:"break-parent"},f=c([{type:"line",hard:!0},d]),D=c([{type:"line",hard:!0,literal:!0},d]);var m={concat:c,join:function(e,t){const n=[];for(let r=0;r<t.length;r++)0!==r&&n.push(e),n.push(t[r]);return c(n)},line:{type:"line"},softline:{type:"line",soft:!0},hardline:f,literalline:D,group:h,conditionalGroup:function(e,t){return h(e[0],Object.assign({},t,{expandedStates:e}))},fill:function(e){return{type:"fill",parts:e}},lineSuffix:function(e){return{type:"line-suffix",contents:e}},lineSuffixBoundary:{type:"line-suffix-boundary"},cursor:{type:"cursor",placeholder:Symbol("cursor")},breakParent:d,ifBreak:function(e,t,n){return{type:"if-break",breakContents:e,flatContents:t,groupId:(n=n||{}).groupId}},trim:{type:"trim"},indent:l,align:p,addAlignmentToDoc:function(e,t,n){let r=e;if(t>0){for(let e=0;e<Math.floor(t/n);++e)r=l(r);r=p(t%n,r),r=p(-1/0,r)}return r},markAsRoot:function(e){return p({type:"root"},e)},dedentToRoot:function(e){return p(-1/0,e)},dedent:function(e){return p(-1,e)}};const g=e=>!Number.isNaN(e)&&e>=4352&&(e<=4447||9001===e||9002===e||11904<=e&&e<=12871&&12351!==e||12880<=e&&e<=19903||19968<=e&&e<=42182||43360<=e&&e<=43388||44032<=e&&e<=55203||63744<=e&&e<=64255||65040<=e&&e<=65049||65072<=e&&e<=65131||65281<=e&&e<=65376||65504<=e&&e<=65510||110592<=e&&e<=110593||127488<=e&&e<=127569||131072<=e&&e<=262141);var y=g,E=g;y.default=E;const C=e=>{if("string"!=typeof(e=e.replace(/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g,"  "))||0===e.length)return 0;e=(e=>"string"==typeof e?e.replace((({onlyFirst:e=!1}={})=>{const t=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(t,e?void 0:"g")})(),""):e)(e);let t=0;for(let n=0;n<e.length;n++){const r=e.codePointAt(n);r<=31||r>=127&&r<=159||r>=768&&r<=879||(r>65535&&n++,t+=y(r)?2:1)}return t};var A=C,b=C;function F(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}A.default=b;var x=void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};function v(){throw new Error("setTimeout has not been defined")}function S(){throw new Error("clearTimeout has not been defined")}var T=v,w=S;function B(e){if(T===setTimeout)return setTimeout(e,0);if((T===v||!T)&&setTimeout)return T=setTimeout,setTimeout(e,0);try{return T(e,0)}catch(t){try{return T.call(null,e,0)}catch(t){return T.call(this,e,0)}}}"function"==typeof x.setTimeout&&(T=setTimeout),"function"==typeof x.clearTimeout&&(w=clearTimeout);var P,N=[],k=!1,I=-1;function L(){k&&P&&(k=!1,P.length?N=P.concat(N):I=-1,N.length&&O())}function O(){if(!k){var e=B(L);k=!0;for(var t=N.length;t;){for(P=N,N=[];++I<t;)P&&P[I].run();I=-1,t=N.length}P=null,k=!1,function(e){if(w===clearTimeout)return clearTimeout(e);if((w===S||!w)&&clearTimeout)return w=clearTimeout,clearTimeout(e);try{w(e)}catch(t){try{return w.call(null,e)}catch(t){return w.call(this,e)}}}(e)}}function _(e,t){this.fun=e,this.array=t}function M(){}_.prototype.run=function(){this.fun.apply(null,this.array)};var R=M,j=M,q=M,U=M,$=M,V=M,W=M,z=x.performance||{},H=z.now||z.mozNow||z.msNow||z.oNow||z.webkitNow||function(){return(new Date).getTime()},G=new Date,X={nextTick:function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];N.push(new _(e,t)),1!==N.length||k||B(O)},title:"browser",browser:!0,env:{},argv:[],version:"",versions:{},on:R,addListener:j,once:q,off:U,removeListener:$,removeAllListeners:V,emit:W,binding:function(e){throw new Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(e){throw new Error("process.chdir is not supported")},umask:function(){return 0},hrtime:function(e){var t=.001*H.call(z),n=Math.floor(t),r=Math.floor(t%1*1e9);return e&&(n-=e[0],(r-=e[1])<0&&(n--,r+=1e9)),[n,r]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-G)/1e3}},J="object"==typeof X&&X.env&&X.env.NODE_DEBUG&&/\bsemver\b/i.test(X.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{},K={SEMVER_SPEC_VERSION:"2.0.0",MAX_LENGTH:256,MAX_SAFE_INTEGER:Number.MAX_SAFE_INTEGER||9007199254740991,MAX_SAFE_COMPONENT_LENGTH:16},Y=t((function(e,t){const{MAX_SAFE_COMPONENT_LENGTH:n}=K,r=(t=e.exports={}).re=[],s=t.src=[],i=t.t={};let a=0;const o=(e,t,n)=>{const o=a++;J(o,t),i[e]=o,s[o]=t,r[o]=new RegExp(t,n?"g":void 0)};o("NUMERICIDENTIFIER","0|[1-9]\\d*"),o("NUMERICIDENTIFIERLOOSE","[0-9]+"),o("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),o("MAINVERSION","(".concat(s[i.NUMERICIDENTIFIER],")\\.")+"(".concat(s[i.NUMERICIDENTIFIER],")\\.")+"(".concat(s[i.NUMERICIDENTIFIER],")")),o("MAINVERSIONLOOSE","(".concat(s[i.NUMERICIDENTIFIERLOOSE],")\\.")+"(".concat(s[i.NUMERICIDENTIFIERLOOSE],")\\.")+"(".concat(s[i.NUMERICIDENTIFIERLOOSE],")")),o("PRERELEASEIDENTIFIER","(?:".concat(s[i.NUMERICIDENTIFIER],"|").concat(s[i.NONNUMERICIDENTIFIER],")")),o("PRERELEASEIDENTIFIERLOOSE","(?:".concat(s[i.NUMERICIDENTIFIERLOOSE],"|").concat(s[i.NONNUMERICIDENTIFIER],")")),o("PRERELEASE","(?:-(".concat(s[i.PRERELEASEIDENTIFIER],"(?:\\.").concat(s[i.PRERELEASEIDENTIFIER],")*))")),o("PRERELEASELOOSE","(?:-?(".concat(s[i.PRERELEASEIDENTIFIERLOOSE],"(?:\\.").concat(s[i.PRERELEASEIDENTIFIERLOOSE],")*))")),o("BUILDIDENTIFIER","[0-9A-Za-z-]+"),o("BUILD","(?:\\+(".concat(s[i.BUILDIDENTIFIER],"(?:\\.").concat(s[i.BUILDIDENTIFIER],")*))")),o("FULLPLAIN","v?".concat(s[i.MAINVERSION]).concat(s[i.PRERELEASE],"?").concat(s[i.BUILD],"?")),o("FULL","^".concat(s[i.FULLPLAIN],"$")),o("LOOSEPLAIN","[v=\\s]*".concat(s[i.MAINVERSIONLOOSE]).concat(s[i.PRERELEASELOOSE],"?").concat(s[i.BUILD],"?")),o("LOOSE","^".concat(s[i.LOOSEPLAIN],"$")),o("GTLT","((?:<|>)?=?)"),o("XRANGEIDENTIFIERLOOSE","".concat(s[i.NUMERICIDENTIFIERLOOSE],"|x|X|\\*")),o("XRANGEIDENTIFIER","".concat(s[i.NUMERICIDENTIFIER],"|x|X|\\*")),o("XRANGEPLAIN","[v=\\s]*(".concat(s[i.XRANGEIDENTIFIER],")")+"(?:\\.(".concat(s[i.XRANGEIDENTIFIER],")")+"(?:\\.(".concat(s[i.XRANGEIDENTIFIER],")")+"(?:".concat(s[i.PRERELEASE],")?").concat(s[i.BUILD],"?")+")?)?"),o("XRANGEPLAINLOOSE","[v=\\s]*(".concat(s[i.XRANGEIDENTIFIERLOOSE],")")+"(?:\\.(".concat(s[i.XRANGEIDENTIFIERLOOSE],")")+"(?:\\.(".concat(s[i.XRANGEIDENTIFIERLOOSE],")")+"(?:".concat(s[i.PRERELEASELOOSE],")?").concat(s[i.BUILD],"?")+")?)?"),o("XRANGE","^".concat(s[i.GTLT],"\\s*").concat(s[i.XRANGEPLAIN],"$")),o("XRANGELOOSE","^".concat(s[i.GTLT],"\\s*").concat(s[i.XRANGEPLAINLOOSE],"$")),o("COERCE","".concat("(^|[^\\d])(\\d{1,").concat(n,"})")+"(?:\\.(\\d{1,".concat(n,"}))?")+"(?:\\.(\\d{1,".concat(n,"}))?")+"(?:$|[^\\d])"),o("COERCERTL",s[i.COERCE],!0),o("LONETILDE","(?:~>?)"),o("TILDETRIM","(\\s*)".concat(s[i.LONETILDE],"\\s+"),!0),t.tildeTrimReplace="$1~",o("TILDE","^".concat(s[i.LONETILDE]).concat(s[i.XRANGEPLAIN],"$")),o("TILDELOOSE","^".concat(s[i.LONETILDE]).concat(s[i.XRANGEPLAINLOOSE],"$")),o("LONECARET","(?:\\^)"),o("CARETTRIM","(\\s*)".concat(s[i.LONECARET],"\\s+"),!0),t.caretTrimReplace="$1^",o("CARET","^".concat(s[i.LONECARET]).concat(s[i.XRANGEPLAIN],"$")),o("CARETLOOSE","^".concat(s[i.LONECARET]).concat(s[i.XRANGEPLAINLOOSE],"$")),o("COMPARATORLOOSE","^".concat(s[i.GTLT],"\\s*(").concat(s[i.LOOSEPLAIN],")$|^$")),o("COMPARATOR","^".concat(s[i.GTLT],"\\s*(").concat(s[i.FULLPLAIN],")$|^$")),o("COMPARATORTRIM","(\\s*)".concat(s[i.GTLT],"\\s*(").concat(s[i.LOOSEPLAIN],"|").concat(s[i.XRANGEPLAIN],")"),!0),t.comparatorTrimReplace="$1$2$3",o("HYPHENRANGE","^\\s*(".concat(s[i.XRANGEPLAIN],")")+"\\s+-\\s+"+"(".concat(s[i.XRANGEPLAIN],")")+"\\s*$"),o("HYPHENRANGELOOSE","^\\s*(".concat(s[i.XRANGEPLAINLOOSE],")")+"\\s+-\\s+"+"(".concat(s[i.XRANGEPLAINLOOSE],")")+"\\s*$"),o("STAR","(<|>)?=?\\s*\\*"),o("GTE0","^\\s*>=\\s*0.0.0\\s*$"),o("GTE0PRE","^\\s*>=\\s*0.0.0-0\\s*$")}));const Q=/^[0-9]+$/,Z=(e,t)=>{const n=Q.test(e),r=Q.test(t);return n&&r&&(e=+e,t=+t),e===t?0:n&&!r?-1:r&&!n?1:e<t?-1:1};var ee={compareIdentifiers:Z,rcompareIdentifiers:(e,t)=>Z(t,e)};const{MAX_LENGTH:te,MAX_SAFE_INTEGER:ne}=K,{re,t:se}=Y,{compareIdentifiers:ie}=ee;class ae{constructor(e,t){if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof ae){if(e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease)return e;e=e.version}else if("string"!=typeof e)throw new TypeError("Invalid Version: ".concat(e));if(e.length>te)throw new TypeError("version is longer than ".concat(te," characters"));J("SemVer",e,t),this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease;const n=e.trim().match(t.loose?re[se.LOOSE]:re[se.FULL]);if(!n)throw new TypeError("Invalid Version: ".concat(e));if(this.raw=e,this.major=+n[1],this.minor=+n[2],this.patch=+n[3],this.major>ne||this.major<0)throw new TypeError("Invalid major version");if(this.minor>ne||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>ne||this.patch<0)throw new TypeError("Invalid patch version");n[4]?this.prerelease=n[4].split(".").map((e=>{if(/^[0-9]+$/.test(e)){const t=+e;if(t>=0&&t<ne)return t}return e})):this.prerelease=[],this.build=n[5]?n[5].split("."):[],this.format()}format(){return this.version="".concat(this.major,".").concat(this.minor,".").concat(this.patch),this.prerelease.length&&(this.version+="-".concat(this.prerelease.join("."))),this.version}toString(){return this.version}compare(e){if(J("SemVer.compare",this.version,this.options,e),!(e instanceof ae)){if("string"==typeof e&&e===this.version)return 0;e=new ae(e,this.options)}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof ae||(e=new ae(e,this.options)),ie(this.major,e.major)||ie(this.minor,e.minor)||ie(this.patch,e.patch)}comparePre(e){if(e instanceof ae||(e=new ae(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let t=0;do{const n=this.prerelease[t],r=e.prerelease[t];if(J("prerelease compare",t,n,r),void 0===n&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===n)return-1;if(n!==r)return ie(n,r)}while(++t)}compareBuild(e){e instanceof ae||(e=new ae(e,this.options));let t=0;do{const n=this.build[t],r=e.build[t];if(J("prerelease compare",t,n,r),void 0===n&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===n)return-1;if(n!==r)return ie(n,r)}while(++t)}inc(e,t){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t),this.inc("pre",t);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t),this.inc("pre",t);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{let e=this.prerelease.length;for(;--e>=0;)"number"==typeof this.prerelease[e]&&(this.prerelease[e]++,e=-2);-1===e&&this.prerelease.push(0)}t&&(this.prerelease[0]===t?isNaN(this.prerelease[1])&&(this.prerelease=[t,0]):this.prerelease=[t,0]);break;default:throw new Error("invalid increment argument: ".concat(e))}return this.format(),this.raw=this.version,this}}var oe=ae,ue=(e,t,n)=>new oe(e,n).compare(new oe(t,n)),ce=t((function(e,t){function n(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t]}function r(){return"undefined"!=typeof WeakMap?new WeakMap:{add:n,delete:n,get:n,set:n,has:function(e){return!1}}}Object.defineProperty(t,"__esModule",{value:!0});var s=Object.prototype.hasOwnProperty,i=function(e,t){return s.call(e,t)};function a(e,t){for(var n in t)i(t,n)&&(e[n]=t[n]);return e}var o=/^[ \t]*(?:\r\n|\r|\n)/,u=/(?:\r\n|\r|\n)[ \t]*$/,c=/^(?:[\r\n]|$)/,l=/(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/,p=/^[ \t]*[\r\n][ \t\r\n]*$/;function h(e,t,n){var r=0,s=e[0].match(l);s&&(r=s[1].length);var i=new RegExp("(\\r\\n|\\r|\\n).{0,"+r+"}","g");t&&(e=e.slice(1));var a=n.newline,c=n.trimLeadingNewline,p=n.trimTrailingNewline,h="string"==typeof a,d=e.length;return e.map((function(e,t){return e=e.replace(i,"$1"),0===t&&c&&(e=e.replace(o,"")),t===d-1&&p&&(e=e.replace(u,"")),h&&(e=e.replace(/\r\n|\n|\r/g,(function(e){return a}))),e}))}function d(e,t){for(var n="",r=0,s=e.length;r<s;r++)n+=e[r],r<s-1&&(n+=t[r]);return n}function f(e){return i(e,"raw")&&i(e,"length")}var D=function e(t){var n=r(),s=r();return a((function r(i){for(var o=[],u=1;u<arguments.length;u++)o[u-1]=arguments[u];if(f(i)){var l=i,m=(o[0]===r||o[0]===D)&&p.test(l[0])&&c.test(l[1]),g=m?s:n,y=g.get(l);return y||(y=h(l,m,t),g.set(l,y)),0===o.length?y[0]:d(y,m?o.slice(1):o)}return e(a(a({},t),i||{}))}),{string:function(e){return h([e],!1,t)[0]}})}({trimLeadingNewline:!0,trimTrailingNewline:!0});t.outdent=D,t.default=D;try{e.exports=D,Object.defineProperty(D,"__esModule",{value:!0}),D.default=D,D.outdent=D}catch(e){}}));function le(){const e=F(["\n      Require either '@prettier' or '@format' to be present in the file's first docblock comment\n      in order for it to be formatted.\n    "]);return le=function(){return e},e}function pe(){const e=F(["\n      Format code starting at a given character offset.\n      The range will extend backwards to the start of the first line containing the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]);return pe=function(){return e},e}function he(){const e=F(["\n      Format code ending at a given character offset (exclusive).\n      The range will extend forwards to the end of the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]);return he=function(){return e},e}function de(){const e=F(["\n      Custom directory that contains prettier plugins in node_modules subdirectory.\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\n      Multiple values are accepted.\n    "]);return de=function(){return e},e}function fe(){const e=F(["\n          Maintain existing\n          (mixed values within one file are normalised by looking at what's used after the first line)\n        "]);return fe=function(){return e},e}function De(){const e=F(["\n      Print (to stderr) where a cursor at the given position would move to after formatting.\n      This option cannot be used with --range-start and --range-end.\n    "]);return De=function(){return e},e}const{outdent:me}=ce,ge="Config",ye="Editor",Ee="Other",Ce="Global",Ae="Special",be={cursorOffset:{since:"1.4.0",category:Ae,type:"int",default:-1,range:{start:-1,end:1/0,step:1},description:me(De()),cliCategory:ye},endOfLine:{since:"1.15.0",category:Ce,type:"choice",default:[{since:"1.15.0",value:"auto"},{since:"2.0.0",value:"lf"}],description:"Which end of line characters to apply.",choices:[{value:"lf",description:"Line Feed only (\\n), common on Linux and macOS as well as inside git repos"},{value:"crlf",description:"Carriage Return + Line Feed characters (\\r\\n), common on Windows"},{value:"cr",description:"Carriage Return character only (\\r), used very rarely"},{value:"auto",description:me(fe())}]},filepath:{since:"1.4.0",category:Ae,type:"path",description:"Specify the input filepath. This will be used to do parser inference.",cliName:"stdin-filepath",cliCategory:Ee,cliDescription:"Path to the file to pretend that stdin comes from."},insertPragma:{since:"1.8.0",category:Ae,type:"boolean",default:!1,description:"Insert @format pragma into file's first docblock comment.",cliCategory:Ee},parser:{since:"0.0.10",category:Ce,type:"choice",default:[{since:"0.0.10",value:"babylon"},{since:"1.13.0",value:void 0}],description:"Which parser to use.",exception:e=>"string"==typeof e||"function"==typeof e,choices:[{value:"flow",description:"Flow"},{value:"babel",since:"1.16.0",description:"JavaScript"},{value:"babel-flow",since:"1.16.0",description:"Flow"},{value:"babel-ts",since:"2.0.0",description:"TypeScript"},{value:"typescript",since:"1.4.0",description:"TypeScript"},{value:"espree",since:"2.2.0",description:"JavaScript"},{value:"meriyah",since:"2.2.0",description:"JavaScript"},{value:"css",since:"1.7.1",description:"CSS"},{value:"less",since:"1.7.1",description:"Less"},{value:"scss",since:"1.7.1",description:"SCSS"},{value:"json",since:"1.5.0",description:"JSON"},{value:"json5",since:"1.13.0",description:"JSON5"},{value:"json-stringify",since:"1.13.0",description:"JSON.stringify"},{value:"graphql",since:"1.5.0",description:"GraphQL"},{value:"markdown",since:"1.8.0",description:"Markdown"},{value:"mdx",since:"1.15.0",description:"MDX"},{value:"vue",since:"1.10.0",description:"Vue"},{value:"yaml",since:"1.14.0",description:"YAML"},{value:"glimmer",since:null,description:"Handlebars"},{value:"html",since:"1.15.0",description:"HTML"},{value:"angular",since:"1.15.0",description:"Angular"},{value:"lwc",since:"1.17.0",description:"Lightning Web Components"}]},plugins:{since:"1.10.0",type:"path",array:!0,default:[{value:[]}],category:Ce,description:"Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",exception:e=>"string"==typeof e||"object"==typeof e,cliName:"plugin",cliCategory:ge},pluginSearchDirs:{since:"1.13.0",type:"path",array:!0,default:[{value:[]}],category:Ce,description:me(de()),exception:e=>"string"==typeof e||"object"==typeof e,cliName:"plugin-search-dir",cliCategory:ge},printWidth:{since:"0.0.0",category:Ce,type:"int",default:80,description:"The line length where Prettier will try wrap.",range:{start:0,end:1/0,step:1}},rangeEnd:{since:"1.4.0",category:Ae,type:"int",default:1/0,range:{start:0,end:1/0,step:1},description:me(he()),cliCategory:ye},rangeStart:{since:"1.4.0",category:Ae,type:"int",default:0,range:{start:0,end:1/0,step:1},description:me(pe()),cliCategory:ye},requirePragma:{since:"1.7.0",category:Ae,type:"boolean",default:!1,description:me(le()),cliCategory:Ee},tabWidth:{type:"int",category:Ce,default:2,description:"Number of spaces per indentation level.",range:{start:0,end:1/0,step:1}},useTabs:{since:"1.0.0",category:Ce,type:"boolean",default:!1,description:"Indent with tabs instead of spaces."},embeddedLanguageFormatting:{since:"2.1.0",category:Ce,type:"choice",default:[{since:"2.1.0",value:"auto"}],description:"Control how Prettier formats quoted code embedded in the file.",choices:[{value:"auto",description:"Format embedded code if Prettier can automatically identify it."},{value:"off",description:"Never automatically format embedded code."}]}},Fe=ue,xe=(e,t,n)=>ue(e,t,n)<0,ve=(e,t,n)=>ue(e,t,n)>=0,Se="2.2.1",Te=be;var we={getSupportInfo:function({plugins:e=[],showUnreleased:t=!1,showDeprecated:n=!1,showInternal:r=!1}={}){const s=Se.split("-",1)[0],i=e.reduce(((e,t)=>e.concat(t.languages||[])),[]).filter(o),a=((e,t)=>Object.entries(e).map((([e,t])=>Object.assign({name:e},t))))(Object.assign({},...e.map((({options:e})=>e)),Te)).filter((e=>o(e)&&u(e))).sort(((e,t)=>e.name===t.name?0:e.name<t.name?-1:1)).map((function(e){return r?e:function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,["cliName","cliCategory","cliDescription"])})).map((t=>{t=Object.assign({},t),Array.isArray(t.default)&&(t.default=1===t.default.length?t.default[0].value:t.default.filter(o).sort(((e,t)=>Fe(t.since,e.since)))[0].value),Array.isArray(t.choices)&&(t.choices=t.choices.filter((e=>o(e)&&u(e))),"parser"===t.name&&function(e,t,n){const r=new Set(e.choices.map((e=>e.value)));for(const s of t)if(s.parsers)for(const t of s.parsers)if(!r.has(t)){r.add(t);const i=n.find((e=>e.parsers&&e.parsers[t]));let a=s.name;i&&i.name&&(a+=" (plugin: ".concat(i.name,")")),e.choices.push({value:t,description:a})}}(t,i,e));const n=e.filter((e=>e.defaultOptions&&void 0!==e.defaultOptions[t.name])).reduce(((e,n)=>(e[n.name]=n.defaultOptions[t.name],e)),{});return Object.assign({},t,{pluginDefaults:n})}));return{languages:i,options:a};function o(e){return t||!("since"in e)||e.since&&ve(s,e.since)}function u(e){return n||!("deprecated"in e)||e.deprecated&&xe(s,e.deprecated)}}};const{getSupportInfo:Be}=we,Pe=/[^\x20-\x7F]/;function Ne(e){return(t,n,r)=>{const s=r&&r.backwards;if(!1===n)return!1;const{length:i}=t;let a=n;for(;a>=0&&a<i;){const n=t.charAt(a);if(e instanceof RegExp){if(!e.test(n))return a}else if(!e.includes(n))return a;s?a--:a++}return(-1===a||a===i)&&a}}const ke=Ne(/\s/),Ie=Ne(" \t"),Le=Ne(",; \t"),Oe=Ne(/[^\n\r]/);function _e(e,t){if(!1===t)return!1;if("/"===e.charAt(t)&&"*"===e.charAt(t+1))for(let n=t+2;n<e.length;++n)if("*"===e.charAt(n)&&"/"===e.charAt(n+1))return n+2;return t}function Me(e,t){return!1!==t&&("/"===e.charAt(t)&&"/"===e.charAt(t+1)?Oe(e,t):t)}function Re(e,t,n){const r=n&&n.backwards;if(!1===t)return!1;const s=e.charAt(t);if(r){if("\r"===e.charAt(t-1)&&"\n"===s)return t-2;if("\n"===s||"\r"===s||"\u2028"===s||"\u2029"===s)return t-1}else{if("\r"===s&&"\n"===e.charAt(t+1))return t+2;if("\n"===s||"\r"===s||"\u2028"===s||"\u2029"===s)return t+1}return t}function je(e,t,n){const r=Ie(e,(n=n||{}).backwards?t-1:t,n);return r!==Re(e,r,n)}function qe(e,t){let n=null,r=t;for(;r!==n;)n=r,r=Le(e,r),r=_e(e,r),r=Ie(e,r);return r=Me(e,r),r=Re(e,r),!1!==r&&je(e,r)}function Ue(e,t){let n=null,r=t;for(;r!==n;)n=r,r=Ie(e,r),r=_e(e,r),r=Me(e,r),r=Re(e,r);return r}function $e(e,t,n){return Ue(e,n(t))}function Ve(e,t,n){let r=0;for(let s=n=n||0;s<e.length;++s)"\t"===e[s]?r=r+t-r%t:r++;return r}function We(e,t){const n=e.slice(1,-1),r={quote:'"',regex:/"/g},s={quote:"'",regex:/'/g},i="'"===t?s:r,a=i===s?r:s;let o=i.quote;return(n.includes(i.quote)||n.includes(a.quote))&&(o=(n.match(i.regex)||[]).length>(n.match(a.regex)||[]).length?a.quote:i.quote),o}function ze(e,t,n){const r='"'===t?"'":'"',s=e.replace(/\\([\S\s])|(["'])/g,((e,s,i)=>s===r?s:i===t?"\\"+i:i||(n&&/^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(s)?s:"\\"+s)));return t+s+t}function He(e,t){(e.comments||(e.comments=[])).push(t),t.printed=!1,"JSXText"===e.type&&(t.printed=!0)}var Ge={inferParserByLanguage:function(e,t){const{languages:n}=Be({plugins:t.plugins}),r=n.find((({name:t})=>t.toLowerCase()===e))||n.find((({aliases:t})=>Array.isArray(t)&&t.includes(e)))||n.find((({extensions:t})=>Array.isArray(t)&&t.includes(".".concat(e))));return r&&r.parsers[0]},replaceEndOfLineWith:function(e,t){const n=[];for(const r of e.split("\n"))0!==n.length&&n.push(t),n.push(r);return n},getStringWidth:function(e){return e?Pe.test(e)?A(e):e.length:0},getMaxContinuousCount:function(e,t){const n=e.match(new RegExp("(".concat(u(t),")+"),"g"));return null===n?0:n.reduce(((e,n)=>Math.max(e,n.length/t.length)),0)},getMinNotPresentContinuousCount:function(e,t){const n=e.match(new RegExp("(".concat(u(t),")+"),"g"));if(null===n)return 0;const r=new Map;let s=0;for(const e of n){const n=e.length/t.length;r.set(n,!0),n>s&&(s=n)}for(let e=1;e<s;e++)if(!r.get(e))return e;return s+1},getPenultimate:e=>e[e.length-2],getLast:e=>e[e.length-1],getNextNonSpaceNonCommentCharacterIndexWithStartIndex:Ue,getNextNonSpaceNonCommentCharacterIndex:$e,getNextNonSpaceNonCommentCharacter:function(e,t,n){return e.charAt($e(e,t,n))},skip:Ne,skipWhitespace:ke,skipSpaces:Ie,skipToLineEnd:Le,skipEverythingButNewLine:Oe,skipInlineComment:_e,skipTrailingComment:Me,skipNewline:Re,isNextLineEmptyAfterIndex:qe,isNextLineEmpty:function(e,t,n){return qe(e,n(t))},isPreviousLineEmpty:function(e,t,n){let r=n(t)-1;return r=Ie(e,r,{backwards:!0}),r=Re(e,r,{backwards:!0}),r=Ie(e,r,{backwards:!0}),r!==Re(e,r,{backwards:!0})},hasNewline:je,hasNewlineInRange:function(e,t,n){for(let r=t;r<n;++r)if("\n"===e.charAt(r))return!0;return!1},hasSpaces:function(e,t,n){return Ie(e,(n=n||{}).backwards?t-1:t,n)!==t},getAlignmentSize:Ve,getIndentSize:function(e,t){const n=e.lastIndexOf("\n");return-1===n?0:Ve(e.slice(n+1).match(/^[\t ]*/)[0],t)},getPreferredQuote:We,printString:function(e,t,n){const r=e.slice(1,-1),s=!r.includes('"')&&!r.includes("'"),i="json"===t.parser?'"':t.__isInHtmlAttribute?"'":We(e,t.singleQuote?"'":'"');return n?s?i+r+i:e:ze(r,i,!("css"===t.parser||"less"===t.parser||"scss"===t.parser||t.embeddedInHtml))},printNumber:function(e){return e.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/,"$1$2$3").replace(/^([+-]?[\d.]+)e[+-]?0+$/,"$1").replace(/^([+-])?\./,"$10.").replace(/(\.\d+?)0+(?=e|$)/,"$1").replace(/\.(?=e|$)/,"")},isNodeIgnoreComment:function(e){return"prettier-ignore"===e.value.trim()},makeString:ze,addLeadingComment:function(e,t){t.leading=!0,t.trailing=!1,He(e,t)},addDanglingComment:function(e,t,n){t.leading=!1,t.trailing=!1,n&&(t.marker=n),He(e,t)},addTrailingComment:function(e,t){t.leading=!1,t.trailing=!0,He(e,t)},isFrontMatterNode:function(e){return e&&"front-matter"===e.type},getShebang:function(e){if(!e.startsWith("#!"))return"";const t=e.indexOf("\n");return-1===t?e:e.slice(0,t)}},Xe={guessEndOfLine:function(e){const t=e.indexOf("\r");return t>=0?"\n"===e.charAt(t+1)?"crlf":"cr":"lf"},convertEndOfLineToChars:function(e){switch(e){case"cr":return"\r";case"crlf":return"\r\n";default:return"\n"}},countEndOfLineChars:function(e,t){let n;if("\n"===t)n=/\n/g;else if("\r"===t)n=/\r/g;else{if("\r\n"!==t)throw new Error('Unexpected "eol" '.concat(JSON.stringify(t),"."));n=/\r\n/g}const r=e.match(n);return r?r.length:0},normalizeEndOfLine:function(e){return e.replace(/\r\n?/g,"\n")}};const{getStringWidth:Je}=Ge,{convertEndOfLineToChars:Ke}=Xe,{concat:Ye,fill:Qe,cursor:Ze}=m;let et;function tt(e,t){return rt(e,{type:"indent"},t)}function nt(e,t,n){return t===-1/0?e.root||{value:"",length:0,queue:[]}:t<0?rt(e,{type:"dedent"},n):t?"root"===t.type?Object.assign({},e,{root:e}):rt(e,{type:"string"==typeof t?"stringAlign":"numberAlign",n:t},n):e}function rt(e,t,n){const r="dedent"===t.type?e.queue.slice(0,-1):e.queue.concat(t);let s="",i=0,a=0,o=0;for(const e of r)switch(e.type){case"indent":l(),n.useTabs?u(1):c(n.tabWidth);break;case"stringAlign":l(),s+=e.n,i+=e.n.length;break;case"numberAlign":a+=1,o+=e.n;break;default:throw new Error("Unexpected type '".concat(e.type,"'"))}return p(),Object.assign({},e,{value:s,length:i,queue:r});function u(e){s+="\t".repeat(e),i+=n.tabWidth*e}function c(e){s+=" ".repeat(e),i+=e}function l(){n.useTabs?(a>0&&u(a),h()):p()}function p(){o>0&&c(o),h()}function h(){a=0,o=0}}function st(e){if(0===e.length)return 0;let t=0;for(;e.length>0&&"string"==typeof e[e.length-1]&&e[e.length-1].match(/^[\t ]*$/);)t+=e.pop().length;if(e.length&&"string"==typeof e[e.length-1]){const n=e[e.length-1].replace(/[\t ]*$/,"");t+=e[e.length-1].length-n.length,e[e.length-1]=n}return t}function it(e,t,n,r,s){let i=t.length;const a=[e],o=[];for(;n>=0;){if(0===a.length){if(0===i)return!0;a.push(t[i-1]),i--;continue}const[e,u,c]=a.pop();if("string"==typeof c)o.push(c),n-=Je(c);else switch(c.type){case"concat":for(let t=c.parts.length-1;t>=0;t--)a.push([e,u,c.parts[t]]);break;case"indent":a.push([tt(e,r),u,c.contents]);break;case"align":a.push([nt(e,c.n,r),u,c.contents]);break;case"trim":n+=st(o);break;case"group":if(s&&c.break)return!1;a.push([e,c.break?1:u,c.contents]),c.id&&(et[c.id]=a[a.length-1][1]);break;case"fill":for(let t=c.parts.length-1;t>=0;t--)a.push([e,u,c.parts[t]]);break;case"if-break":{const t=c.groupId?et[c.groupId]:u;1===t&&c.breakContents&&a.push([e,u,c.breakContents]),2===t&&c.flatContents&&a.push([e,u,c.flatContents]);break}case"line":switch(u){case 2:if(!c.hard){c.soft||(o.push(" "),n-=1);break}return!0;case 1:return!0}}}return!1}var at={printDocToString:function(e,t){et={};const n=t.printWidth,r=Ke(t.endOfLine);let s=0;const i=[[{value:"",length:0,queue:[]},1,e]],a=[];let o=!1,u=[];for(;0!==i.length;){const[e,c,l]=i.pop();if("string"==typeof l){const e="\n"!==r&&l.includes("\n")?l.replace(/\n/g,r):l;a.push(e),s+=Je(e)}else switch(l.type){case"cursor":a.push(Ze.placeholder);break;case"concat":for(let t=l.parts.length-1;t>=0;t--)i.push([e,c,l.parts[t]]);break;case"indent":i.push([tt(e,t),c,l.contents]);break;case"align":i.push([nt(e,l.n,t),c,l.contents]);break;case"trim":s-=st(a);break;case"group":switch(c){case 2:if(!o){i.push([e,l.break?1:2,l.contents]);break}case 1:{o=!1;const r=[e,2,l.contents],a=n-s;if(!l.break&&it(r,i,a,t))i.push(r);else if(l.expandedStates){const n=l.expandedStates[l.expandedStates.length-1];if(l.break){i.push([e,1,n]);break}for(let r=1;r<l.expandedStates.length+1;r++){if(r>=l.expandedStates.length){i.push([e,1,n]);break}{const n=[e,2,l.expandedStates[r]];if(it(n,i,a,t)){i.push(n);break}}}}else i.push([e,1,l.contents]);break}}l.id&&(et[l.id]=i[i.length-1][1]);break;case"fill":{const r=n-s,{parts:a}=l;if(0===a.length)break;const[o,u]=a,p=[e,2,o],h=[e,1,o],d=it(p,[],r,t,!0);if(1===a.length){d?i.push(p):i.push(h);break}const f=[e,2,u],D=[e,1,u];if(2===a.length){d?(i.push(f),i.push(p)):(i.push(D),i.push(h));break}a.splice(0,2);const m=[e,c,Qe(a)],g=a[0];it([e,2,Ye([o,u,g])],[],r,t,!0)?(i.push(m),i.push(f),i.push(p)):d?(i.push(m),i.push(D),i.push(p)):(i.push(m),i.push(D),i.push(h));break}case"if-break":{const t=l.groupId?et[l.groupId]:c;1===t&&l.breakContents&&i.push([e,c,l.breakContents]),2===t&&l.flatContents&&i.push([e,c,l.flatContents]);break}case"line-suffix":u.push([e,c,l.contents]);break;case"line-suffix-boundary":u.length>0&&i.push([e,c,{type:"line",hard:!0}]);break;case"line":switch(c){case 2:if(!l.hard){l.soft||(a.push(" "),s+=1);break}o=!0;case 1:if(u.length){i.push([e,c,l]),i.push(...u.reverse()),u=[];break}l.literal?e.root?(a.push(r,e.root.value),s=e.root.length):(a.push(r),s=0):(s-=st(a),a.push(r+e.value),s=e.length)}}0===i.length&&u.length&&(i.push(...u.reverse()),u=[])}const c=a.indexOf(Ze.placeholder);if(-1!==c){const e=a.indexOf(Ze.placeholder,c+1),t=a.slice(0,c).join(""),n=a.slice(c+1,e).join("");return{formatted:t+n+a.slice(e+1).join(""),cursorNodeStart:t.length,cursorNodeText:n}}return{formatted:a.join("")}}};const{literalline:ot,concat:ut}=m,ct={};function lt(e,t,n,r){const s=[e];for(;0!==s.length;){const e=s.pop();if(e!==ct){if(n&&s.push(e,ct),!t||!1!==t(e))if("concat"===e.type||"fill"===e.type)for(let t=e.parts.length-1;t>=0;--t)s.push(e.parts[t]);else if("if-break"===e.type)e.flatContents&&s.push(e.flatContents),e.breakContents&&s.push(e.breakContents);else if("group"===e.type&&e.expandedStates)if(r)for(let t=e.expandedStates.length-1;t>=0;--t)s.push(e.expandedStates[t]);else s.push(e.contents);else e.contents&&s.push(e.contents)}else n(s.pop())}}function pt(e,t){if("concat"===e.type||"fill"===e.type){const n=e.parts.map((e=>pt(e,t)));return t(Object.assign({},e,{parts:n}))}if("if-break"===e.type){const n=e.breakContents&&pt(e.breakContents,t),r=e.flatContents&&pt(e.flatContents,t);return t(Object.assign({},e,{breakContents:n,flatContents:r}))}if(e.contents){const n=pt(e.contents,t);return t(Object.assign({},e,{contents:n}))}return t(e)}function ht(e,t,n){let r=n,s=!1;return lt(e,(function(e){const n=t(e);if(void 0!==n&&(s=!0,r=n),s)return!1})),r}function dt(e){return"string"!=typeof e&&("line"===e.type||void 0)}function ft(e){return!("group"!==e.type||!e.break)||!("line"!==e.type||!e.hard)||"break-parent"===e.type||void 0}function Dt(e){if(e.length>0){const t=e[e.length-1];t.expandedStates||(t.break=!0)}return null}function mt(e){return"line"!==e.type||e.hard?"if-break"===e.type?e.flatContents||"":e:e.soft?"":" "}function gt(e){const t=[],n=e.filter(Boolean);for(;0!==n.length;){const e=n.shift();e&&("concat"!==e.type?0===t.length||"string"!=typeof t[t.length-1]||"string"!=typeof e?t.push(e):t[t.length-1]+=e:n.unshift(...e.parts))}return t}function yt(e){if("concat"===e.type){const t=[];for(let n=0;n<e.parts.length;++n){const r=e.parts[n];if("string"!=typeof r&&"concat"===r.type)t.push(...yt(r).parts);else{const e=yt(r);""!==e&&t.push(e)}}return Object.assign({},e,{parts:t})}return"if-break"===e.type?Object.assign({},e,{breakContents:null!=e.breakContents?yt(e.breakContents):null,flatContents:null!=e.flatContents?yt(e.flatContents):null}):"group"===e.type?Object.assign({},e,{contents:yt(e.contents),expandedStates:e.expandedStates?e.expandedStates.map(yt):e.expandedStates}):e.contents?Object.assign({},e,{contents:yt(e.contents)}):e}function Et(e){if("string"==typeof e)return JSON.stringify(e);if("line"===e.type)return e.literal?"literalline":e.hard?"hardline":e.soft?"softline":"line";if("break-parent"===e.type)return"breakParent";if("trim"===e.type)return"trim";if("concat"===e.type)return"["+e.parts.map(Et).join(", ")+"]";if("indent"===e.type)return"indent("+Et(e.contents)+")";if("align"===e.type)return e.n===-1/0?"dedentToRoot("+Et(e.contents)+")":e.n<0?"dedent("+Et(e.contents)+")":"root"===e.n.type?"markAsRoot("+Et(e.contents)+")":"align("+JSON.stringify(e.n)+", "+Et(e.contents)+")";if("if-break"===e.type)return"ifBreak("+Et(e.breakContents)+(e.flatContents?", "+Et(e.flatContents):"")+")";if("group"===e.type)return e.expandedStates?"conditionalGroup(["+e.expandedStates.map(Et).join(",")+"])":(e.break?"wrappedGroup":"group")+"("+Et(e.contents)+")";if("fill"===e.type)return"fill("+e.parts.map(Et).join(", ")+")";if("line-suffix"===e.type)return"lineSuffix("+Et(e.contents)+")";if("line-suffix-boundary"===e.type)return"lineSuffixBoundary";throw new Error("Unknown doc type "+e.type)}var Ct={builders:m,printer:at,utils:{isEmpty:function(e){return"string"==typeof e&&0===e.length},willBreak:function(e){return ht(e,ft,!1)},isLineNext:function(e){return ht(e,dt,!1)},traverseDoc:lt,findInDoc:ht,mapDoc:pt,propagateBreaks:function(e){const t=new Set,n=[];lt(e,(function(e){if("break-parent"===e.type&&Dt(n),"group"===e.type){if(n.push(e),t.has(e))return!1;t.add(e)}}),(function(e){"group"===e.type&&n.pop().break&&Dt(n)}),!0)},removeLines:function(e){return pt(e,mt)},stripTrailingHardline:function e(t,n=!1){if("concat"===t.type&&0!==t.parts.length){const r=n?function(e){let t,{parts:n}=e;for(let r=e.parts.length;r>0&&!t;r--)t=n[r-1];return"group"===t.type&&(n=t.contents.parts),n}(t):t.parts,s=r[r.length-1];if("concat"===s.type)return 2===s.parts.length&&s.parts[0].hard&&"break-parent"===s.parts[1].type?{type:"concat",parts:r.slice(0,-1)}:{type:"concat",parts:t.parts.slice(0,-1).concat(e(s))}}return t},normalizeParts:gt,normalizeDoc:function(e){return pt(e,(e=>e.parts?Object.assign({},e,{parts:gt(e.parts)}):e))},replaceNewlinesWithLiterallines:function(e){return pt(e,(e=>"string"==typeof e&&e.includes("\n")?ut(e.split(/(\n)/g).map(((e,t)=>t%2==0?e:ot))):e))}},debug:{printDocToDebug:e=>Et(yt(e))}};const{builders:{hardline:At,concat:bt,markAsRoot:Ft}}=Ct,xt={"---":"yaml","+++":"toml"};var vt={parse:function(e){const t=Object.keys(xt).map(u).join("|"),n=e.match(new RegExp("^(".concat(t,")([^\\n]*)\\n(?:([\\s\\S]*?)\\n)?\\1[^\\n\\S]*(\\n|$)")));if(null===n)return{frontMatter:null,content:e};const[r,s,i,a]=n;let o=xt[s];return"toml"!==o&&i&&i.trim()&&(o=i.trim()),{frontMatter:{type:"front-matter",lang:o,value:a,raw:r.replace(/\n$/,"")},content:r.replace(/[^\n]/g," ")+e.slice(r.length)}},print:function(e,t){if("yaml"===e.lang){const n=e.value.trim(),r=n?t(n,{parser:"yaml"},{stripTrailingHardline:!0}):"";return Ft(bt(["---",At,r,r?At:"","---"]))}}};const{inferParserByLanguage:St,isFrontMatterNode:Tt}=Ge,{CSS_DISPLAY_TAGS:wt,CSS_DISPLAY_DEFAULT:Bt,CSS_WHITE_SPACE_TAGS:Pt,CSS_WHITE_SPACE_DEFAULT:Nt}={CSS_DISPLAY_TAGS:{area:"none",base:"none",basefont:"none",datalist:"none",head:"none",link:"none",meta:"none",noembed:"none",noframes:"none",param:"block",rp:"none",script:"block",source:"block",style:"none",template:"inline",track:"block",title:"none",html:"block",body:"block",address:"block",blockquote:"block",center:"block",div:"block",figure:"block",figcaption:"block",footer:"block",form:"block",header:"block",hr:"block",legend:"block",listing:"block",main:"block",p:"block",plaintext:"block",pre:"block",xmp:"block",slot:"contents",ruby:"ruby",rt:"ruby-text",article:"block",aside:"block",h1:"block",h2:"block",h3:"block",h4:"block",h5:"block",h6:"block",hgroup:"block",nav:"block",section:"block",dir:"block",dd:"block",dl:"block",dt:"block",ol:"block",ul:"block",li:"list-item",table:"table",caption:"table-caption",colgroup:"table-column-group",col:"table-column",thead:"table-header-group",tbody:"table-row-group",tfoot:"table-footer-group",tr:"table-row",td:"table-cell",th:"table-cell",fieldset:"block",button:"inline-block",details:"block",summary:"block",dialog:"block",meter:"inline-block",progress:"inline-block",object:"inline-block",video:"inline-block",audio:"inline-block",select:"inline-block",option:"block",optgroup:"block"},CSS_DISPLAY_DEFAULT:"inline",CSS_WHITE_SPACE_TAGS:{listing:"pre",plaintext:"pre",pre:"pre",xmp:"pre",nobr:"nowrap",table:"initial",textarea:"pre-wrap"},CSS_WHITE_SPACE_DEFAULT:"normal"},kt=_t(["a","abbr","acronym","address","applet","area","article","aside","audio","b","base","basefont","bdi","bdo","bgsound","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","command","content","data","datalist","dd","del","details","dfn","dialog","dir","div","dl","dt","element","em","embed","fieldset","figcaption","figure","font","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","image","img","input","ins","isindex","kbd","keygen","label","legend","li","link","listing","main","map","mark","marquee","math","menu","menuitem","meta","meter","multicol","nav","nextid","nobr","noembed","noframes","noscript","object","ol","optgroup","option","output","p","param","picture","plaintext","pre","progress","q","rb","rbc","rp","rt","rtc","ruby","s","samp","script","section","select","shadow","slot","small","source","spacer","span","strike","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","tt","u","ul","var","video","wbr","xmp"]),It=function(e,t){const n=Object.create(null);for(const r of Object.keys(e))n[r]=t(e[r],r);return n}({"*":["accesskey","autocapitalize","autofocus","class","contenteditable","dir","draggable","enterkeyhint","hidden","id","inputmode","is","itemid","itemprop","itemref","itemscope","itemtype","lang","nonce","slot","spellcheck","style","tabindex","title","translate"],a:["accesskey","charset","coords","download","href","hreflang","name","ping","referrerpolicy","rel","rev","shape","tabindex","target","type"],abbr:["title"],applet:["align","alt","archive","code","codebase","height","hspace","name","object","vspace","width"],area:["accesskey","alt","coords","download","href","hreflang","nohref","ping","referrerpolicy","rel","shape","tabindex","target","type"],audio:["autoplay","controls","crossorigin","loop","muted","preload","src"],base:["href","target"],basefont:["color","face","size"],bdo:["dir"],blockquote:["cite"],body:["alink","background","bgcolor","link","text","vlink"],br:["clear"],button:["accesskey","autofocus","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","name","tabindex","type","value"],canvas:["height","width"],caption:["align"],col:["align","char","charoff","span","valign","width"],colgroup:["align","char","charoff","span","valign","width"],data:["value"],del:["cite","datetime"],details:["open"],dfn:["title"],dialog:["open"],dir:["compact"],div:["align"],dl:["compact"],embed:["height","src","type","width"],fieldset:["disabled","form","name"],font:["color","face","size"],form:["accept","accept-charset","action","autocomplete","enctype","method","name","novalidate","target"],frame:["frameborder","longdesc","marginheight","marginwidth","name","noresize","scrolling","src"],frameset:["cols","rows"],h1:["align"],h2:["align"],h3:["align"],h4:["align"],h5:["align"],h6:["align"],head:["profile"],hr:["align","noshade","size","width"],html:["manifest","version"],iframe:["align","allow","allowfullscreen","allowpaymentrequest","allowusermedia","frameborder","height","loading","longdesc","marginheight","marginwidth","name","referrerpolicy","sandbox","scrolling","src","srcdoc","width"],img:["align","alt","border","crossorigin","decoding","height","hspace","ismap","loading","longdesc","name","referrerpolicy","sizes","src","srcset","usemap","vspace","width"],input:["accept","accesskey","align","alt","autocomplete","autofocus","checked","dirname","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","height","ismap","list","max","maxlength","min","minlength","multiple","name","pattern","placeholder","readonly","required","size","src","step","tabindex","title","type","usemap","value","width"],ins:["cite","datetime"],isindex:["prompt"],label:["accesskey","for","form"],legend:["accesskey","align"],li:["type","value"],link:["as","charset","color","crossorigin","disabled","href","hreflang","imagesizes","imagesrcset","integrity","media","nonce","referrerpolicy","rel","rev","sizes","target","title","type"],map:["name"],menu:["compact"],meta:["charset","content","http-equiv","name","scheme"],meter:["high","low","max","min","optimum","value"],object:["align","archive","border","classid","codebase","codetype","data","declare","form","height","hspace","name","standby","tabindex","type","typemustmatch","usemap","vspace","width"],ol:["compact","reversed","start","type"],optgroup:["disabled","label"],option:["disabled","label","selected","value"],output:["for","form","name"],p:["align"],param:["name","type","value","valuetype"],pre:["width"],progress:["max","value"],q:["cite"],script:["async","charset","crossorigin","defer","integrity","language","nomodule","nonce","referrerpolicy","src","type"],select:["autocomplete","autofocus","disabled","form","multiple","name","required","size","tabindex"],slot:["name"],source:["media","sizes","src","srcset","type"],style:["media","nonce","title","type"],table:["align","bgcolor","border","cellpadding","cellspacing","frame","rules","summary","width"],tbody:["align","char","charoff","valign"],td:["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"],textarea:["accesskey","autocomplete","autofocus","cols","dirname","disabled","form","maxlength","minlength","name","placeholder","readonly","required","rows","tabindex","wrap"],tfoot:["align","char","charoff","valign"],th:["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"],thead:["align","char","charoff","valign"],time:["datetime"],tr:["align","bgcolor","char","charoff","valign"],track:["default","kind","label","src","srclang"],ul:["compact","type"],video:["autoplay","controls","crossorigin","height","loop","muted","playsinline","poster","preload","src","width"]},_t),Lt=new Set(["\t","\n","\f","\r"," "]),Ot=e=>e.replace(/[\t\n\f\r ]+$/,"");function _t(e){const t=Object.create(null);for(const n of e)t[n]=!0;return t}function Mt(e,t){return!("ieConditionalComment"!==e.type||!e.lastChild||e.lastChild.isSelfClosing||e.lastChild.endSourceSpan)||"ieConditionalComment"===e.type&&!e.complete||!(!Jt(e)||!e.children.some((e=>"text"!==e.type&&"interpolation"!==e.type)))||!(!tn(e,t)||jt(e)||"interpolation"===e.type)}function Rt(e){return"attribute"!==e.type&&!!e.parent&&"number"==typeof e.index&&0!==e.index&&function(e){return"comment"===e.type&&"prettier-ignore"===e.value.trim()}(e.parent.children[e.index-1])}function jt(e){return"element"===e.type&&("script"===e.fullName||"style"===e.fullName||"svg:style"===e.fullName||Kt(e)&&("script"===e.name||"style"===e.name))}function qt(e){return Yt(e).startsWith("pre")}function Ut(e){return"element"===e.type&&0!==e.children.length&&(["html","head","ul","ol","select"].includes(e.name)||e.cssDisplay.startsWith("table")&&"table-cell"!==e.cssDisplay)}function $t(e){return Ht(e)||"element"===e.type&&"br"===e.fullName||Vt(e)}function Vt(e){return Wt(e)&&zt(e)}function Wt(e){return e.hasLeadingSpaces&&(e.prev?e.prev.sourceSpan.end.line<e.sourceSpan.start.line:"root"===e.parent.type||e.parent.startSourceSpan.end.line<e.sourceSpan.start.line)}function zt(e){return e.hasTrailingSpaces&&(e.next?e.next.sourceSpan.start.line>e.sourceSpan.end.line:"root"===e.parent.type||e.parent.endSourceSpan&&e.parent.endSourceSpan.start.line>e.sourceSpan.end.line)}function Ht(e){switch(e.type){case"ieConditionalComment":case"comment":case"directive":return!0;case"element":return["script","select"].includes(e.name)}return!1}function Gt(e){const{type:t,lang:n}=e.attrMap;return"module"===t||"text/javascript"===t||"text/babel"===t||"application/javascript"===t||"jsx"===n?"babel":"application/x-typescript"===t||"ts"===n||"tsx"===n?"typescript":"text/markdown"===t?"markdown":"text/html"===t?"html":t&&(t.endsWith("json")||t.endsWith("importmap"))?"json":"text/x-handlebars-template"===t?"glimmer":void 0}function Xt(e){return"block"===e||"list-item"===e||e.startsWith("table")}function Jt(e){return Yt(e).startsWith("pre")}function Kt(e){return"element"===e.type&&!e.hasExplicitNamespace&&!["html","svg"].includes(e.namespace)}function Yt(e){return"element"===e.type&&(!e.namespace||Kt(e))&&Pt[e.name]||Nt}const Qt=new Set(["template","style","script"]);function Zt(e,t){return en(e,t)&&!Qt.has(e.fullName)}function en(e,t){return"vue"===t.parser&&"element"===e.type&&"root"===e.parent.type&&"html"!==e.fullName.toLowerCase()}function tn(e,t){return en(e,t)&&(Zt(e,t)||e.attrMap.lang&&"html"!==e.attrMap.lang)}var nn={HTML_ELEMENT_ATTRIBUTES:It,HTML_TAGS:kt,htmlTrim:e=>(e=>e.replace(/^[\t\n\f\r ]+/,""))(Ot(e)),htmlTrimPreserveIndentation:e=>(e=>e.replace(/^[\t\f\r ]*?\n/g,""))(Ot(e)),splitByHtmlWhitespace:e=>e.split(/[\t\n\f\r ]+/),hasHtmlWhitespace:e=>/[\t\n\f\r ]/.test(e),getLeadingAndTrailingHtmlWhitespace:e=>{const[,t,n,r]=e.match(/^([\t\n\f\r ]*)([\S\s]*?)([\t\n\f\r ]*)$/);return{leadingWhitespace:t,trailingWhitespace:r,text:n}},canHaveInterpolation:function(e){return e.children&&!jt(e)},countChars:function(e,t){let n=0;for(let r=0;r<e.length;r++)e[r]===t&&n++;return n},countParents:function(e,t){let n=0;for(let r=e.stack.length-1;r>=0;r--){const s=e.stack[r];s&&"object"==typeof s&&!Array.isArray(s)&&t(s)&&n++}return n},dedentString:function(e,t=function(e){let t=1/0;for(const r of e.split("\n")){if(0===r.length)continue;if(!Lt.has(r[0]))return 0;const e=(n=r,n.match(/^[\t\n\f\r ]*/)[0]).length;r.length!==e&&e<t&&(t=e)}var n;return t===1/0?0:t}(e)){return 0===t?e:e.split("\n").map((e=>e.slice(t))).join("\n")},forceBreakChildren:Ut,forceBreakContent:function(e){return Ut(e)||"element"===e.type&&0!==e.children.length&&(["body","script","style"].includes(e.name)||e.children.some((e=>function(e){return e.children&&e.children.some((e=>"text"!==e.type))}(e))))||e.firstChild&&e.firstChild===e.lastChild&&"text"!==e.firstChild.type&&Wt(e.firstChild)&&(!e.lastChild.isTrailingSpaceSensitive||zt(e.lastChild))},forceNextEmptyLine:function(e){return Tt(e)||e.next&&e.sourceSpan.end&&e.sourceSpan.end.line+1<e.next.sourceSpan.start.line},getLastDescendant:function e(t){return t.lastChild?e(t.lastChild):t},getNodeCssStyleDisplay:function(e,t){if(e.prev&&"comment"===e.prev.type){const t=e.prev.value.match(/^\s*display:\s*([a-z]+)\s*$/);if(t)return t[1]}let n=!1;if("element"===e.type&&"svg"===e.namespace){if(!function(e,t){let n=e;for(;n;){if(t(n))return!0;n=n.parent}return!1}(e,(e=>"svg:foreignObject"===e.fullName)))return"svg"===e.name?"inline-block":"block";n=!0}switch(t.htmlWhitespaceSensitivity){case"strict":return"inline";case"ignore":return"block";default:return"vue"===t.parser&&e.parent&&"root"===e.parent.type?"block":"element"===e.type&&(!e.namespace||n||Kt(e))&&wt[e.name]||Bt}},getNodeCssStyleWhiteSpace:Yt,getPrettierIgnoreAttributeCommentData:function(e){const t=e.trim().match(/^prettier-ignore-attribute(?:\s+([^]+))?$/);return!!t&&(!t[1]||t[1].split(/\s+/))},hasPrettierIgnore:Rt,inferScriptParser:function(e,t){return"script"!==e.name||e.attrMap.src?"style"===e.name?function(e){const{lang:t}=e.attrMap;return t&&"postcss"!==t&&"css"!==t?"scss"===t?"scss":"less"===t?"less":void 0:"css"}(e):t&&tn(e,t)?Gt(e)||!("src"in e.attrMap)&&St(e.attrMap.lang,t):void 0:e.attrMap.lang||e.attrMap.type?Gt(e):"babel"},isVueCustomBlock:Zt,isVueNonHtmlBlock:tn,isVueSlotAttribute:function(e){const t=e.fullName;return"#"===t.charAt(0)||"slot-scope"===t||"v-slot"===t||t.startsWith("v-slot:")},isVueSfcBindingsAttribute:function(e,t){const n=e.parent;if(!en(n,t))return!1;const r=n.fullName,s=e.fullName;return"script"===r&&"setup"===s||"style"===r&&"vars"===s},isDanglingSpaceSensitiveNode:function(e){return!(Xt(t=e.cssDisplay)||"inline-block"===t||jt(e));var t},isIndentationSensitiveNode:qt,isLeadingSpaceSensitiveNode:function(e,t){const n=function(){return!(Tt(e)||("text"!==e.type&&"interpolation"!==e.type||!e.prev||"text"!==e.prev.type&&"interpolation"!==e.prev.type)&&(!e.parent||"none"===e.parent.cssDisplay||!Jt(e.parent)&&(!e.prev&&("root"===e.parent.type||Jt(e)&&e.parent||jt(e.parent)||Zt(e.parent,t)||(n=e.parent.cssDisplay,Xt(n)||"inline-block"===n))||e.prev&&!function(e){return!Xt(e)}(e.prev.cssDisplay))));var n}();return n&&!e.prev&&e.parent&&e.parent.tagDefinition&&e.parent.tagDefinition.ignoreFirstLf?"interpolation"===e.type:n},isPreLikeNode:Jt,isScriptLikeTag:jt,isTextLikeNode:function(e){return"text"===e.type||"comment"===e.type},isTrailingSpaceSensitiveNode:function(e,t){return!(Tt(e)||("text"!==e.type&&"interpolation"!==e.type||!e.next||"text"!==e.next.type&&"interpolation"!==e.next.type)&&(!e.parent||"none"===e.parent.cssDisplay||!Jt(e.parent)&&(!e.next&&("root"===e.parent.type||Jt(e)&&e.parent||jt(e.parent)||Zt(e.parent,t)||(n=e.parent.cssDisplay,Xt(n)||"inline-block"===n))||e.next&&!function(e){return!Xt(e)}(e.next.cssDisplay))));var n},isWhitespaceSensitiveNode:function(e){return jt(e)||"interpolation"===e.type||qt(e)},isUnknownNamespace:Kt,preferHardlineAsLeadingSpaces:function(e){return Ht(e)||e.prev&&$t(e.prev)||Vt(e)},preferHardlineAsTrailingSpaces:$t,shouldNotPrintClosingTag:function(e,t){return!e.isSelfClosing&&!e.endSourceSpan&&(Rt(e)||Mt(e.parent,t))},shouldPreserveContent:Mt,unescapeQuoteEntities:function(e){return e.replace(/&apos;/g,"'").replace(/&quot;/g,'"')}};const rn={attrs:!0,children:!0};class sn{constructor(e={}){for(const t of Object.keys(e)){const n=e[t];t in rn?this._setNodes(t,n):this[t]=n}}_setNodes(e,t){t!==this[e]&&(this[e]=function(e,t){const n=e.map((e=>e instanceof sn?e.clone():new sn(e)));let r=null,s=n[0],i=n[1]||null;for(let e=0;e<n.length;e++)on(s,{index:e,siblings:n,prev:r,next:i,parent:t}),r=s,s=i,i=n[e+2]||null;return n}(t,this),"attrs"===e&&on(this,{attrMap:this[e].reduce(((e,t)=>(e[t.fullName]=t.value,e)),Object.create(null))}))}map(e){let t=null;for(const n in rn){const r=this[n];if(r){const s=an(r,(t=>t.map(e)));t!==r&&(t||(t=new sn),t._setNodes(n,s))}}if(t){for(const e in this)e in rn||(t[e]=this[e]);const{index:e,siblings:n,prev:r,next:s,parent:i}=this;on(t,{index:e,siblings:n,prev:r,next:s,parent:i})}return e(t||this)}clone(e){return new sn(e?Object.assign({},this,e):this)}get firstChild(){return this.children&&0!==this.children.length?this.children[0]:null}get lastChild(){return this.children&&0!==this.children.length?this.children[this.children.length-1]:null}get rawName(){return this.hasExplicitNamespace?this.fullName:this.name}get fullName(){return this.namespace?this.namespace+":"+this.name:this.name}}function an(e,t){const n=e.map(t);return n.some(((t,n)=>t!==e[n]))?n:e}function on(e,t){const n=Object.keys(t).reduce(((e,n)=>(e[n]={value:t[n],enumerable:!1},e)),{});Object.defineProperties(e,n)}var un={Node:sn};const{ParseSourceSpan:cn}=o,ln=[[/^(\[if([^\]]*?)]>)([\S\s]*?)<!\s*\[endif]$/,function(e,t,n){const[,r,s,i]=n,a="\x3c!--".length+r.length,o=e.sourceSpan.start.moveBy(a),u=o.moveBy(i.length),[c,l]=(()=>{try{return[!0,t(i,o).children]}catch(e){return[!1,[{type:"text",value:i,sourceSpan:new cn(o,u)}]]}})();return{type:"ieConditionalComment",complete:c,children:l,condition:s.trim().replace(/\s+/g," "),sourceSpan:e.sourceSpan,startSourceSpan:new cn(e.sourceSpan.start,o),endSourceSpan:new cn(u,e.sourceSpan.end)}}],[/^\[if([^\]]*?)]><!$/,function(e,t,n){const[,r]=n;return{type:"ieConditionalStartComment",condition:r.trim().replace(/\s+/g," "),sourceSpan:e.sourceSpan}}],[/^<!\s*\[endif]$/,function(e){return{type:"ieConditionalEndComment",sourceSpan:e.sourceSpan}}]];var pn={parseIeConditionalComment:function(e,t){if(e.value){let n;for(const[r,s]of ln)if(n=e.value.match(r))return s(e,t,n)}return null}},hn=t((function(e,t){function n(e){if(":"!=e[0])return[null,e];const t=e.indexOf(":",1);if(-1==t)throw new Error('Unsupported format "'.concat(e,'" expecting ":namespace:name"'));return[e.slice(1,t),e.slice(t+1)]}Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.RAW_TEXT=0]="RAW_TEXT",e[e.ESCAPABLE_RAW_TEXT=1]="ESCAPABLE_RAW_TEXT",e[e.PARSABLE_DATA=2]="PARSABLE_DATA"}(t.TagContentType||(t.TagContentType={})),t.splitNsName=n,t.isNgContainer=function(e){return"ng-container"===n(e)[1]},t.isNgContent=function(e){return"ng-content"===n(e)[1]},t.isNgTemplate=function(e){return"ng-template"===n(e)[1]},t.getNsPrefix=function(e){return null===e?null:n(e)[0]},t.mergeNsAndName=function(e,t){return e?":".concat(e,":").concat(t):t},t.NAMED_ENTITIES={Aacute:"Á",aacute:"á",Abreve:"Ă",abreve:"ă",ac:"∾",acd:"∿",acE:"∾̳",Acirc:"Â",acirc:"â",acute:"´",Acy:"А",acy:"а",AElig:"Æ",aelig:"æ",af:"⁡",Afr:"𝔄",afr:"𝔞",Agrave:"À",agrave:"à",alefsym:"ℵ",aleph:"ℵ",Alpha:"Α",alpha:"α",Amacr:"Ā",amacr:"ā",amalg:"⨿",AMP:"&",amp:"&",And:"⩓",and:"∧",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",Aogon:"Ą",aogon:"ą",Aopf:"𝔸",aopf:"𝕒",ap:"≈",apacir:"⩯",apE:"⩰",ape:"≊",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",Aring:"Å",aring:"å",Ascr:"𝒜",ascr:"𝒶",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",Atilde:"Ã",atilde:"ã",Auml:"Ä",auml:"ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",Barwed:"⌆",barwed:"⌅",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",Bcy:"Б",bcy:"б",bdquo:"„",becaus:"∵",Because:"∵",because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",Beta:"Β",beta:"β",beth:"ℶ",between:"≬",Bfr:"𝔅",bfr:"𝔟",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bNot:"⫭",bnot:"⌐",Bopf:"𝔹",bopf:"𝕓",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxDL:"╗",boxDl:"╖",boxdL:"╕",boxdl:"┐",boxDR:"╔",boxDr:"╓",boxdR:"╒",boxdr:"┌",boxH:"═",boxh:"─",boxHD:"╦",boxHd:"╤",boxhD:"╥",boxhd:"┬",boxHU:"╩",boxHu:"╧",boxhU:"╨",boxhu:"┴",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxUL:"╝",boxUl:"╜",boxuL:"╛",boxul:"┘",boxUR:"╚",boxUr:"╙",boxuR:"╘",boxur:"└",boxV:"║",boxv:"│",boxVH:"╬",boxVh:"╫",boxvH:"╪",boxvh:"┼",boxVL:"╣",boxVl:"╢",boxvL:"╡",boxvl:"┤",boxVR:"╠",boxVr:"╟",boxvR:"╞",boxvr:"├",bprime:"‵",Breve:"˘",breve:"˘",brvbar:"¦",Bscr:"ℬ",bscr:"𝒷",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpE:"⪮",bumpe:"≏",Bumpeq:"≎",bumpeq:"≏",Cacute:"Ć",cacute:"ć",Cap:"⋒",cap:"∩",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",Ccaron:"Č",ccaron:"č",Ccedil:"Ç",ccedil:"ç",Ccirc:"Ĉ",ccirc:"ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",Cdot:"Ċ",cdot:"ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",CenterDot:"·",centerdot:"·",Cfr:"ℭ",cfr:"𝔠",CHcy:"Ч",chcy:"ч",check:"✓",checkmark:"✓",Chi:"Χ",chi:"χ",cir:"○",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cirE:"⧃",cire:"≗",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",Colon:"∷",colon:":",Colone:"⩴",colone:"≔",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",Conint:"∯",conint:"∮",ContourIntegral:"∮",Copf:"ℂ",copf:"𝕔",coprod:"∐",Coproduct:"∐",COPY:"©",copy:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",Cross:"⨯",cross:"✗",Cscr:"𝒞",cscr:"𝒸",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",Cup:"⋓",cup:"∪",cupbrcap:"⩈",CupCap:"≍",cupcap:"⩆",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",Dagger:"‡",dagger:"†",daleth:"ℸ",Darr:"↡",dArr:"⇓",darr:"↓",dash:"‐",Dashv:"⫤",dashv:"⊣",dbkarow:"⤏",dblac:"˝",Dcaron:"Ď",dcaron:"ď",Dcy:"Д",dcy:"д",DD:"ⅅ",dd:"ⅆ",ddagger:"‡",ddarr:"⇊",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",Delta:"Δ",delta:"δ",demptyv:"⦱",dfisht:"⥿",Dfr:"𝔇",dfr:"𝔡",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",Diamond:"⋄",diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",DJcy:"Ђ",djcy:"ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",Dopf:"𝔻",dopf:"𝕕",Dot:"¨",dot:"˙",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",DownArrow:"↓",Downarrow:"⇓",downarrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",Dscr:"𝒟",dscr:"𝒹",DScy:"Ѕ",dscy:"ѕ",dsol:"⧶",Dstrok:"Đ",dstrok:"đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",DZcy:"Џ",dzcy:"џ",dzigrarr:"⟿",Eacute:"É",eacute:"é",easter:"⩮",Ecaron:"Ě",ecaron:"ě",ecir:"≖",Ecirc:"Ê",ecirc:"ê",ecolon:"≕",Ecy:"Э",ecy:"э",eDDot:"⩷",Edot:"Ė",eDot:"≑",edot:"ė",ee:"ⅇ",efDot:"≒",Efr:"𝔈",efr:"𝔢",eg:"⪚",Egrave:"È",egrave:"è",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",Emacr:"Ē",emacr:"ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp:" ",emsp13:" ",emsp14:" ",ENG:"Ŋ",eng:"ŋ",ensp:" ",Eogon:"Ę",eogon:"ę",Eopf:"𝔼",eopf:"𝕖",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",Epsilon:"Ε",epsilon:"ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",Escr:"ℰ",escr:"ℯ",esdot:"≐",Esim:"⩳",esim:"≂",Eta:"Η",eta:"η",ETH:"Ð",eth:"ð",Euml:"Ë",euml:"ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",ExponentialE:"ⅇ",exponentiale:"ⅇ",fallingdotseq:"≒",Fcy:"Ф",fcy:"ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",Ffr:"𝔉",ffr:"𝔣",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",Fopf:"𝔽",fopf:"𝕗",ForAll:"∀",forall:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",Fscr:"ℱ",fscr:"𝒻",gacute:"ǵ",Gamma:"Γ",gamma:"γ",Gammad:"Ϝ",gammad:"ϝ",gap:"⪆",Gbreve:"Ğ",gbreve:"ğ",Gcedil:"Ģ",Gcirc:"Ĝ",gcirc:"ĝ",Gcy:"Г",gcy:"г",Gdot:"Ġ",gdot:"ġ",gE:"≧",ge:"≥",gEl:"⪌",gel:"⋛",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",Gfr:"𝔊",gfr:"𝔤",Gg:"⋙",gg:"≫",ggg:"⋙",gimel:"ℷ",GJcy:"Ѓ",gjcy:"ѓ",gl:"≷",gla:"⪥",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gnE:"≩",gne:"⪈",gneq:"⪈",gneqq:"≩",gnsim:"⋧",Gopf:"𝔾",gopf:"𝕘",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",Gscr:"𝒢",gscr:"ℊ",gsim:"≳",gsime:"⪎",gsiml:"⪐",GT:">",Gt:"≫",gt:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",HARDcy:"Ъ",hardcy:"ъ",hArr:"⇔",harr:"↔",harrcir:"⥈",harrw:"↭",Hat:"^",hbar:"ℏ",Hcirc:"Ĥ",hcirc:"ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",Hfr:"ℌ",hfr:"𝔥",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",Hopf:"ℍ",hopf:"𝕙",horbar:"―",HorizontalLine:"─",Hscr:"ℋ",hscr:"𝒽",hslash:"ℏ",Hstrok:"Ħ",hstrok:"ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",Iacute:"Í",iacute:"í",ic:"⁣",Icirc:"Î",icirc:"î",Icy:"И",icy:"и",Idot:"İ",IEcy:"Е",iecy:"е",iexcl:"¡",iff:"⇔",Ifr:"ℑ",ifr:"𝔦",Igrave:"Ì",igrave:"ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",IJlig:"Ĳ",ijlig:"ĳ",Im:"ℑ",Imacr:"Ī",imacr:"ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",Implies:"⇒",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",Int:"∬",int:"∫",intcal:"⊺",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",IOcy:"Ё",iocy:"ё",Iogon:"Į",iogon:"į",Iopf:"𝕀",iopf:"𝕚",Iota:"Ι",iota:"ι",iprod:"⨼",iquest:"¿",Iscr:"ℐ",iscr:"𝒾",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",Itilde:"Ĩ",itilde:"ĩ",Iukcy:"І",iukcy:"і",Iuml:"Ï",iuml:"ï",Jcirc:"Ĵ",jcirc:"ĵ",Jcy:"Й",jcy:"й",Jfr:"𝔍",jfr:"𝔧",jmath:"ȷ",Jopf:"𝕁",jopf:"𝕛",Jscr:"𝒥",jscr:"𝒿",Jsercy:"Ј",jsercy:"ј",Jukcy:"Є",jukcy:"є",Kappa:"Κ",kappa:"κ",kappav:"ϰ",Kcedil:"Ķ",kcedil:"ķ",Kcy:"К",kcy:"к",Kfr:"𝔎",kfr:"𝔨",kgreen:"ĸ",KHcy:"Х",khcy:"х",KJcy:"Ќ",kjcy:"ќ",Kopf:"𝕂",kopf:"𝕜",Kscr:"𝒦",kscr:"𝓀",lAarr:"⇚",Lacute:"Ĺ",lacute:"ĺ",laemptyv:"⦴",lagran:"ℒ",Lambda:"Λ",lambda:"λ",Lang:"⟪",lang:"⟨",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",Larr:"↞",lArr:"⇐",larr:"←",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",lAtail:"⤛",latail:"⤙",late:"⪭",lates:"⪭︀",lBarr:"⤎",lbarr:"⤌",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",Lcaron:"Ľ",lcaron:"ľ",Lcedil:"Ļ",lcedil:"ļ",lceil:"⌈",lcub:"{",Lcy:"Л",lcy:"л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",lE:"≦",le:"≤",LeftAngleBracket:"⟨",LeftArrow:"←",Leftarrow:"⇐",leftarrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",LeftRightArrow:"↔",Leftrightarrow:"⇔",leftrightarrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",lEg:"⪋",leg:"⋚",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",Lfr:"𝔏",lfr:"𝔩",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",LJcy:"Љ",ljcy:"љ",Ll:"⋘",ll:"≪",llarr:"⇇",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",Lmidot:"Ŀ",lmidot:"ŀ",lmoust:"⎰",lmoustache:"⎰",lnap:"⪉",lnapprox:"⪉",lnE:"≨",lne:"⪇",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",LongLeftArrow:"⟵",Longleftarrow:"⟸",longleftarrow:"⟵",LongLeftRightArrow:"⟷",Longleftrightarrow:"⟺",longleftrightarrow:"⟷",longmapsto:"⟼",LongRightArrow:"⟶",Longrightarrow:"⟹",longrightarrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",Lopf:"𝕃",lopf:"𝕝",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",Lscr:"ℒ",lscr:"𝓁",Lsh:"↰",lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",Lstrok:"Ł",lstrok:"ł",LT:"<",Lt:"≪",lt:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",Map:"⤅",map:"↦",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",Mcy:"М",mcy:"м",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",Mfr:"𝔐",mfr:"𝔪",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",Mopf:"𝕄",mopf:"𝕞",mp:"∓",Mscr:"ℳ",mscr:"𝓂",mstpos:"∾",Mu:"Μ",mu:"μ",multimap:"⊸",mumap:"⊸",nabla:"∇",Nacute:"Ń",nacute:"ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",Ncaron:"Ň",ncaron:"ň",Ncedil:"Ņ",ncedil:"ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",Ncy:"Н",ncy:"н",ndash:"–",ne:"≠",nearhk:"⤤",neArr:"⇗",nearr:"↗",nearrow:"↗",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",nexist:"∄",nexists:"∄",Nfr:"𝔑",nfr:"𝔫",ngE:"≧̸",nge:"≱",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",nGt:"≫⃒",ngt:"≯",ngtr:"≯",nGtv:"≫̸",nhArr:"⇎",nharr:"↮",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",NJcy:"Њ",njcy:"њ",nlArr:"⇍",nlarr:"↚",nldr:"‥",nlE:"≦̸",nle:"≰",nLeftarrow:"⇍",nleftarrow:"↚",nLeftrightarrow:"⇎",nleftrightarrow:"↮",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nLt:"≪⃒",nlt:"≮",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",Nopf:"ℕ",nopf:"𝕟",Not:"⫬",not:"¬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrArr:"⇏",nrarr:"↛",nrarrc:"⤳̸",nrarrw:"↝̸",nRightarrow:"⇏",nrightarrow:"↛",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",Nscr:"𝒩",nscr:"𝓃",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsubE:"⫅̸",nsube:"⊈",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupE:"⫆̸",nsupe:"⊉",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",Ntilde:"Ñ",ntilde:"ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",Nu:"Ν",nu:"ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nVDash:"⊯",nVdash:"⊮",nvDash:"⊭",nvdash:"⊬",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwArr:"⇖",nwarr:"↖",nwarrow:"↖",nwnear:"⤧",Oacute:"Ó",oacute:"ó",oast:"⊛",ocir:"⊚",Ocirc:"Ô",ocirc:"ô",Ocy:"О",ocy:"о",odash:"⊝",Odblac:"Ő",odblac:"ő",odiv:"⨸",odot:"⊙",odsold:"⦼",OElig:"Œ",oelig:"œ",ofcir:"⦿",Ofr:"𝔒",ofr:"𝔬",ogon:"˛",Ograve:"Ò",ograve:"ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",Omacr:"Ō",omacr:"ō",Omega:"Ω",omega:"ω",Omicron:"Ο",omicron:"ο",omid:"⦶",ominus:"⊖",Oopf:"𝕆",oopf:"𝕠",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",Or:"⩔",or:"∨",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",Oscr:"𝒪",oscr:"ℴ",Oslash:"Ø",oslash:"ø",osol:"⊘",Otilde:"Õ",otilde:"õ",Otimes:"⨷",otimes:"⊗",otimesas:"⨶",Ouml:"Ö",ouml:"ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",Pcy:"П",pcy:"п",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",Pfr:"𝔓",pfr:"𝔭",Phi:"Φ",phi:"φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",Pi:"Π",pi:"π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",Popf:"ℙ",popf:"𝕡",pound:"£",Pr:"⪻",pr:"≺",prap:"⪷",prcue:"≼",prE:"⪳",pre:"⪯",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",Prime:"″",prime:"′",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportion:"∷",Proportional:"∝",propto:"∝",prsim:"≾",prurel:"⊰",Pscr:"𝒫",pscr:"𝓅",Psi:"Ψ",psi:"ψ",puncsp:" ",Qfr:"𝔔",qfr:"𝔮",qint:"⨌",Qopf:"ℚ",qopf:"𝕢",qprime:"⁗",Qscr:"𝒬",qscr:"𝓆",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",QUOT:'"',quot:'"',rAarr:"⇛",race:"∽̱",Racute:"Ŕ",racute:"ŕ",radic:"√",raemptyv:"⦳",Rang:"⟫",rang:"⟩",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",Rarr:"↠",rArr:"⇒",rarr:"→",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",Rarrtl:"⤖",rarrtl:"↣",rarrw:"↝",rAtail:"⤜",ratail:"⤚",ratio:"∶",rationals:"ℚ",RBarr:"⤐",rBarr:"⤏",rbarr:"⤍",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",Rcaron:"Ř",rcaron:"ř",Rcedil:"Ŗ",rcedil:"ŗ",rceil:"⌉",rcub:"}",Rcy:"Р",rcy:"р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",Re:"ℜ",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",REG:"®",reg:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",Rfr:"ℜ",rfr:"𝔯",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",Rho:"Ρ",rho:"ρ",rhov:"ϱ",RightAngleBracket:"⟩",RightArrow:"→",Rightarrow:"⇒",rightarrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",Ropf:"ℝ",ropf:"𝕣",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",Rscr:"ℛ",rscr:"𝓇",Rsh:"↱",rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",Sacute:"Ś",sacute:"ś",sbquo:"‚",Sc:"⪼",sc:"≻",scap:"⪸",Scaron:"Š",scaron:"š",sccue:"≽",scE:"⪴",sce:"⪰",Scedil:"Ş",scedil:"ş",Scirc:"Ŝ",scirc:"ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",Scy:"С",scy:"с",sdot:"⋅",sdotb:"⊡",sdote:"⩦",searhk:"⤥",seArr:"⇘",searr:"↘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",Sfr:"𝔖",sfr:"𝔰",sfrown:"⌢",sharp:"♯",SHCHcy:"Щ",shchcy:"щ",SHcy:"Ш",shcy:"ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",Sigma:"Σ",sigma:"σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",SOFTcy:"Ь",softcy:"ь",sol:"/",solb:"⧄",solbar:"⌿",Sopf:"𝕊",sopf:"𝕤",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",Square:"□",square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squf:"▪",srarr:"→",Sscr:"𝒮",sscr:"𝓈",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",Star:"⋆",star:"☆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",Sub:"⋐",sub:"⊂",subdot:"⪽",subE:"⫅",sube:"⊆",subedot:"⫃",submult:"⫁",subnE:"⫋",subne:"⊊",subplus:"⪿",subrarr:"⥹",Subset:"⋐",subset:"⊂",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",Sum:"∑",sum:"∑",sung:"♪",Sup:"⋑",sup:"⊃",sup1:"¹",sup2:"²",sup3:"³",supdot:"⪾",supdsub:"⫘",supE:"⫆",supe:"⊇",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supnE:"⫌",supne:"⊋",supplus:"⫀",Supset:"⋑",supset:"⊃",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swArr:"⇙",swarr:"↙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\t",target:"⌖",Tau:"Τ",tau:"τ",tbrk:"⎴",Tcaron:"Ť",tcaron:"ť",Tcedil:"Ţ",tcedil:"ţ",Tcy:"Т",tcy:"т",tdot:"⃛",telrec:"⌕",Tfr:"𝔗",tfr:"𝔱",there4:"∴",Therefore:"∴",therefore:"∴",Theta:"Θ",theta:"θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",thinsp:" ",ThinSpace:" ",thkap:"≈",thksim:"∼",THORN:"Þ",thorn:"þ",Tilde:"∼",tilde:"˜",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",Topf:"𝕋",topf:"𝕥",topfork:"⫚",tosa:"⤩",tprime:"‴",TRADE:"™",trade:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",Tscr:"𝒯",tscr:"𝓉",TScy:"Ц",tscy:"ц",TSHcy:"Ћ",tshcy:"ћ",Tstrok:"Ŧ",tstrok:"ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",Uacute:"Ú",uacute:"ú",Uarr:"↟",uArr:"⇑",uarr:"↑",Uarrocir:"⥉",Ubrcy:"Ў",ubrcy:"ў",Ubreve:"Ŭ",ubreve:"ŭ",Ucirc:"Û",ucirc:"û",Ucy:"У",ucy:"у",udarr:"⇅",Udblac:"Ű",udblac:"ű",udhar:"⥮",ufisht:"⥾",Ufr:"𝔘",ufr:"𝔲",Ugrave:"Ù",ugrave:"ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",Umacr:"Ū",umacr:"ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",Uogon:"Ų",uogon:"ų",Uopf:"𝕌",uopf:"𝕦",UpArrow:"↑",Uparrow:"⇑",uparrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",UpDownArrow:"↕",Updownarrow:"⇕",updownarrow:"↕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",Upsi:"ϒ",upsi:"υ",upsih:"ϒ",Upsilon:"Υ",upsilon:"υ",UpTee:"⊥",UpTeeArrow:"↥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",Uring:"Ů",uring:"ů",urtri:"◹",Uscr:"𝒰",uscr:"𝓊",utdot:"⋰",Utilde:"Ũ",utilde:"ũ",utri:"▵",utrif:"▴",uuarr:"⇈",Uuml:"Ü",uuml:"ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",vArr:"⇕",varr:"↕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",Vbar:"⫫",vBar:"⫨",vBarv:"⫩",Vcy:"В",vcy:"в",VDash:"⊫",Vdash:"⊩",vDash:"⊨",vdash:"⊢",Vdashl:"⫦",Vee:"⋁",vee:"∨",veebar:"⊻",veeeq:"≚",vellip:"⋮",Verbar:"‖",verbar:"|",Vert:"‖",vert:"|",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",Vfr:"𝔙",vfr:"𝔳",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",Vopf:"𝕍",vopf:"𝕧",vprop:"∝",vrtri:"⊳",Vscr:"𝒱",vscr:"𝓋",vsubnE:"⫋︀",vsubne:"⊊︀",vsupnE:"⫌︀",vsupne:"⊋︀",Vvdash:"⊪",vzigzag:"⦚",Wcirc:"Ŵ",wcirc:"ŵ",wedbar:"⩟",Wedge:"⋀",wedge:"∧",wedgeq:"≙",weierp:"℘",Wfr:"𝔚",wfr:"𝔴",Wopf:"𝕎",wopf:"𝕨",wp:"℘",wr:"≀",wreath:"≀",Wscr:"𝒲",wscr:"𝓌",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",Xfr:"𝔛",xfr:"𝔵",xhArr:"⟺",xharr:"⟷",Xi:"Ξ",xi:"ξ",xlArr:"⟸",xlarr:"⟵",xmap:"⟼",xnis:"⋻",xodot:"⨀",Xopf:"𝕏",xopf:"𝕩",xoplus:"⨁",xotime:"⨂",xrArr:"⟹",xrarr:"⟶",Xscr:"𝒳",xscr:"𝓍",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",Yacute:"Ý",yacute:"ý",YAcy:"Я",yacy:"я",Ycirc:"Ŷ",ycirc:"ŷ",Ycy:"Ы",ycy:"ы",yen:"¥",Yfr:"𝔜",yfr:"𝔶",YIcy:"Ї",yicy:"ї",Yopf:"𝕐",yopf:"𝕪",Yscr:"𝒴",yscr:"𝓎",YUcy:"Ю",yucy:"ю",Yuml:"Ÿ",yuml:"ÿ",Zacute:"Ź",zacute:"ź",Zcaron:"Ž",zcaron:"ž",Zcy:"З",zcy:"з",Zdot:"Ż",zdot:"ż",zeetrf:"ℨ",ZeroWidthSpace:"​",Zeta:"Ζ",zeta:"ζ",Zfr:"ℨ",zfr:"𝔷",ZHcy:"Ж",zhcy:"ж",zigrarr:"⇝",Zopf:"ℤ",zopf:"𝕫",Zscr:"𝒵",zscr:"𝓏",zwj:"‍",zwnj:"‌"},t.NGSP_UNICODE="",t.NAMED_ENTITIES.ngsp=t.NGSP_UNICODE})),dn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n{constructor({closedByChildren:e,implicitNamespacePrefix:t,contentType:n=hn.TagContentType.PARSABLE_DATA,closedByParent:r=!1,isVoid:s=!1,ignoreFirstLf:i=!1}={}){this.closedByChildren={},this.closedByParent=!1,this.canSelfClose=!1,e&&e.length>0&&e.forEach((e=>this.closedByChildren[e]=!0)),this.isVoid=s,this.closedByParent=r||s,this.implicitNamespacePrefix=t||null,this.contentType=n,this.ignoreFirstLf=i}isClosedByChild(e){return this.isVoid||e.toLowerCase()in this.closedByChildren}}let r,s;t.HtmlTagDefinition=n,t.getHtmlTagDefinition=function(e){return s||(r=new n,s={base:new n({isVoid:!0}),meta:new n({isVoid:!0}),area:new n({isVoid:!0}),embed:new n({isVoid:!0}),link:new n({isVoid:!0}),img:new n({isVoid:!0}),input:new n({isVoid:!0}),param:new n({isVoid:!0}),hr:new n({isVoid:!0}),br:new n({isVoid:!0}),source:new n({isVoid:!0}),track:new n({isVoid:!0}),wbr:new n({isVoid:!0}),p:new n({closedByChildren:["address","article","aside","blockquote","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","main","nav","ol","p","pre","section","table","ul"],closedByParent:!0}),thead:new n({closedByChildren:["tbody","tfoot"]}),tbody:new n({closedByChildren:["tbody","tfoot"],closedByParent:!0}),tfoot:new n({closedByChildren:["tbody"],closedByParent:!0}),tr:new n({closedByChildren:["tr"],closedByParent:!0}),td:new n({closedByChildren:["td","th"],closedByParent:!0}),th:new n({closedByChildren:["td","th"],closedByParent:!0}),col:new n({isVoid:!0}),svg:new n({implicitNamespacePrefix:"svg"}),math:new n({implicitNamespacePrefix:"math"}),li:new n({closedByChildren:["li"],closedByParent:!0}),dt:new n({closedByChildren:["dt","dd"]}),dd:new n({closedByChildren:["dt","dd"],closedByParent:!0}),rb:new n({closedByChildren:["rb","rt","rtc","rp"],closedByParent:!0}),rt:new n({closedByChildren:["rb","rt","rtc","rp"],closedByParent:!0}),rtc:new n({closedByChildren:["rb","rtc","rp"],closedByParent:!0}),rp:new n({closedByChildren:["rb","rt","rtc","rp"],closedByParent:!0}),optgroup:new n({closedByChildren:["optgroup"],closedByParent:!0}),option:new n({closedByChildren:["option","optgroup"],closedByParent:!0}),pre:new n({ignoreFirstLf:!0}),listing:new n({ignoreFirstLf:!0}),style:new n({contentType:hn.TagContentType.RAW_TEXT}),script:new n({contentType:hn.TagContentType.RAW_TEXT}),title:new n({contentType:hn.TagContentType.ESCAPABLE_RAW_TEXT}),textarea:new n({contentType:hn.TagContentType.ESCAPABLE_RAW_TEXT,ignoreFirstLf:!0})}),s[e]||r}})),fn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.AstPath=class{constructor(e,t=-1){this.path=e,this.position=t}get empty(){return!this.path||!this.path.length}get head(){return this.path[0]}get tail(){return this.path[this.path.length-1]}parentOf(e){return e&&this.path[this.path.indexOf(e)-1]}childOf(e){return this.path[this.path.indexOf(e)+1]}first(e){for(let t=this.path.length-1;t>=0;t--){let n=this.path[t];if(n instanceof e)return n}}push(e){this.path.push(e)}pop(){return this.path.pop()}}})),Dn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.Text=class{constructor(e,t,n){this.value=e,this.sourceSpan=t,this.i18n=n}visit(e,t){return e.visitText(this,t)}},t.CDATA=class{constructor(e,t){this.value=e,this.sourceSpan=t}visit(e,t){return e.visitCdata(this,t)}},t.Expansion=class{constructor(e,t,n,r,s,i){this.switchValue=e,this.type=t,this.cases=n,this.sourceSpan=r,this.switchValueSourceSpan=s,this.i18n=i}visit(e,t){return e.visitExpansion(this,t)}},t.ExpansionCase=class{constructor(e,t,n,r,s){this.value=e,this.expression=t,this.sourceSpan=n,this.valueSourceSpan=r,this.expSourceSpan=s}visit(e,t){return e.visitExpansionCase(this,t)}},t.Attribute=class{constructor(e,t,n,r=null,s=null,i=null){this.name=e,this.value=t,this.sourceSpan=n,this.valueSpan=r,this.nameSpan=s,this.i18n=i}visit(e,t){return e.visitAttribute(this,t)}};class n{constructor(e,t,n,r,s=null,i=null,a=null,o=null){this.name=e,this.attrs=t,this.children=n,this.sourceSpan=r,this.startSourceSpan=s,this.endSourceSpan=i,this.nameSpan=a,this.i18n=o}visit(e,t){return e.visitElement(this,t)}}function r(e,t,n=null){const r=[],s=e.visit?t=>e.visit(t,n)||t.visit(e,n):t=>t.visit(e,n);return t.forEach((e=>{const t=s(e);t&&r.push(t)})),r}t.Element=n,t.Comment=class{constructor(e,t){this.value=e,this.sourceSpan=t}visit(e,t){return e.visitComment(this,t)}},t.DocType=class{constructor(e,t){this.value=e,this.sourceSpan=t}visit(e,t){return e.visitDocType(this,t)}},t.visitAll=r;class s{constructor(){}visitElement(e,t){this.visitChildren(t,(t=>{t(e.attrs),t(e.children)}))}visitAttribute(e,t){}visitText(e,t){}visitCdata(e,t){}visitComment(e,t){}visitDocType(e,t){}visitExpansion(e,t){return this.visitChildren(t,(t=>{t(e.cases)}))}visitExpansionCase(e,t){}visitChildren(e,t){let n=[],s=this;return t((function(t){t&&n.push(r(s,t,e))})),Array.prototype.concat.apply([],n)}}function i(e){const t=e.sourceSpan.start.offset;let r=e.sourceSpan.end.offset;return e instanceof n&&(e.endSourceSpan?r=e.endSourceSpan.end.offset:e.children&&e.children.length&&(r=i(e.children[e.children.length-1]).end)),{start:t,end:r}}t.RecursiveVisitor=s,t.findNode=function(e,t){const n=[];return r(new class extends s{visit(e,r){const s=i(e);if(!(s.start<=t&&t<s.end))return!0;n.push(e)}},e),new fn.AstPath(n,t)}})),mn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.assertArrayOfStrings=function(e,t){if(null!=t){if(!Array.isArray(t))throw new Error("Expected '".concat(e,"' to be an array of strings."));for(let n=0;n<t.length;n+=1)if("string"!=typeof t[n])throw new Error("Expected '".concat(e,"' to be an array of strings."))}};const n=[/^\s*$/,/[<>]/,/^[{}]$/,/&(#|[a-z])/i,/^\/\//];t.assertInterpolationSymbols=function(e,t){if(!(null==t||Array.isArray(t)&&2==t.length))throw new Error("Expected '".concat(e,"' to be an array, [start, end]."));if(null!=t){const e=t[0],r=t[1];n.forEach((t=>{if(t.test(e)||t.test(r))throw new Error("['".concat(e,"', '").concat(r,"'] contains unusable interpolation symbol."))}))}}})),gn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(e,t){this.start=e,this.end=t}static fromArray(e){return e?(mn.assertInterpolationSymbols("interpolation",e),new n(e[0],e[1])):t.DEFAULT_INTERPOLATION_CONFIG}}t.InterpolationConfig=n,t.DEFAULT_INTERPOLATION_CONFIG=new n("{{","}}")})),yn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});const n=r;var s;!function(e){e[e.TAG_OPEN_START=0]="TAG_OPEN_START",e[e.TAG_OPEN_END=1]="TAG_OPEN_END",e[e.TAG_OPEN_END_VOID=2]="TAG_OPEN_END_VOID",e[e.TAG_CLOSE=3]="TAG_CLOSE",e[e.TEXT=4]="TEXT",e[e.ESCAPABLE_RAW_TEXT=5]="ESCAPABLE_RAW_TEXT",e[e.RAW_TEXT=6]="RAW_TEXT",e[e.COMMENT_START=7]="COMMENT_START",e[e.COMMENT_END=8]="COMMENT_END",e[e.CDATA_START=9]="CDATA_START",e[e.CDATA_END=10]="CDATA_END",e[e.ATTR_NAME=11]="ATTR_NAME",e[e.ATTR_QUOTE=12]="ATTR_QUOTE",e[e.ATTR_VALUE=13]="ATTR_VALUE",e[e.DOC_TYPE_START=14]="DOC_TYPE_START",e[e.DOC_TYPE_END=15]="DOC_TYPE_END",e[e.EXPANSION_FORM_START=16]="EXPANSION_FORM_START",e[e.EXPANSION_CASE_VALUE=17]="EXPANSION_CASE_VALUE",e[e.EXPANSION_CASE_EXP_START=18]="EXPANSION_CASE_EXP_START",e[e.EXPANSION_CASE_EXP_END=19]="EXPANSION_CASE_EXP_END",e[e.EXPANSION_FORM_END=20]="EXPANSION_FORM_END",e[e.EOF=21]="EOF"}(s=t.TokenType||(t.TokenType={}));class i{constructor(e,t,n){this.type=e,this.parts=t,this.sourceSpan=n}}t.Token=i;class a extends o.ParseError{constructor(e,t,n){super(n,e),this.tokenType=t}}t.TokenError=a;class u{constructor(e,t){this.tokens=e,this.errors=t}}t.TokenizeResult=u,t.tokenize=function(e,t,n,r={}){return new d(new o.ParseSourceFile(e,t),n,r).tokenize()};const c=/\r\n?/g;function l(e){const t=e===n.$EOF?"EOF":String.fromCharCode(e);return'Unexpected character "'.concat(t,'"')}function p(e){return'Unknown entity "'.concat(e,'" - use the "&#<decimal>;" or  "&#x<hex>;" syntax')}class h{constructor(e){this.error=e}}class d{constructor(e,t,n){this._getTagContentType=t,this._currentTokenStart=null,this._currentTokenType=null,this._expansionCaseStack=[],this._inInterpolation=!1,this._fullNameStack=[],this.tokens=[],this.errors=[],this._tokenizeIcu=n.tokenizeExpansionForms||!1,this._interpolationConfig=n.interpolationConfig||gn.DEFAULT_INTERPOLATION_CONFIG,this._leadingTriviaCodePoints=n.leadingTriviaChars&&n.leadingTriviaChars.map((e=>e.codePointAt(0)||0)),this._canSelfClose=n.canSelfClose||!1,this._allowHtmComponentClosingTags=n.allowHtmComponentClosingTags||!1;const r=n.range||{endPos:e.content.length,startPos:0,startLine:0,startCol:0};this._cursor=n.escapedString?new C(e,r):new E(e,r);try{this._cursor.init()}catch(e){this.handleError(e)}}_processCarriageReturns(e){return e.replace(c,"\n")}tokenize(){for(;this._cursor.peek()!==n.$EOF;){const e=this._cursor.clone();try{if(this._attemptCharCode(n.$LT))if(this._attemptCharCode(n.$BANG))this._attemptStr("[CDATA[")?this._consumeCdata(e):this._attemptStr("--")?this._consumeComment(e):this._attemptStrCaseInsensitive("doctype")?this._consumeDocType(e):this._consumeBogusComment(e);else if(this._attemptCharCode(n.$SLASH))this._consumeTagClose(e);else{const t=this._cursor.clone();this._attemptCharCode(n.$QUESTION)?(this._cursor=t,this._consumeBogusComment(e)):this._consumeTagOpen(e)}else this._tokenizeIcu&&this._tokenizeExpansionForm()||this._consumeText()}catch(e){this.handleError(e)}}return this._beginToken(s.EOF),this._endToken([]),new u(function(e){const t=[];let n;for(let r=0;r<e.length;r++){const i=e[r];n&&n.type==s.TEXT&&i.type==s.TEXT?(n.parts[0]+=i.parts[0],n.sourceSpan.end=i.sourceSpan.end):(n=i,t.push(n))}return t}(this.tokens),this.errors)}_tokenizeExpansionForm(){if(this.isExpansionFormStart())return this._consumeExpansionFormStart(),!0;if(((e=this._cursor.peek())===n.$EQ||n.isAsciiLetter(e)||n.isDigit(e))&&this._isInExpansionForm())return this._consumeExpansionCaseStart(),!0;var e;if(this._cursor.peek()===n.$RBRACE){if(this._isInExpansionCase())return this._consumeExpansionCaseEnd(),!0;if(this._isInExpansionForm())return this._consumeExpansionFormEnd(),!0}return!1}_beginToken(e,t=this._cursor.clone()){this._currentTokenStart=t,this._currentTokenType=e}_endToken(e,t=this._cursor.clone()){if(null===this._currentTokenStart)throw new a("Programming error - attempted to end a token when there was no start to the token",this._currentTokenType,this._cursor.getSpan(t));if(null===this._currentTokenType)throw new a("Programming error - attempted to end a token which has no token type",null,this._cursor.getSpan(this._currentTokenStart));const n=new i(this._currentTokenType,e,this._cursor.getSpan(this._currentTokenStart,this._leadingTriviaCodePoints));return this.tokens.push(n),this._currentTokenStart=null,this._currentTokenType=null,n}_createError(e,t){this._isInExpansionForm()&&(e+=' (Do you have an unescaped "{" in your template? Use "{{ \'{\' }}") to escape it.)');const n=new a(e,this._currentTokenType,t);return this._currentTokenStart=null,this._currentTokenType=null,new h(n)}handleError(e){if(e instanceof A&&(e=this._createError(e.msg,this._cursor.getSpan(e.cursor))),!(e instanceof h))throw e;this.errors.push(e.error)}_attemptCharCode(e){return this._cursor.peek()===e&&(this._cursor.advance(),!0)}_attemptCharCodeCaseInsensitive(e){return t=e,y(this._cursor.peek())==y(t)&&(this._cursor.advance(),!0);var t}_requireCharCode(e){const t=this._cursor.clone();if(!this._attemptCharCode(e))throw this._createError(l(this._cursor.peek()),this._cursor.getSpan(t))}_attemptStr(e){const t=e.length;if(this._cursor.charsLeft()<t)return!1;const n=this._cursor.clone();for(let r=0;r<t;r++)if(!this._attemptCharCode(e.charCodeAt(r)))return this._cursor=n,!1;return!0}_attemptStrCaseInsensitive(e){for(let t=0;t<e.length;t++)if(!this._attemptCharCodeCaseInsensitive(e.charCodeAt(t)))return!1;return!0}_requireStr(e){const t=this._cursor.clone();if(!this._attemptStr(e))throw this._createError(l(this._cursor.peek()),this._cursor.getSpan(t))}_requireStrCaseInsensitive(e){const t=this._cursor.clone();if(!this._attemptStrCaseInsensitive(e))throw this._createError(l(this._cursor.peek()),this._cursor.getSpan(t))}_attemptCharCodeUntilFn(e){for(;!e(this._cursor.peek());)this._cursor.advance()}_requireCharCodeUntilFn(e,t){const n=this._cursor.clone();if(this._attemptCharCodeUntilFn(e),this._cursor.clone().diff(n)<t)throw this._createError(l(this._cursor.peek()),this._cursor.getSpan(n))}_attemptUntilChar(e){for(;this._cursor.peek()!==e;)this._cursor.advance()}_readChar(e){if(e&&this._cursor.peek()===n.$AMPERSAND)return this._decodeEntity();{const e=String.fromCodePoint(this._cursor.peek());return this._cursor.advance(),e}}_decodeEntity(){const e=this._cursor.clone();if(this._cursor.advance(),!this._attemptCharCode(n.$HASH)){const t=this._cursor.clone();if(this._attemptCharCodeUntilFn(g),this._cursor.peek()!=n.$SEMICOLON)return this._cursor=t,"&";const r=this._cursor.getChars(t);this._cursor.advance();const s=hn.NAMED_ENTITIES[r];if(!s)throw this._createError(p(r),this._cursor.getSpan(e));return s}{const t=this._attemptCharCode(n.$x)||this._attemptCharCode(n.$X),r=this._cursor.clone();if(this._attemptCharCodeUntilFn(m),this._cursor.peek()!=n.$SEMICOLON)throw this._createError(l(this._cursor.peek()),this._cursor.getSpan());const s=this._cursor.getChars(r);this._cursor.advance();try{const e=parseInt(s,t?16:10);return String.fromCharCode(e)}catch(t){throw this._createError(p(this._cursor.getChars(e)),this._cursor.getSpan())}}}_consumeRawText(e,t){this._beginToken(e?s.ESCAPABLE_RAW_TEXT:s.RAW_TEXT);const n=[];for(;;){const r=this._cursor.clone(),s=t();if(this._cursor=r,s)break;n.push(this._readChar(e))}return this._endToken([this._processCarriageReturns(n.join(""))])}_consumeComment(e){this._beginToken(s.COMMENT_START,e),this._endToken([]),this._consumeRawText(!1,(()=>this._attemptStr("--\x3e"))),this._beginToken(s.COMMENT_END),this._requireStr("--\x3e"),this._endToken([])}_consumeBogusComment(e){this._beginToken(s.COMMENT_START,e),this._endToken([]),this._consumeRawText(!1,(()=>this._cursor.peek()===n.$GT)),this._beginToken(s.COMMENT_END),this._cursor.advance(),this._endToken([])}_consumeCdata(e){this._beginToken(s.CDATA_START,e),this._endToken([]),this._consumeRawText(!1,(()=>this._attemptStr("]]>"))),this._beginToken(s.CDATA_END),this._requireStr("]]>"),this._endToken([])}_consumeDocType(e){this._beginToken(s.DOC_TYPE_START,e),this._endToken([]),this._consumeRawText(!1,(()=>this._cursor.peek()===n.$GT)),this._beginToken(s.DOC_TYPE_END),this._cursor.advance(),this._endToken([])}_consumePrefixAndName(){const e=this._cursor.clone();let t="";for(;this._cursor.peek()!==n.$COLON&&!(((r=this._cursor.peek())<n.$a||n.$z<r)&&(r<n.$A||n.$Z<r)&&(r<n.$0||r>n.$9));)this._cursor.advance();var r;let s;return this._cursor.peek()===n.$COLON?(t=this._cursor.getChars(e),this._cursor.advance(),s=this._cursor.clone()):s=e,this._requireCharCodeUntilFn(D,""===t?0:1),[t,this._cursor.getChars(s)]}_consumeTagOpen(e){let t,r,i,a=this.tokens.length;const o=this._cursor.clone(),u=[];try{if(!n.isAsciiLetter(this._cursor.peek()))throw this._createError(l(this._cursor.peek()),this._cursor.getSpan(e));for(i=this._consumeTagOpenStart(e),r=i.parts[0],t=i.parts[1],this._attemptCharCodeUntilFn(f);this._cursor.peek()!==n.$SLASH&&this._cursor.peek()!==n.$GT;){const[e,t]=this._consumeAttributeName();if(this._attemptCharCodeUntilFn(f),this._attemptCharCode(n.$EQ)){this._attemptCharCodeUntilFn(f);const n=this._consumeAttributeValue();u.push({prefix:e,name:t,value:n})}else u.push({prefix:e,name:t});this._attemptCharCodeUntilFn(f)}this._consumeTagOpenEnd()}catch(t){if(t instanceof h)return this._cursor=o,i&&(this.tokens.length=a),this._beginToken(s.TEXT,e),void this._endToken(["<"]);throw t}if(this._canSelfClose&&this.tokens[this.tokens.length-1].type===s.TAG_OPEN_END_VOID)return;const c=this._getTagContentType(t,r,this._fullNameStack.length>0,u);this._handleFullNameStackForTagOpen(r,t),c===hn.TagContentType.RAW_TEXT?this._consumeRawTextWithTagClose(r,t,!1):c===hn.TagContentType.ESCAPABLE_RAW_TEXT&&this._consumeRawTextWithTagClose(r,t,!0)}_consumeRawTextWithTagClose(e,t,r){this._consumeRawText(r,(()=>!!this._attemptCharCode(n.$LT)&&!!this._attemptCharCode(n.$SLASH)&&(this._attemptCharCodeUntilFn(f),!!this._attemptStrCaseInsensitive(e?"".concat(e,":").concat(t):t)&&(this._attemptCharCodeUntilFn(f),this._attemptCharCode(n.$GT))))),this._beginToken(s.TAG_CLOSE),this._requireCharCodeUntilFn((e=>e===n.$GT),3),this._cursor.advance(),this._endToken([e,t]),this._handleFullNameStackForTagClose(e,t)}_consumeTagOpenStart(e){this._beginToken(s.TAG_OPEN_START,e);const t=this._consumePrefixAndName();return this._endToken(t)}_consumeAttributeName(){const e=this._cursor.peek();if(e===n.$SQ||e===n.$DQ)throw this._createError(l(e),this._cursor.getSpan());this._beginToken(s.ATTR_NAME);const t=this._consumePrefixAndName();return this._endToken(t),t}_consumeAttributeValue(){let e;if(this._cursor.peek()===n.$SQ||this._cursor.peek()===n.$DQ){this._beginToken(s.ATTR_QUOTE);const t=this._cursor.peek();this._cursor.advance(),this._endToken([String.fromCodePoint(t)]),this._beginToken(s.ATTR_VALUE);const n=[];for(;this._cursor.peek()!==t;)n.push(this._readChar(!0));e=this._processCarriageReturns(n.join("")),this._endToken([e]),this._beginToken(s.ATTR_QUOTE),this._cursor.advance(),this._endToken([String.fromCodePoint(t)])}else{this._beginToken(s.ATTR_VALUE);const t=this._cursor.clone();this._requireCharCodeUntilFn(D,1),e=this._processCarriageReturns(this._cursor.getChars(t)),this._endToken([e])}return e}_consumeTagOpenEnd(){const e=this._attemptCharCode(n.$SLASH)?s.TAG_OPEN_END_VOID:s.TAG_OPEN_END;this._beginToken(e),this._requireCharCode(n.$GT),this._endToken([])}_consumeTagClose(e){if(this._beginToken(s.TAG_CLOSE,e),this._attemptCharCodeUntilFn(f),this._allowHtmComponentClosingTags&&this._attemptCharCode(n.$SLASH))this._attemptCharCodeUntilFn(f),this._requireCharCode(n.$GT),this._endToken([]);else{const[e,t]=this._consumePrefixAndName();this._attemptCharCodeUntilFn(f),this._requireCharCode(n.$GT),this._endToken([e,t]),this._handleFullNameStackForTagClose(e,t)}}_consumeExpansionFormStart(){this._beginToken(s.EXPANSION_FORM_START),this._requireCharCode(n.$LBRACE),this._endToken([]),this._expansionCaseStack.push(s.EXPANSION_FORM_START),this._beginToken(s.RAW_TEXT);const e=this._readUntil(n.$COMMA);this._endToken([e]),this._requireCharCode(n.$COMMA),this._attemptCharCodeUntilFn(f),this._beginToken(s.RAW_TEXT);const t=this._readUntil(n.$COMMA);this._endToken([t]),this._requireCharCode(n.$COMMA),this._attemptCharCodeUntilFn(f)}_consumeExpansionCaseStart(){this._beginToken(s.EXPANSION_CASE_VALUE);const e=this._readUntil(n.$LBRACE).trim();this._endToken([e]),this._attemptCharCodeUntilFn(f),this._beginToken(s.EXPANSION_CASE_EXP_START),this._requireCharCode(n.$LBRACE),this._endToken([]),this._attemptCharCodeUntilFn(f),this._expansionCaseStack.push(s.EXPANSION_CASE_EXP_START)}_consumeExpansionCaseEnd(){this._beginToken(s.EXPANSION_CASE_EXP_END),this._requireCharCode(n.$RBRACE),this._endToken([]),this._attemptCharCodeUntilFn(f),this._expansionCaseStack.pop()}_consumeExpansionFormEnd(){this._beginToken(s.EXPANSION_FORM_END),this._requireCharCode(n.$RBRACE),this._endToken([]),this._expansionCaseStack.pop()}_consumeText(){const e=this._cursor.clone();this._beginToken(s.TEXT,e);const t=[];do{this._interpolationConfig&&this._attemptStr(this._interpolationConfig.start)?(t.push(this._interpolationConfig.start),this._inInterpolation=!0):this._interpolationConfig&&this._inInterpolation&&this._attemptStr(this._interpolationConfig.end)?(t.push(this._interpolationConfig.end),this._inInterpolation=!1):t.push(this._readChar(!0))}while(!this._isTextEnd());this._endToken([this._processCarriageReturns(t.join(""))])}_isTextEnd(){if(this._cursor.peek()===n.$LT||this._cursor.peek()===n.$EOF)return!0;if(this._tokenizeIcu&&!this._inInterpolation){if(this.isExpansionFormStart())return!0;if(this._cursor.peek()===n.$RBRACE&&this._isInExpansionCase())return!0}return!1}_readUntil(e){const t=this._cursor.clone();return this._attemptUntilChar(e),this._cursor.getChars(t)}_isInExpansionCase(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===s.EXPANSION_CASE_EXP_START}_isInExpansionForm(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===s.EXPANSION_FORM_START}isExpansionFormStart(){if(this._cursor.peek()!==n.$LBRACE)return!1;if(this._interpolationConfig){const e=this._cursor.clone(),t=this._attemptStr(this._interpolationConfig.start);return this._cursor=e,!t}return!0}_handleFullNameStackForTagOpen(e,t){const n=hn.mergeNsAndName(e,t);0!==this._fullNameStack.length&&this._fullNameStack[this._fullNameStack.length-1]!==n||this._fullNameStack.push(n)}_handleFullNameStackForTagClose(e,t){const n=hn.mergeNsAndName(e,t);0!==this._fullNameStack.length&&this._fullNameStack[this._fullNameStack.length-1]===n&&this._fullNameStack.pop()}}function f(e){return!n.isWhitespace(e)||e===n.$EOF}function D(e){return n.isWhitespace(e)||e===n.$GT||e===n.$SLASH||e===n.$SQ||e===n.$DQ||e===n.$EQ}function m(e){return e==n.$SEMICOLON||e==n.$EOF||!n.isAsciiHexDigit(e)}function g(e){return e==n.$SEMICOLON||e==n.$EOF||!n.isAsciiLetter(e)}function y(e){return e>=n.$a&&e<=n.$z?e-n.$a+n.$A:e}class E{constructor(e,t){if(e instanceof E)this.file=e.file,this.input=e.input,this.end=e.end,this.state=Object.assign({},e.state);else{if(!t)throw new Error("Programming error: the range argument must be provided with a file argument.");this.file=e,this.input=e.content,this.end=t.endPos,this.state={peek:-1,offset:t.startPos,line:t.startLine,column:t.startCol}}}clone(){return new E(this)}peek(){return this.state.peek}charsLeft(){return this.end-this.state.offset}diff(e){return this.state.offset-e.state.offset}advance(){this.advanceState(this.state)}init(){this.updatePeek(this.state)}getSpan(e,t){if(e=e||this,t)for(e=e.clone();this.diff(e)>0&&-1!==t.indexOf(e.peek());)e.advance();return new o.ParseSourceSpan(new o.ParseLocation(e.file,e.state.offset,e.state.line,e.state.column),new o.ParseLocation(this.file,this.state.offset,this.state.line,this.state.column))}getChars(e){return this.input.substring(e.state.offset,this.state.offset)}charAt(e){return this.input.charCodeAt(e)}advanceState(e){if(e.offset>=this.end)throw this.state=e,new A('Unexpected character "EOF"',this);const t=this.charAt(e.offset);t===n.$LF?(e.line++,e.column=0):n.isNewLine(t)||e.column++,e.offset++,this.updatePeek(e)}updatePeek(e){e.peek=e.offset>=this.end?n.$EOF:this.charAt(e.offset)}}class C extends E{constructor(e,t){e instanceof C?(super(e),this.internalState=Object.assign({},e.internalState)):(super(e,t),this.internalState=this.state)}advance(){this.state=this.internalState,super.advance(),this.processEscapeSequence()}init(){super.init(),this.processEscapeSequence()}clone(){return new C(this)}getChars(e){const t=e.clone();let n="";for(;t.internalState.offset<this.internalState.offset;)n+=String.fromCodePoint(t.peek()),t.advance();return n}processEscapeSequence(){const e=()=>this.internalState.peek;if(e()===n.$BACKSLASH)if(this.internalState=Object.assign({},this.state),this.advanceState(this.internalState),e()===n.$n)this.state.peek=n.$LF;else if(e()===n.$r)this.state.peek=n.$CR;else if(e()===n.$v)this.state.peek=n.$VTAB;else if(e()===n.$t)this.state.peek=n.$TAB;else if(e()===n.$b)this.state.peek=n.$BSPACE;else if(e()===n.$f)this.state.peek=n.$FF;else if(e()===n.$u)if(this.advanceState(this.internalState),e()===n.$LBRACE){this.advanceState(this.internalState);const t=this.clone();let r=0;for(;e()!==n.$RBRACE;)this.advanceState(this.internalState),r++;this.state.peek=this.decodeHexDigits(t,r)}else{const e=this.clone();this.advanceState(this.internalState),this.advanceState(this.internalState),this.advanceState(this.internalState),this.state.peek=this.decodeHexDigits(e,4)}else if(e()===n.$x){this.advanceState(this.internalState);const e=this.clone();this.advanceState(this.internalState),this.state.peek=this.decodeHexDigits(e,2)}else if(n.isOctalDigit(e())){let t="",r=0,s=this.clone();for(;n.isOctalDigit(e())&&r<3;)s=this.clone(),t+=String.fromCodePoint(e()),this.advanceState(this.internalState),r++;this.state.peek=parseInt(t,8),this.internalState=s.internalState}else n.isNewLine(this.internalState.peek)?(this.advanceState(this.internalState),this.state=this.internalState):this.state.peek=this.internalState.peek}decodeHexDigits(e,t){const n=this.input.substr(e.internalState.offset,t),r=parseInt(n,16);if(isNaN(r))throw e.state=e.internalState,new A("Invalid hexadecimal escape sequence",e);return r}}class A{constructor(e,t){this.msg=e,this.cursor=t}}t.CursorError=A})),En=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends o.ParseError{constructor(e,t,n){super(t,n),this.elementName=e}static create(e,t,r){return new n(e,t,r)}}t.TreeError=n;class r{constructor(e,t){this.rootNodes=e,this.errors=t}}t.ParseTreeResult=r,t.Parser=class{constructor(e){this.getTagDefinition=e}parse(e,t,n,i=!1,a){const o=e=>(t,...n)=>e(t.toLowerCase(),...n),u=i?this.getTagDefinition:o(this.getTagDefinition),c=e=>u(e).contentType,l=i?a:o(a),p=a?(e,t,n,r)=>{const s=l(e,t,n,r);return void 0!==s?s:c(e)}:c,h=yn.tokenize(e,t,p,n),d=n&&n.canSelfClose||!1,f=n&&n.allowHtmComponentClosingTags||!1,D=new s(h.tokens,u,d,f,i).build();return new r(D.rootNodes,h.errors.concat(D.errors))}};class s{constructor(e,t,n,r,s){this.tokens=e,this.getTagDefinition=t,this.canSelfClose=n,this.allowHtmComponentClosingTags=r,this.isTagNameCaseSensitive=s,this._index=-1,this._rootNodes=[],this._errors=[],this._elementStack=[],this._advance()}build(){for(;this._peek.type!==yn.TokenType.EOF;)this._peek.type===yn.TokenType.TAG_OPEN_START?this._consumeStartTag(this._advance()):this._peek.type===yn.TokenType.TAG_CLOSE?(this._closeVoidElement(),this._consumeEndTag(this._advance())):this._peek.type===yn.TokenType.CDATA_START?(this._closeVoidElement(),this._consumeCdata(this._advance())):this._peek.type===yn.TokenType.COMMENT_START?(this._closeVoidElement(),this._consumeComment(this._advance())):this._peek.type===yn.TokenType.TEXT||this._peek.type===yn.TokenType.RAW_TEXT||this._peek.type===yn.TokenType.ESCAPABLE_RAW_TEXT?(this._closeVoidElement(),this._consumeText(this._advance())):this._peek.type===yn.TokenType.EXPANSION_FORM_START?this._consumeExpansion(this._advance()):this._peek.type===yn.TokenType.DOC_TYPE_START?this._consumeDocType(this._advance()):this._advance();return new r(this._rootNodes,this._errors)}_advance(){const e=this._peek;return this._index<this.tokens.length-1&&this._index++,this._peek=this.tokens[this._index],e}_advanceIf(e){return this._peek.type===e?this._advance():null}_consumeCdata(e){const t=this._advance(),n=this._getText(t),r=this._advanceIf(yn.TokenType.CDATA_END);this._addToParent(new Dn.CDATA(n,new o.ParseSourceSpan(e.sourceSpan.start,(r||t).sourceSpan.end)))}_consumeComment(e){const t=this._advanceIf(yn.TokenType.RAW_TEXT),n=this._advanceIf(yn.TokenType.COMMENT_END),r=null!=t?t.parts[0].trim():null,s=new o.ParseSourceSpan(e.sourceSpan.start,(n||t||e).sourceSpan.end);this._addToParent(new Dn.Comment(r,s))}_consumeDocType(e){const t=this._advanceIf(yn.TokenType.RAW_TEXT),n=this._advanceIf(yn.TokenType.DOC_TYPE_END),r=null!=t?t.parts[0].trim():null,s=new o.ParseSourceSpan(e.sourceSpan.start,(n||t||e).sourceSpan.end);this._addToParent(new Dn.DocType(r,s))}_consumeExpansion(e){const t=this._advance(),r=this._advance(),s=[];for(;this._peek.type===yn.TokenType.EXPANSION_CASE_VALUE;){const e=this._parseExpansionCase();if(!e)return;s.push(e)}if(this._peek.type!==yn.TokenType.EXPANSION_FORM_END)return void this._errors.push(n.create(null,this._peek.sourceSpan,"Invalid ICU message. Missing '}'."));const i=new o.ParseSourceSpan(e.sourceSpan.start,this._peek.sourceSpan.end);this._addToParent(new Dn.Expansion(t.parts[0],r.parts[0],s,i,t.sourceSpan)),this._advance()}_parseExpansionCase(){const e=this._advance();if(this._peek.type!==yn.TokenType.EXPANSION_CASE_EXP_START)return this._errors.push(n.create(null,this._peek.sourceSpan,"Invalid ICU message. Missing '{'.")),null;const t=this._advance(),r=this._collectExpansionExpTokens(t);if(!r)return null;const i=this._advance();r.push(new yn.Token(yn.TokenType.EOF,[],i.sourceSpan));const a=new s(r,this.getTagDefinition,this.canSelfClose,this.allowHtmComponentClosingTags,this.isTagNameCaseSensitive).build();if(a.errors.length>0)return this._errors=this._errors.concat(a.errors),null;const u=new o.ParseSourceSpan(e.sourceSpan.start,i.sourceSpan.end),c=new o.ParseSourceSpan(t.sourceSpan.start,i.sourceSpan.end);return new Dn.ExpansionCase(e.parts[0],a.rootNodes,u,e.sourceSpan,c)}_collectExpansionExpTokens(e){const t=[],r=[yn.TokenType.EXPANSION_CASE_EXP_START];for(;;){if(this._peek.type!==yn.TokenType.EXPANSION_FORM_START&&this._peek.type!==yn.TokenType.EXPANSION_CASE_EXP_START||r.push(this._peek.type),this._peek.type===yn.TokenType.EXPANSION_CASE_EXP_END){if(!i(r,yn.TokenType.EXPANSION_CASE_EXP_START))return this._errors.push(n.create(null,e.sourceSpan,"Invalid ICU message. Missing '}'.")),null;if(r.pop(),0==r.length)return t}if(this._peek.type===yn.TokenType.EXPANSION_FORM_END){if(!i(r,yn.TokenType.EXPANSION_FORM_START))return this._errors.push(n.create(null,e.sourceSpan,"Invalid ICU message. Missing '}'.")),null;r.pop()}if(this._peek.type===yn.TokenType.EOF)return this._errors.push(n.create(null,e.sourceSpan,"Invalid ICU message. Missing '}'.")),null;t.push(this._advance())}}_getText(e){let t=e.parts[0];if(t.length>0&&"\n"==t[0]){const e=this._getParentElement();null!=e&&0==e.children.length&&this.getTagDefinition(e.name).ignoreFirstLf&&(t=t.substring(1))}return t}_consumeText(e){const t=this._getText(e);t.length>0&&this._addToParent(new Dn.Text(t,e.sourceSpan))}_closeVoidElement(){const e=this._getParentElement();e&&this.getTagDefinition(e.name).isVoid&&this._elementStack.pop()}_consumeStartTag(e){const t=e.parts[0],r=e.parts[1],s=[];for(;this._peek.type===yn.TokenType.ATTR_NAME;)s.push(this._consumeAttr(this._advance()));const i=this._getElementFullName(t,r,this._getParentElement());let a=!1;if(this._peek.type===yn.TokenType.TAG_OPEN_END_VOID){this._advance(),a=!0;const t=this.getTagDefinition(i);this.canSelfClose||t.canSelfClose||null!==hn.getNsPrefix(i)||t.isVoid||this._errors.push(n.create(i,e.sourceSpan,'Only void and foreign elements can be self closed "'.concat(e.parts[1],'"')))}else this._peek.type===yn.TokenType.TAG_OPEN_END&&(this._advance(),a=!1);const u=this._peek.sourceSpan.start,c=new o.ParseSourceSpan(e.sourceSpan.start,u),l=new o.ParseSourceSpan(e.sourceSpan.start.moveBy(1),e.sourceSpan.end),p=new Dn.Element(i,s,[],c,c,void 0,l);this._pushElement(p),a&&(this._popElement(i),p.endSourceSpan=c)}_pushElement(e){const t=this._getParentElement();t&&this.getTagDefinition(t.name).isClosedByChild(e.name)&&this._elementStack.pop(),this._addToParent(e),this._elementStack.push(e)}_consumeEndTag(e){const t=this.allowHtmComponentClosingTags&&0===e.parts.length?null:this._getElementFullName(e.parts[0],e.parts[1],this._getParentElement());if(this._getParentElement()&&(this._getParentElement().endSourceSpan=e.sourceSpan),t&&this.getTagDefinition(t).isVoid)this._errors.push(n.create(t,e.sourceSpan,'Void elements do not have end tags "'.concat(e.parts[1],'"')));else if(!this._popElement(t)){const r='Unexpected closing tag "'.concat(t,'". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags');this._errors.push(n.create(t,e.sourceSpan,r))}}_popElement(e){for(let t=this._elementStack.length-1;t>=0;t--){const n=this._elementStack[t];if(!e||(hn.getNsPrefix(n.name)?n.name==e:n.name.toLowerCase()==e.toLowerCase()))return this._elementStack.splice(t,this._elementStack.length-t),!0;if(!this.getTagDefinition(n.name).closedByParent)return!1}return!1}_consumeAttr(e){const t=hn.mergeNsAndName(e.parts[0],e.parts[1]);let n,r,s=e.sourceSpan.end,i="";if(this._peek.type===yn.TokenType.ATTR_QUOTE&&(r=this._advance().sourceSpan.start),this._peek.type===yn.TokenType.ATTR_VALUE){const e=this._advance();i=e.parts[0],s=e.sourceSpan.end,n=e.sourceSpan}return this._peek.type===yn.TokenType.ATTR_QUOTE&&(s=this._advance().sourceSpan.end,n=new o.ParseSourceSpan(r,s)),new Dn.Attribute(t,i,new o.ParseSourceSpan(e.sourceSpan.start,s),n,e.sourceSpan)}_getParentElement(){return this._elementStack.length>0?this._elementStack[this._elementStack.length-1]:null}_getParentElementSkippingContainers(){let e=null;for(let t=this._elementStack.length-1;t>=0;t--){if(!hn.isNgContainer(this._elementStack[t].name))return{parent:this._elementStack[t],container:e};e=this._elementStack[t]}return{parent:null,container:e}}_addToParent(e){const t=this._getParentElement();null!=t?t.children.push(e):this._rootNodes.push(e)}_insertBeforeContainer(e,t,n){if(t){if(e){const r=e.children.indexOf(t);e.children[r]=n}else this._rootNodes.push(n);n.children.push(t),this._elementStack.splice(this._elementStack.indexOf(t),0,n)}else this._addToParent(n),this._elementStack.push(n)}_getElementFullName(e,t,n){return""===e&&""===(e=this.getTagDefinition(t).implicitNamespacePrefix||"")&&null!=n&&(e=hn.getNsPrefix(n.name)),hn.mergeNsAndName(e,t)}}function i(e,t){return e.length>0&&e[e.length-1]===t}})),Cn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var n=En;t.ParseTreeResult=n.ParseTreeResult,t.TreeError=n.TreeError;class r extends En.Parser{constructor(){super(dn.getHtmlTagDefinition)}parse(e,t,n,r=!1,s){return super.parse(e,t,n,r,s)}}t.HtmlParser=r})),An=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.TagContentType=hn.TagContentType;let n=null;t.parse=function(e,t={}){const{canSelfClose:r=!1,allowHtmComponentClosingTags:s=!1,isTagNameCaseSensitive:i=!1,getTagContentType:a}=t;return(n||(n=new Cn.HtmlParser),n).parse(e,"angular-html-parser",{tokenizeExpansionForms:!1,interpolationConfig:void 0,canSelfClose:r,allowHtmComponentClosingTags:s},i,a)}}));const{ParseSourceSpan:bn,ParseLocation:Fn,ParseSourceFile:xn}=o,{parse:vn}=vt,{inferParserByLanguage:Sn}=Ge,{HTML_ELEMENT_ATTRIBUTES:Tn,HTML_TAGS:wn,isUnknownNamespace:Bn}=nn,{hasPragma:Pn}={hasPragma:function(e){return/^\s*<!--\s*@(format|prettier)\s*-->/.test(e)},insertPragma:function(e){return"\x3c!-- @format --\x3e\n\n"+e.replace(/^\s*\n/,"")}},{Node:Nn}=un,{parseIeConditionalComment:kn}=pn,{locStart:In,locEnd:Ln}={locStart:function(e){return e.sourceSpan.start.offset},locEnd:function(e){return e.sourceSpan.end.offset}};function On(e,{recognizeSelfClosing:t,normalizeTagName:n,normalizeAttributeName:r,allowHtmComponentClosingTags:s,isTagNameCaseSensitive:i,getTagContentType:a},u){const c=An,{RecursiveVisitor:l,visitAll:p,Attribute:h,CDATA:d,Comment:f,DocType:D,Element:m,Text:g}=Dn,{ParseSourceSpan:y}=o,{getHtmlTagDefinition:E}=dn;let{rootNodes:C,errors:A}=c.parse(e,{canSelfClose:t,allowHtmComponentClosingTags:s,isTagNameCaseSensitive:i,getTagContentType:a});const b="vue"===u.parser&&C.some((e=>e instanceof D&&"html"===e.value||e instanceof m&&"html"===e.name.toLowerCase()));if("vue"!==u.parser||b){if(b){t=!0,n=!0,r=!0,s=!0,i=!1;const a=c.parse(e,{canSelfClose:t,allowHtmComponentClosingTags:s,isTagNameCaseSensitive:i});C=a.rootNodes,A=a.errors}}else{const n=e=>{if(!e)return!1;if("template"!==e.name)return!1;const t=e.attrs.find((e=>"lang"===e.name)),n=t&&t.value;return null==n||"html"===Sn(n,u)};if(C.some(n)){let r;const a=()=>c.parse(e,{canSelfClose:t,allowHtmComponentClosingTags:s,isTagNameCaseSensitive:i}),o=()=>r||(r=a()),u=e=>o().rootNodes.find((({startSourceSpan:t})=>t&&t.start.offset===e.startSourceSpan.start.offset));for(let e=0;e<C.length;e++){const t=C[e],{endSourceSpan:r,startSourceSpan:s}=t;if(null===r)A=o().errors,C[e]=u(t)||t;else if(n(t)){const n=o(),i=s.end.offset,a=r.start.offset;for(const e of n.errors){const{offset:t}=e.span.start;if(i<t&&t<a){A=[e];break}}C[e]=u(t)||t}}}}if(0!==A.length){const{msg:e,span:{start:t,end:n}}=A[0];throw function(e,t){const n=new SyntaxError(e+" ("+t.start.line+":"+t.start.column+")");return n.loc=t,n}(e,{start:{line:t.line+1,column:t.col+1},end:{line:n.line+1,column:n.col+1}})}const F=e=>{const t=e.name.startsWith(":")?e.name.slice(1).split(":")[0]:null,n=e.nameSpan.toString(),r=n.startsWith("".concat(t,":")),s=r?n.slice(t.length+1):n;e.name=s,e.namespace=t,e.hasExplicitNamespace=r},x=(e,t)=>{const n=e.toLowerCase();return t(n)?n:e};return p(new class extends l{visit(e){(e=>{if(e instanceof h)e.type="attribute";else if(e instanceof d)e.type="cdata";else if(e instanceof f)e.type="comment";else if(e instanceof D)e.type="docType";else if(e instanceof m)e.type="element";else{if(!(e instanceof g))throw new Error("Unexpected node ".concat(JSON.stringify(e)));e.type="text"}})(e),(e=>{e instanceof m?(F(e),e.attrs.forEach((e=>{F(e),e.valueSpan?(e.value=e.valueSpan.toString(),/["']/.test(e.value[0])&&(e.value=e.value.slice(1,-1))):e.value=null}))):e instanceof f?e.value=e.sourceSpan.toString().slice("\x3c!--".length,-"--\x3e".length):e instanceof g&&(e.value=e.sourceSpan.toString())})(e),(e=>{if(e instanceof m){const t=E(i?e.name:e.name.toLowerCase());!e.namespace||e.namespace===t.implicitNamespacePrefix||Bn(e)?e.tagDefinition=t:e.tagDefinition=E("")}})(e),(e=>{if(e instanceof m&&(!n||e.namespace&&e.namespace!==e.tagDefinition.implicitNamespacePrefix&&!Bn(e)||(e.name=x(e.name,(e=>e in wn))),r)){const t=Tn[e.name]||Object.create(null);e.attrs.forEach((n=>{n.namespace||(n.name=x(n.name,(n=>e.name in Tn&&(n in Tn["*"]||n in t))))}))}})(e),(e=>{e.sourceSpan&&e.endSourceSpan&&(e.sourceSpan=new y(e.sourceSpan.start,e.endSourceSpan.end))})(e)}},C),C}function _n(e,t,n,r=!0){const{frontMatter:s,content:i}=r?vn(e):{frontMatter:null,content:e},a=new xn(e,t.filepath),o=new Fn(a,0,0,0),u=o.moveBy(e.length),c={type:"root",sourceSpan:new bn(o,u),children:On(i,n,t)};if(s){const e=new Fn(a,0,0,0),t=e.moveBy(s.raw.length);s.sourceSpan=new bn(e,t),c.children.unshift(s)}const l=new Nn(c),p=(r,s)=>{const{offset:i}=s,a=_n(e.slice(0,i).replace(/[^\n\r]/g," ")+r,t,n,!1);a.sourceSpan=new bn(s,a.children[a.children.length-1].sourceSpan.end);const o=a.children[0];return o.length===i?a.children.shift():(o.sourceSpan=new bn(o.sourceSpan.start.moveBy(i),o.sourceSpan.end),o.value=o.value.slice(i)),a};return l.map((e=>{if("comment"===e.type){const t=kn(e,p);if(t)return t}return e}))}function Mn({recognizeSelfClosing:e=!1,normalizeTagName:t=!1,normalizeAttributeName:n=!1,allowHtmComponentClosingTags:r=!1,isTagNameCaseSensitive:s=!1,getTagContentType:i}={}){return{parse:(a,o,u)=>_n(a,u,{recognizeSelfClosing:e,normalizeTagName:t,normalizeAttributeName:n,allowHtmComponentClosingTags:r,isTagNameCaseSensitive:s,getTagContentType:i}),hasPragma:Pn,astFormat:"html",locStart:In,locEnd:Ln}}return{parsers:{html:Mn({recognizeSelfClosing:!0,normalizeTagName:!0,normalizeAttributeName:!0,allowHtmComponentClosingTags:!0}),angular:Mn(),vue:Mn({recognizeSelfClosing:!0,isTagNameCaseSensitive:!0,getTagContentType:(e,t,n,r)=>{if("html"!==e.toLowerCase()&&!n&&("template"!==e||r.some((({name:e,value:t})=>"lang"===e&&"html"!==t))))return An.TagContentType.RAW_TEXT}}),lwc:Mn()}}}()},945:function(e,t,n){e.exports=function(){"use strict";function e(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}function t(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var r={name:"prettier",version:"2.2.1",description:"Prettier is an opinionated code formatter",bin:"./bin/prettier.js",repository:"prettier/prettier",homepage:"https://prettier.io",author:"James Long",license:"MIT",main:"./index.js",browser:"./standalone.js",unpkg:"./standalone.js",engines:{node:">=10.13.0"},files:["index.js","standalone.js","src","bin"],dependencies:{"@angular/compiler":"10.2.3","@babel/code-frame":"7.10.4","@babel/parser":"7.12.5","@glimmer/syntax":"0.66.0","@iarna/toml":"2.2.5","@typescript-eslint/typescript-estree":"4.8.1","angular-estree-parser":"2.2.1","angular-html-parser":"1.7.1",camelcase:"6.2.0",chalk:"4.1.0","ci-info":"watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540","cjk-regex":"2.0.0",cosmiconfig:"7.0.0",dashify:"2.0.0",diff:"5.0.0",editorconfig:"0.15.3","editorconfig-to-prettier":"0.2.0","escape-string-regexp":"4.0.0",espree:"7.3.0",esutils:"2.0.3","fast-glob":"3.2.4","fast-json-stable-stringify":"2.1.0","find-parent-dir":"0.3.0","flow-parser":"0.138.0","get-stdin":"8.0.0",globby:"11.0.1",graphql:"15.4.0","html-element-attributes":"2.3.0","html-styles":"1.0.0","html-tag-names":"1.1.5","html-void-elements":"1.0.5",ignore:"4.0.6","jest-docblock":"26.0.0",json5:"2.1.3",leven:"3.1.0","lines-and-columns":"1.1.6","linguist-languages":"7.12.1",lodash:"4.17.20",mem:"8.0.0",meriyah:"3.1.6",minimatch:"3.0.4",minimist:"1.2.5","n-readlines":"1.0.1",outdent:"0.7.1","parse-srcset":"ikatyang/parse-srcset#54eb9c1cb21db5c62b4d0e275d7249516df6f0ee","please-upgrade-node":"3.2.0","postcss-less":"3.1.4","postcss-media-query-parser":"0.2.3","postcss-scss":"2.1.1","postcss-selector-parser":"2.2.3","postcss-values-parser":"2.0.1","regexp-util":"1.2.2","remark-footnotes":"2.0.0","remark-math":"3.0.1","remark-parse":"8.0.3",resolve:"1.19.0",semver:"7.3.2","string-width":"4.2.0",typescript:"4.1.2","unicode-regex":"3.0.0",unified:"9.2.0",vnopts:"1.0.2","yaml-unist-parser":"1.3.1"},devDependencies:{"@babel/core":"7.12.3","@babel/preset-env":"7.12.1","@babel/types":"7.12.6","@glimmer/reference":"0.66.0","@rollup/plugin-alias":"3.1.1","@rollup/plugin-babel":"5.2.1","@rollup/plugin-commonjs":"16.0.0","@rollup/plugin-json":"4.1.0","@rollup/plugin-node-resolve":"10.0.0","@rollup/plugin-replace":"2.3.4","@types/estree":"0.0.45","@types/node":"14.14.0","@typescript-eslint/types":"4.8.1","babel-jest":"26.6.3","babel-loader":"8.2.1",benchmark:"2.1.4","builtin-modules":"3.1.0","cross-env":"7.0.2",cspell:"4.2.2",eslint:"7.13.0","eslint-config-prettier":"6.15.0","eslint-formatter-friendly":"7.0.0","eslint-plugin-import":"2.22.1","eslint-plugin-jest":"24.1.3","eslint-plugin-prettier-internal-rules":"file:scripts/tools/eslint-plugin-prettier-internal-rules","eslint-plugin-react":"7.21.5","eslint-plugin-unicorn":"23.0.0",execa:"4.1.0",jest:"26.6.3","jest-snapshot-serializer-ansi":"1.0.0","jest-snapshot-serializer-raw":"1.1.0","jest-watch-typeahead":"0.6.1","npm-run-all":"4.1.5","path-browserify":"1.0.1",prettier:"2.2.0",rimraf:"3.0.2",rollup:"2.33.3","rollup-plugin-node-globals":"1.4.0","rollup-plugin-terser":"7.0.2",shelljs:"0.8.4","snapshot-diff":"0.8.1","strip-ansi":"6.0.0","synchronous-promise":"2.0.15",tempy:"1.0.0","terser-webpack-plugin":"5.0.3",webpack:"5.5.1"},scripts:{prepublishOnly:'echo "Error: must publish from dist/" && exit 1',"prepare-release":"yarn && yarn build && yarn test:dist",test:"jest","test:dev-package":"cross-env INSTALL_PACKAGE=1 jest","test:dist":"cross-env NODE_ENV=production jest","test:dist-standalone":"cross-env NODE_ENV=production TEST_STANDALONE=1 jest","test:integration":"jest tests_integration","perf:repeat":"yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null","perf:repeat-inspect":"yarn && yarn build && cross-env NODE_ENV=production node --inspect-brk ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null","perf:benchmark":"yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-benchmark --loglevel debug ${PERF_FILE:-./index.js} > /dev/null",lint:"run-p lint:*","lint:typecheck":"tsc","lint:eslint":"cross-env EFF_NO_LINK_RULES=true eslint . --format friendly","lint:changelog":"node ./scripts/lint-changelog.js","lint:prettier":'prettier . "!test*" --check',"lint:dist":'eslint --no-eslintrc --no-ignore --env=es6,browser --parser-options=ecmaVersion:2018 "dist/!(bin-prettier|index|third-party).js"',"lint:spellcheck":'cspell "**/*" ".github/**/*"',"lint:deps":"node ./scripts/check-deps.js",fix:"run-s fix:eslint fix:prettier","fix:eslint":"yarn lint:eslint --fix","fix:prettier":"yarn lint:prettier --write",build:"node --max-old-space-size=3072 ./scripts/build/build.js","build-docs":"node ./scripts/build-docs.js"}};function s(){}function i(e,t,n,r,s){for(var i=0,a=t.length,o=0,u=0;i<a;i++){var c=t[i];if(c.removed){if(c.value=e.join(r.slice(u,u+c.count)),u+=c.count,i&&t[i-1].added){var l=t[i-1];t[i-1]=t[i],t[i]=l}}else{if(!c.added&&s){var p=n.slice(o,o+c.count);p=p.map((function(e,t){var n=r[u+t];return n.length>e.length?n:e})),c.value=e.join(p)}else c.value=e.join(n.slice(o,o+c.count));o+=c.count,c.added||(u+=c.count)}}var h=t[a-1];return a>1&&"string"==typeof h.value&&(h.added||h.removed)&&e.equals("",h.value)&&(t[a-2].value+=h.value,t.pop()),t}function a(e){return{newPos:e.newPos,components:e.components.slice(0)}}s.prototype={diff:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=n.callback;"function"==typeof n&&(r=n,n={}),this.options=n;var s=this;function o(e){return r?(setTimeout((function(){r(void 0,e)}),0),!0):e}e=this.castInput(e),t=this.castInput(t),e=this.removeEmpty(this.tokenize(e));var u=(t=this.removeEmpty(this.tokenize(t))).length,c=e.length,l=1,p=u+c,h=[{newPos:-1,components:[]}],d=this.extractCommon(h[0],t,e,0);if(h[0].newPos+1>=u&&d+1>=c)return o([{value:this.join(t),count:t.length}]);function f(){for(var n=-1*l;n<=l;n+=2){var r=void 0,p=h[n-1],d=h[n+1],f=(d?d.newPos:0)-n;p&&(h[n-1]=void 0);var D=p&&p.newPos+1<u,m=d&&0<=f&&f<c;if(D||m){if(!D||m&&p.newPos<d.newPos?(r=a(d),s.pushComponent(r.components,void 0,!0)):((r=p).newPos++,s.pushComponent(r.components,!0,void 0)),f=s.extractCommon(r,t,e,n),r.newPos+1>=u&&f+1>=c)return o(i(s,r.components,t,e,s.useLongestToken));h[n]=r}else h[n]=void 0}l++}if(r)!function e(){setTimeout((function(){if(l>p)return r();f()||e()}),0)}();else for(;l<=p;){var D=f();if(D)return D}},pushComponent:function(e,t,n){var r=e[e.length-1];r&&r.added===t&&r.removed===n?e[e.length-1]={count:r.count+1,added:t,removed:n}:e.push({count:1,added:t,removed:n})},extractCommon:function(e,t,n,r){for(var s=t.length,i=n.length,a=e.newPos,o=a-r,u=0;a+1<s&&o+1<i&&this.equals(t[a+1],n[o+1]);)a++,o++,u++;return u&&e.components.push({count:u}),e.newPos=a,o},equals:function(e,t){return this.options.comparator?this.options.comparator(e,t):e===t||this.options.ignoreCase&&e.toLowerCase()===t.toLowerCase()},removeEmpty:function(e){for(var t=[],n=0;n<e.length;n++)e[n]&&t.push(e[n]);return t},castInput:function(e){return e},tokenize:function(e){return e.split("")},join:function(e){return e.join("")}};var o=new s;function u(e,t){if("function"==typeof e)t.callback=e;else if(e)for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var c=/^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/,l=/\S/,p=new s;p.equals=function(e,t){return this.options.ignoreCase&&(e=e.toLowerCase(),t=t.toLowerCase()),e===t||this.options.ignoreWhitespace&&!l.test(e)&&!l.test(t)},p.tokenize=function(e){for(var t=e.split(/([^\S\r\n]+|[()[\]{}'"\r\n]|\b)/),n=0;n<t.length-1;n++)!t[n+1]&&t[n+2]&&c.test(t[n])&&c.test(t[n+2])&&(t[n]+=t[n+2],t.splice(n+1,2),n--);return t};var h=new s;function d(e,t,n){return h.diff(e,t,n)}h.tokenize=function(e){var t=[],n=e.split(/(\n|\r\n)/);n[n.length-1]||n.pop();for(var r=0;r<n.length;r++){var s=n[r];r%2&&!this.options.newlineIsToken?t[t.length-1]+=s:(this.options.ignoreWhitespace&&(s=s.trim()),t.push(s))}return t};var f=new s;f.tokenize=function(e){return e.split(/(\S.+?[.!?])(?=\s+|$)/)};var D=new s;function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function g(e){return function(e){if(Array.isArray(e))return y(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return y(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?y(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function y(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}D.tokenize=function(e){return e.split(/([{}:;,]|\s+)/)};var E=Object.prototype.toString,C=new s;function A(e,t,n,r,s){var i,a;for(t=t||[],n=n||[],r&&(e=r(s,e)),i=0;i<t.length;i+=1)if(t[i]===e)return n[i];if("[object Array]"===E.call(e)){for(t.push(e),a=new Array(e.length),n.push(a),i=0;i<e.length;i+=1)a[i]=A(e[i],t,n,r,s);return t.pop(),n.pop(),a}if(e&&e.toJSON&&(e=e.toJSON()),"object"===m(e)&&null!==e){t.push(e),a={},n.push(a);var o,u=[];for(o in e)e.hasOwnProperty(o)&&u.push(o);for(u.sort(),i=0;i<u.length;i+=1)a[o=u[i]]=A(e[o],t,n,r,o);t.pop(),n.pop()}else a=e;return a}C.useLongestToken=!0,C.tokenize=h.tokenize,C.castInput=function(e){var t=this.options,n=t.undefinedReplacement,r=t.stringifyReplacer,s=void 0===r?function(e,t){return void 0===t?n:t}:r;return"string"==typeof e?e:JSON.stringify(A(e,null,null,s),s,"  ")},C.equals=function(e,t){return s.prototype.equals.call(C,e.replace(/,([\r\n])/g,"$1"),t.replace(/,([\r\n])/g,"$1"))};var b=new s;function F(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.split(/\r\n|[\n\v\f\r\x85]/),r=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],s=[],i=0;function a(){var e={};for(s.push(e);i<n.length;){var r=n[i];if(/^(\-\-\-|\+\+\+|@@)\s/.test(r))break;var a=/^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(r);a&&(e.index=a[1]),i++}for(o(e),o(e),e.hunks=[];i<n.length;){var c=n[i];if(/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(c))break;if(/^@@/.test(c))e.hunks.push(u());else{if(c&&t.strict)throw new Error("Unknown line "+(i+1)+" "+JSON.stringify(c));i++}}}function o(e){var t=/^(---|\+\+\+)\s+(.*)$/.exec(n[i]);if(t){var r="---"===t[1]?"old":"new",s=t[2].split("\t",2),a=s[0].replace(/\\\\/g,"\\");/^".*"$/.test(a)&&(a=a.substr(1,a.length-2)),e[r+"FileName"]=a,e[r+"Header"]=(s[1]||"").trim(),i++}}function u(){var e=i,s=n[i++].split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/),a={oldStart:+s[1],oldLines:void 0===s[2]?1:+s[2],newStart:+s[3],newLines:void 0===s[4]?1:+s[4],lines:[],linedelimiters:[]};0===a.oldLines&&(a.oldStart+=1),0===a.newLines&&(a.newStart+=1);for(var o=0,u=0;i<n.length&&!(0===n[i].indexOf("--- ")&&i+2<n.length&&0===n[i+1].indexOf("+++ ")&&0===n[i+2].indexOf("@@"));i++){var c=0==n[i].length&&i!=n.length-1?" ":n[i][0];if("+"!==c&&"-"!==c&&" "!==c&&"\\"!==c)break;a.lines.push(n[i]),a.linedelimiters.push(r[i]||"\n"),"+"===c?o++:"-"===c?u++:" "===c&&(o++,u++)}if(o||1!==a.newLines||(a.newLines=0),u||1!==a.oldLines||(a.oldLines=0),t.strict){if(o!==a.newLines)throw new Error("Added line count did not match for hunk at line "+(e+1));if(u!==a.oldLines)throw new Error("Removed line count did not match for hunk at line "+(e+1))}return a}for(;i<n.length;)a();return s}function x(e,t,n){var r=!0,s=!1,i=!1,a=1;return function o(){if(r&&!i){if(s?a++:r=!1,e+a<=n)return a;i=!0}if(!s)return i||(r=!0),t<=e-a?-a++:(s=!0,o())}}function v(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"==typeof t&&(t=F(t)),Array.isArray(t)){if(t.length>1)throw new Error("applyPatch only works with a single input.");t=t[0]}var r,s,i=e.split(/\r\n|[\n\v\f\r\x85]/),a=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],o=t.hunks,u=n.compareLine||function(e,t,n,r){return t===r},c=0,l=n.fuzzFactor||0,p=0,h=0;function d(e,t){for(var n=0;n<e.lines.length;n++){var r=e.lines[n],s=r.length>0?r[0]:" ",a=r.length>0?r.substr(1):r;if(" "===s||"-"===s){if(!u(t+1,i[t],s,a)&&++c>l)return!1;t++}}return!0}for(var f=0;f<o.length;f++){for(var D=o[f],m=i.length-D.oldLines,g=0,y=h+D.oldStart-1,E=x(y,p,m);void 0!==g;g=E())if(d(D,y+g)){D.offset=h+=g;break}if(void 0===g)return!1;p=D.offset+D.oldStart+D.oldLines}for(var C=0,A=0;A<o.length;A++){var b=o[A],v=b.oldStart+b.offset+C-1;C+=b.newLines-b.oldLines;for(var S=0;S<b.lines.length;S++){var T=b.lines[S],w=T.length>0?T[0]:" ",B=T.length>0?T.substr(1):T,P=b.linedelimiters[S];if(" "===w)v++;else if("-"===w)i.splice(v,1),a.splice(v,1);else if("+"===w)i.splice(v,0,B),a.splice(v,0,P),v++;else if("\\"===w){var N=b.lines[S-1]?b.lines[S-1][0]:null;"+"===N?r=!0:"-"===N&&(s=!0)}}}if(r)for(;!i[i.length-1];)i.pop(),a.pop();else s&&(i.push(""),a.push("\n"));for(var k=0;k<i.length-1;k++)i[k]=i[k]+a[k];return i.join("")}function S(e,t,n,r,s,i,a){a||(a={}),void 0===a.context&&(a.context=4);var o=d(n,r,a);function u(e){return e.map((function(e){return" "+e}))}o.push({value:"",lines:[]});for(var c=[],l=0,p=0,h=[],f=1,D=1,m=function(e){var t=o[e],s=t.lines||t.value.replace(/\n$/,"").split("\n");if(t.lines=s,t.added||t.removed){var i;if(!l){var d=o[e-1];l=f,p=D,d&&(h=a.context>0?u(d.lines.slice(-a.context)):[],l-=h.length,p-=h.length)}(i=h).push.apply(i,g(s.map((function(e){return(t.added?"+":"-")+e})))),t.added?D+=s.length:f+=s.length}else{if(l)if(s.length<=2*a.context&&e<o.length-2){var m;(m=h).push.apply(m,g(u(s)))}else{var y,E=Math.min(s.length,a.context);(y=h).push.apply(y,g(u(s.slice(0,E))));var C={oldStart:l,oldLines:f-l+E,newStart:p,newLines:D-p+E,lines:h};if(e>=o.length-2&&s.length<=a.context){var A=/\n$/.test(n),b=/\n$/.test(r),F=0==s.length&&h.length>C.oldLines;!A&&F&&n.length>0&&h.splice(C.oldLines,0,"\\ No newline at end of file"),(A||F)&&b||h.push("\\ No newline at end of file")}c.push(C),l=0,p=0,h=[]}f+=s.length,D+=s.length}},y=0;y<o.length;y++)m(y);return{oldFileName:e,newFileName:t,oldHeader:s,newHeader:i,hunks:c}}function T(e,t,n,r,s,i,a){return function(e){var t=[];e.oldFileName==e.newFileName&&t.push("Index: "+e.oldFileName),t.push("==================================================================="),t.push("--- "+e.oldFileName+(void 0===e.oldHeader?"":"\t"+e.oldHeader)),t.push("+++ "+e.newFileName+(void 0===e.newHeader?"":"\t"+e.newHeader));for(var n=0;n<e.hunks.length;n++){var r=e.hunks[n];0===r.oldLines&&(r.oldStart-=1),0===r.newLines&&(r.newStart-=1),t.push("@@ -"+r.oldStart+","+r.oldLines+" +"+r.newStart+","+r.newLines+" @@"),t.push.apply(t,r.lines)}return t.join("\n")+"\n"}(S(e,t,n,r,s,i,a))}function w(e,t){if(t.length>e.length)return!1;for(var n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function B(e){var t=W(e.lines),n=t.oldLines,r=t.newLines;void 0!==n?e.oldLines=n:delete e.oldLines,void 0!==r?e.newLines=r:delete e.newLines}function P(e,t){if("string"==typeof e){if(/^@@/m.test(e)||/^Index:/m.test(e))return F(e)[0];if(!t)throw new Error("Must provide a base reference or pass in a patch");return S(void 0,void 0,t,e)}return e}function N(e){return e.newFileName&&e.newFileName!==e.oldFileName}function k(e,t,n){return t===n?t:(e.conflict=!0,{mine:t,theirs:n})}function I(e,t){return e.oldStart<t.oldStart&&e.oldStart+e.oldLines<t.oldStart}function L(e,t){return{oldStart:e.oldStart,oldLines:e.oldLines,newStart:e.newStart+t,newLines:e.newLines,lines:e.lines}}function O(e,t,n,r,s){var i={offset:t,lines:n,index:0},a={offset:r,lines:s,index:0};for(j(e,i,a),j(e,a,i);i.index<i.lines.length&&a.index<a.lines.length;){var o=i.lines[i.index],u=a.lines[a.index];if("-"!==o[0]&&"+"!==o[0]||"-"!==u[0]&&"+"!==u[0])if("+"===o[0]&&" "===u[0]){var c;(c=e.lines).push.apply(c,g(U(i)))}else if("+"===u[0]&&" "===o[0]){var l;(l=e.lines).push.apply(l,g(U(a)))}else"-"===o[0]&&" "===u[0]?M(e,i,a):"-"===u[0]&&" "===o[0]?M(e,a,i,!0):o===u?(e.lines.push(o),i.index++,a.index++):R(e,U(i),U(a));else _(e,i,a)}q(e,i),q(e,a),B(e)}function _(e,t,n){var r=U(t),s=U(n);if($(r)&&$(s)){var i,a;if(w(r,s)&&V(n,r,r.length-s.length))return void(i=e.lines).push.apply(i,g(r));if(w(s,r)&&V(t,s,s.length-r.length))return void(a=e.lines).push.apply(a,g(s))}else if(function(e,t){return e.length===t.length&&w(e,t)}(r,s)){var o;return void(o=e.lines).push.apply(o,g(r))}R(e,r,s)}function M(e,t,n,r){var s,i=U(t),a=function(e,t){for(var n=[],r=[],s=0,i=!1,a=!1;s<t.length&&e.index<e.lines.length;){var o=e.lines[e.index],u=t[s];if("+"===u[0])break;if(i=i||" "!==o[0],r.push(u),s++,"+"===o[0])for(a=!0;"+"===o[0];)n.push(o),o=e.lines[++e.index];u.substr(1)===o.substr(1)?(n.push(o),e.index++):a=!0}if("+"===(t[s]||"")[0]&&i&&(a=!0),a)return n;for(;s<t.length;)r.push(t[s++]);return{merged:r,changes:n}}(n,i);a.merged?(s=e.lines).push.apply(s,g(a.merged)):R(e,r?a:i,r?i:a)}function R(e,t,n){e.conflict=!0,e.lines.push({conflict:!0,mine:t,theirs:n})}function j(e,t,n){for(;t.offset<n.offset&&t.index<t.lines.length;){var r=t.lines[t.index++];e.lines.push(r),t.offset++}}function q(e,t){for(;t.index<t.lines.length;){var n=t.lines[t.index++];e.lines.push(n)}}function U(e){for(var t=[],n=e.lines[e.index][0];e.index<e.lines.length;){var r=e.lines[e.index];if("-"===n&&"+"===r[0]&&(n="+"),n!==r[0])break;t.push(r),e.index++}return t}function $(e){return e.reduce((function(e,t){return e&&"-"===t[0]}),!0)}function V(e,t,n){for(var r=0;r<n;r++){var s=t[t.length-n+r].substr(1);if(e.lines[e.index+r]!==" "+s)return!1}return e.index+=n,!0}function W(e){var t=0,n=0;return e.forEach((function(e){if("string"!=typeof e){var r=W(e.mine),s=W(e.theirs);void 0!==t&&(r.oldLines===s.oldLines?t+=r.oldLines:t=void 0),void 0!==n&&(r.newLines===s.newLines?n+=r.newLines:n=void 0)}else void 0===n||"+"!==e[0]&&" "!==e[0]||n++,void 0===t||"-"!==e[0]&&" "!==e[0]||t++})),{oldLines:t,newLines:n}}function z(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")}b.tokenize=function(e){return e.slice()},b.join=b.removeEmpty=function(e){return e};var H=Object.freeze({__proto__:null,Diff:s,applyPatch:v,applyPatches:function(e,t){"string"==typeof e&&(e=F(e));var n=0;!function r(){var s=e[n++];if(!s)return t.complete();t.loadFile(s,(function(e,n){if(e)return t.complete(e);var i=v(n,s,t);t.patched(s,i,(function(e){if(e)return t.complete(e);r()}))}))}()},canonicalize:A,convertChangesToDMP:function(e){for(var t,n,r=[],s=0;s<e.length;s++)n=(t=e[s]).added?1:t.removed?-1:0,r.push([n,t.value]);return r},convertChangesToXML:function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];r.added?t.push("<ins>"):r.removed&&t.push("<del>"),t.push(z(r.value)),r.added?t.push("</ins>"):r.removed&&t.push("</del>")}return t.join("")},createPatch:function(e,t,n,r,s,i){return T(e,e,t,n,r,s,i)},createTwoFilesPatch:T,diffArrays:function(e,t,n){return b.diff(e,t,n)},diffChars:function(e,t,n){return o.diff(e,t,n)},diffCss:function(e,t,n){return D.diff(e,t,n)},diffJson:function(e,t,n){return C.diff(e,t,n)},diffLines:d,diffSentences:function(e,t,n){return f.diff(e,t,n)},diffTrimmedLines:function(e,t,n){var r=u(n,{ignoreWhitespace:!0});return h.diff(e,t,r)},diffWords:function(e,t,n){return n=u(n,{ignoreWhitespace:!0}),p.diff(e,t,n)},diffWordsWithSpace:function(e,t,n){return p.diff(e,t,n)},merge:function(e,t,n){e=P(e,n),t=P(t,n);var r={};(e.index||t.index)&&(r.index=e.index||t.index),(e.newFileName||t.newFileName)&&(N(e)?N(t)?(r.oldFileName=k(r,e.oldFileName,t.oldFileName),r.newFileName=k(r,e.newFileName,t.newFileName),r.oldHeader=k(r,e.oldHeader,t.oldHeader),r.newHeader=k(r,e.newHeader,t.newHeader)):(r.oldFileName=e.oldFileName,r.newFileName=e.newFileName,r.oldHeader=e.oldHeader,r.newHeader=e.newHeader):(r.oldFileName=t.oldFileName||e.oldFileName,r.newFileName=t.newFileName||e.newFileName,r.oldHeader=t.oldHeader||e.oldHeader,r.newHeader=t.newHeader||e.newHeader)),r.hunks=[];for(var s=0,i=0,a=0,o=0;s<e.hunks.length||i<t.hunks.length;){var u=e.hunks[s]||{oldStart:1/0},c=t.hunks[i]||{oldStart:1/0};if(I(u,c))r.hunks.push(L(u,a)),s++,o+=u.newLines-u.oldLines;else if(I(c,u))r.hunks.push(L(c,o)),i++,a+=c.newLines-c.oldLines;else{var l={oldStart:Math.min(u.oldStart,c.oldStart),oldLines:0,newStart:Math.min(u.newStart+a,c.oldStart+o),newLines:0,lines:[]};O(l,u.oldStart,u.lines,c.oldStart,c.lines),i++,s++,r.hunks.push(l)}}return r},parsePatch:F,structuredPatch:S});function G(e){return{type:"concat",parts:e}}function X(e){return{type:"indent",contents:e}}function J(e,t){return{type:"align",contents:t,n:e}}function K(e,t){return{type:"group",id:(t=t||{}).id,contents:e,break:!!t.shouldBreak,expandedStates:t.expandedStates}}const Y={type:"break-parent"},Q=G([{type:"line",hard:!0},Y]),Z=G([{type:"line",hard:!0,literal:!0},Y]);var ee={concat:G,join:function(e,t){const n=[];for(let r=0;r<t.length;r++)0!==r&&n.push(e),n.push(t[r]);return G(n)},line:{type:"line"},softline:{type:"line",soft:!0},hardline:Q,literalline:Z,group:K,conditionalGroup:function(e,t){return K(e[0],Object.assign({},t,{expandedStates:e}))},fill:function(e){return{type:"fill",parts:e}},lineSuffix:function(e){return{type:"line-suffix",contents:e}},lineSuffixBoundary:{type:"line-suffix-boundary"},cursor:{type:"cursor",placeholder:Symbol("cursor")},breakParent:Y,ifBreak:function(e,t,n){return{type:"if-break",breakContents:e,flatContents:t,groupId:(n=n||{}).groupId}},trim:{type:"trim"},indent:X,align:J,addAlignmentToDoc:function(e,t,n){let r=e;if(t>0){for(let e=0;e<Math.floor(t/n);++e)r=X(r);r=J(t%n,r),r=J(-1/0,r)}return r},markAsRoot:function(e){return J({type:"root"},e)},dedentToRoot:function(e){return J(-1/0,e)},dedent:function(e){return J(-1,e)}};const te=e=>!Number.isNaN(e)&&e>=4352&&(e<=4447||9001===e||9002===e||11904<=e&&e<=12871&&12351!==e||12880<=e&&e<=19903||19968<=e&&e<=42182||43360<=e&&e<=43388||44032<=e&&e<=55203||63744<=e&&e<=64255||65040<=e&&e<=65049||65072<=e&&e<=65131||65281<=e&&e<=65376||65504<=e&&e<=65510||110592<=e&&e<=110593||127488<=e&&e<=127569||131072<=e&&e<=262141);var ne=te,re=te;ne.default=re;const se=e=>{if("string"!=typeof(e=e.replace(/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g,"  "))||0===e.length)return 0;e=(e=>"string"==typeof e?e.replace((({onlyFirst:e=!1}={})=>{const t=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(t,e?void 0:"g")})(),""):e)(e);let t=0;for(let n=0;n<e.length;n++){const r=e.codePointAt(n);r<=31||r>=127&&r<=159||r>=768&&r<=879||(r>65535&&n++,t+=ne(r)?2:1)}return t};var ie=se,ae=se;ie.default=ae;var oe=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")},ue=e=>e[e.length-1],ce=void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};function le(){throw new Error("setTimeout has not been defined")}function pe(){throw new Error("clearTimeout has not been defined")}var he=le,de=pe;function fe(e){if(he===setTimeout)return setTimeout(e,0);if((he===le||!he)&&setTimeout)return he=setTimeout,setTimeout(e,0);try{return he(e,0)}catch(t){try{return he.call(null,e,0)}catch(t){return he.call(this,e,0)}}}"function"==typeof ce.setTimeout&&(he=setTimeout),"function"==typeof ce.clearTimeout&&(de=clearTimeout);var De,me=[],ge=!1,ye=-1;function Ee(){ge&&De&&(ge=!1,De.length?me=De.concat(me):ye=-1,me.length&&Ce())}function Ce(){if(!ge){var e=fe(Ee);ge=!0;for(var t=me.length;t;){for(De=me,me=[];++ye<t;)De&&De[ye].run();ye=-1,t=me.length}De=null,ge=!1,function(e){if(de===clearTimeout)return clearTimeout(e);if((de===pe||!de)&&clearTimeout)return de=clearTimeout,clearTimeout(e);try{de(e)}catch(t){try{return de.call(null,e)}catch(t){return de.call(this,e)}}}(e)}}function Ae(e,t){this.fun=e,this.array=t}function be(){}Ae.prototype.run=function(){this.fun.apply(null,this.array)};var Fe=be,xe=be,ve=be,Se=be,Te=be,we=be,Be=be,Pe=ce.performance||{},Ne=Pe.now||Pe.mozNow||Pe.msNow||Pe.oNow||Pe.webkitNow||function(){return(new Date).getTime()},ke=new Date,Ie={nextTick:function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];me.push(new Ae(e,t)),1!==me.length||ge||fe(Ce)},title:"browser",browser:!0,env:{},argv:[],version:"",versions:{},on:Fe,addListener:xe,once:ve,off:Se,removeListener:Te,removeAllListeners:we,emit:Be,binding:function(e){throw new Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(e){throw new Error("process.chdir is not supported")},umask:function(){return 0},hrtime:function(e){var t=.001*Ne.call(Pe),n=Math.floor(t),r=Math.floor(t%1*1e9);return e&&(n-=e[0],(r-=e[1])<0&&(n--,r+=1e9)),[n,r]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-ke)/1e3}},Le="object"==typeof Ie&&Ie.env&&Ie.env.NODE_DEBUG&&/\bsemver\b/i.test(Ie.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{},Oe={SEMVER_SPEC_VERSION:"2.0.0",MAX_LENGTH:256,MAX_SAFE_INTEGER:Number.MAX_SAFE_INTEGER||9007199254740991,MAX_SAFE_COMPONENT_LENGTH:16},_e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{};function Me(e,t,n){return e(n={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&n.path)}},n.exports),n.exports}function Re(e){return e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var je=Me((function(e,t){const{MAX_SAFE_COMPONENT_LENGTH:n}=Oe,r=(t=e.exports={}).re=[],s=t.src=[],i=t.t={};let a=0;const o=(e,t,n)=>{const o=a++;Le(o,t),i[e]=o,s[o]=t,r[o]=new RegExp(t,n?"g":void 0)};o("NUMERICIDENTIFIER","0|[1-9]\\d*"),o("NUMERICIDENTIFIERLOOSE","[0-9]+"),o("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),o("MAINVERSION","(".concat(s[i.NUMERICIDENTIFIER],")\\.")+"(".concat(s[i.NUMERICIDENTIFIER],")\\.")+"(".concat(s[i.NUMERICIDENTIFIER],")")),o("MAINVERSIONLOOSE","(".concat(s[i.NUMERICIDENTIFIERLOOSE],")\\.")+"(".concat(s[i.NUMERICIDENTIFIERLOOSE],")\\.")+"(".concat(s[i.NUMERICIDENTIFIERLOOSE],")")),o("PRERELEASEIDENTIFIER","(?:".concat(s[i.NUMERICIDENTIFIER],"|").concat(s[i.NONNUMERICIDENTIFIER],")")),o("PRERELEASEIDENTIFIERLOOSE","(?:".concat(s[i.NUMERICIDENTIFIERLOOSE],"|").concat(s[i.NONNUMERICIDENTIFIER],")")),o("PRERELEASE","(?:-(".concat(s[i.PRERELEASEIDENTIFIER],"(?:\\.").concat(s[i.PRERELEASEIDENTIFIER],")*))")),o("PRERELEASELOOSE","(?:-?(".concat(s[i.PRERELEASEIDENTIFIERLOOSE],"(?:\\.").concat(s[i.PRERELEASEIDENTIFIERLOOSE],")*))")),o("BUILDIDENTIFIER","[0-9A-Za-z-]+"),o("BUILD","(?:\\+(".concat(s[i.BUILDIDENTIFIER],"(?:\\.").concat(s[i.BUILDIDENTIFIER],")*))")),o("FULLPLAIN","v?".concat(s[i.MAINVERSION]).concat(s[i.PRERELEASE],"?").concat(s[i.BUILD],"?")),o("FULL","^".concat(s[i.FULLPLAIN],"$")),o("LOOSEPLAIN","[v=\\s]*".concat(s[i.MAINVERSIONLOOSE]).concat(s[i.PRERELEASELOOSE],"?").concat(s[i.BUILD],"?")),o("LOOSE","^".concat(s[i.LOOSEPLAIN],"$")),o("GTLT","((?:<|>)?=?)"),o("XRANGEIDENTIFIERLOOSE","".concat(s[i.NUMERICIDENTIFIERLOOSE],"|x|X|\\*")),o("XRANGEIDENTIFIER","".concat(s[i.NUMERICIDENTIFIER],"|x|X|\\*")),o("XRANGEPLAIN","[v=\\s]*(".concat(s[i.XRANGEIDENTIFIER],")")+"(?:\\.(".concat(s[i.XRANGEIDENTIFIER],")")+"(?:\\.(".concat(s[i.XRANGEIDENTIFIER],")")+"(?:".concat(s[i.PRERELEASE],")?").concat(s[i.BUILD],"?")+")?)?"),o("XRANGEPLAINLOOSE","[v=\\s]*(".concat(s[i.XRANGEIDENTIFIERLOOSE],")")+"(?:\\.(".concat(s[i.XRANGEIDENTIFIERLOOSE],")")+"(?:\\.(".concat(s[i.XRANGEIDENTIFIERLOOSE],")")+"(?:".concat(s[i.PRERELEASELOOSE],")?").concat(s[i.BUILD],"?")+")?)?"),o("XRANGE","^".concat(s[i.GTLT],"\\s*").concat(s[i.XRANGEPLAIN],"$")),o("XRANGELOOSE","^".concat(s[i.GTLT],"\\s*").concat(s[i.XRANGEPLAINLOOSE],"$")),o("COERCE","".concat("(^|[^\\d])(\\d{1,").concat(n,"})")+"(?:\\.(\\d{1,".concat(n,"}))?")+"(?:\\.(\\d{1,".concat(n,"}))?")+"(?:$|[^\\d])"),o("COERCERTL",s[i.COERCE],!0),o("LONETILDE","(?:~>?)"),o("TILDETRIM","(\\s*)".concat(s[i.LONETILDE],"\\s+"),!0),t.tildeTrimReplace="$1~",o("TILDE","^".concat(s[i.LONETILDE]).concat(s[i.XRANGEPLAIN],"$")),o("TILDELOOSE","^".concat(s[i.LONETILDE]).concat(s[i.XRANGEPLAINLOOSE],"$")),o("LONECARET","(?:\\^)"),o("CARETTRIM","(\\s*)".concat(s[i.LONECARET],"\\s+"),!0),t.caretTrimReplace="$1^",o("CARET","^".concat(s[i.LONECARET]).concat(s[i.XRANGEPLAIN],"$")),o("CARETLOOSE","^".concat(s[i.LONECARET]).concat(s[i.XRANGEPLAINLOOSE],"$")),o("COMPARATORLOOSE","^".concat(s[i.GTLT],"\\s*(").concat(s[i.LOOSEPLAIN],")$|^$")),o("COMPARATOR","^".concat(s[i.GTLT],"\\s*(").concat(s[i.FULLPLAIN],")$|^$")),o("COMPARATORTRIM","(\\s*)".concat(s[i.GTLT],"\\s*(").concat(s[i.LOOSEPLAIN],"|").concat(s[i.XRANGEPLAIN],")"),!0),t.comparatorTrimReplace="$1$2$3",o("HYPHENRANGE","^\\s*(".concat(s[i.XRANGEPLAIN],")")+"\\s+-\\s+"+"(".concat(s[i.XRANGEPLAIN],")")+"\\s*$"),o("HYPHENRANGELOOSE","^\\s*(".concat(s[i.XRANGEPLAINLOOSE],")")+"\\s+-\\s+"+"(".concat(s[i.XRANGEPLAINLOOSE],")")+"\\s*$"),o("STAR","(<|>)?=?\\s*\\*"),o("GTE0","^\\s*>=\\s*0.0.0\\s*$"),o("GTE0PRE","^\\s*>=\\s*0.0.0-0\\s*$")}));const qe=/^[0-9]+$/,Ue=(e,t)=>{const n=qe.test(e),r=qe.test(t);return n&&r&&(e=+e,t=+t),e===t?0:n&&!r?-1:r&&!n?1:e<t?-1:1};var $e={compareIdentifiers:Ue,rcompareIdentifiers:(e,t)=>Ue(t,e)};const{MAX_LENGTH:Ve,MAX_SAFE_INTEGER:We}=Oe,{re:ze,t:He}=je,{compareIdentifiers:Ge}=$e;class Xe{constructor(e,t){if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof Xe){if(e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease)return e;e=e.version}else if("string"!=typeof e)throw new TypeError("Invalid Version: ".concat(e));if(e.length>Ve)throw new TypeError("version is longer than ".concat(Ve," characters"));Le("SemVer",e,t),this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease;const n=e.trim().match(t.loose?ze[He.LOOSE]:ze[He.FULL]);if(!n)throw new TypeError("Invalid Version: ".concat(e));if(this.raw=e,this.major=+n[1],this.minor=+n[2],this.patch=+n[3],this.major>We||this.major<0)throw new TypeError("Invalid major version");if(this.minor>We||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>We||this.patch<0)throw new TypeError("Invalid patch version");n[4]?this.prerelease=n[4].split(".").map((e=>{if(/^[0-9]+$/.test(e)){const t=+e;if(t>=0&&t<We)return t}return e})):this.prerelease=[],this.build=n[5]?n[5].split("."):[],this.format()}format(){return this.version="".concat(this.major,".").concat(this.minor,".").concat(this.patch),this.prerelease.length&&(this.version+="-".concat(this.prerelease.join("."))),this.version}toString(){return this.version}compare(e){if(Le("SemVer.compare",this.version,this.options,e),!(e instanceof Xe)){if("string"==typeof e&&e===this.version)return 0;e=new Xe(e,this.options)}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof Xe||(e=new Xe(e,this.options)),Ge(this.major,e.major)||Ge(this.minor,e.minor)||Ge(this.patch,e.patch)}comparePre(e){if(e instanceof Xe||(e=new Xe(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let t=0;do{const n=this.prerelease[t],r=e.prerelease[t];if(Le("prerelease compare",t,n,r),void 0===n&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===n)return-1;if(n!==r)return Ge(n,r)}while(++t)}compareBuild(e){e instanceof Xe||(e=new Xe(e,this.options));let t=0;do{const n=this.build[t],r=e.build[t];if(Le("prerelease compare",t,n,r),void 0===n&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===n)return-1;if(n!==r)return Ge(n,r)}while(++t)}inc(e,t){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t),this.inc("pre",t);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t),this.inc("pre",t);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{let e=this.prerelease.length;for(;--e>=0;)"number"==typeof this.prerelease[e]&&(this.prerelease[e]++,e=-2);-1===e&&this.prerelease.push(0)}t&&(this.prerelease[0]===t?isNaN(this.prerelease[1])&&(this.prerelease=[t,0]):this.prerelease=[t,0]);break;default:throw new Error("invalid increment argument: ".concat(e))}return this.format(),this.raw=this.version,this}}var Je=Xe,Ke=(e,t,n)=>new Je(e,n).compare(new Je(t,n)),Ye=Me((function(e,t){function n(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t]}function r(){return"undefined"!=typeof WeakMap?new WeakMap:{add:n,delete:n,get:n,set:n,has:function(e){return!1}}}Object.defineProperty(t,"__esModule",{value:!0});var s=Object.prototype.hasOwnProperty,i=function(e,t){return s.call(e,t)};function a(e,t){for(var n in t)i(t,n)&&(e[n]=t[n]);return e}var o=/^[ \t]*(?:\r\n|\r|\n)/,u=/(?:\r\n|\r|\n)[ \t]*$/,c=/^(?:[\r\n]|$)/,l=/(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/,p=/^[ \t]*[\r\n][ \t\r\n]*$/;function h(e,t,n){var r=0,s=e[0].match(l);s&&(r=s[1].length);var i=new RegExp("(\\r\\n|\\r|\\n).{0,"+r+"}","g");t&&(e=e.slice(1));var a=n.newline,c=n.trimLeadingNewline,p=n.trimTrailingNewline,h="string"==typeof a,d=e.length;return e.map((function(e,t){return e=e.replace(i,"$1"),0===t&&c&&(e=e.replace(o,"")),t===d-1&&p&&(e=e.replace(u,"")),h&&(e=e.replace(/\r\n|\n|\r/g,(function(e){return a}))),e}))}function d(e,t){for(var n="",r=0,s=e.length;r<s;r++)n+=e[r],r<s-1&&(n+=t[r]);return n}function f(e){return i(e,"raw")&&i(e,"length")}var D=function e(t){var n=r(),s=r();return a((function r(i){for(var o=[],u=1;u<arguments.length;u++)o[u-1]=arguments[u];if(f(i)){var l=i,m=(o[0]===r||o[0]===D)&&p.test(l[0])&&c.test(l[1]),g=m?s:n,y=g.get(l);return y||(y=h(l,m,t),g.set(l,y)),0===o.length?y[0]:d(y,m?o.slice(1):o)}return e(a(a({},t),i||{}))}),{string:function(e){return h([e],!1,t)[0]}})}({trimLeadingNewline:!0,trimTrailingNewline:!0});t.outdent=D,t.default=D;try{e.exports=D,Object.defineProperty(D,"__esModule",{value:!0}),D.default=D,D.outdent=D}catch(e){}}));function Qe(){const e=t(["\n      Require either '@prettier' or '@format' to be present in the file's first docblock comment\n      in order for it to be formatted.\n    "]);return Qe=function(){return e},e}function Ze(){const e=t(["\n      Format code starting at a given character offset.\n      The range will extend backwards to the start of the first line containing the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]);return Ze=function(){return e},e}function et(){const e=t(["\n      Format code ending at a given character offset (exclusive).\n      The range will extend forwards to the end of the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]);return et=function(){return e},e}function tt(){const e=t(["\n      Custom directory that contains prettier plugins in node_modules subdirectory.\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\n      Multiple values are accepted.\n    "]);return tt=function(){return e},e}function nt(){const e=t(["\n          Maintain existing\n          (mixed values within one file are normalised by looking at what's used after the first line)\n        "]);return nt=function(){return e},e}function rt(){const e=t(["\n      Print (to stderr) where a cursor at the given position would move to after formatting.\n      This option cannot be used with --range-start and --range-end.\n    "]);return rt=function(){return e},e}const{outdent:st}=Ye,it="Config",at="Editor",ot="Other",ut="Global",ct="Special",lt={cursorOffset:{since:"1.4.0",category:ct,type:"int",default:-1,range:{start:-1,end:1/0,step:1},description:st(rt()),cliCategory:at},endOfLine:{since:"1.15.0",category:ut,type:"choice",default:[{since:"1.15.0",value:"auto"},{since:"2.0.0",value:"lf"}],description:"Which end of line characters to apply.",choices:[{value:"lf",description:"Line Feed only (\\n), common on Linux and macOS as well as inside git repos"},{value:"crlf",description:"Carriage Return + Line Feed characters (\\r\\n), common on Windows"},{value:"cr",description:"Carriage Return character only (\\r), used very rarely"},{value:"auto",description:st(nt())}]},filepath:{since:"1.4.0",category:ct,type:"path",description:"Specify the input filepath. This will be used to do parser inference.",cliName:"stdin-filepath",cliCategory:ot,cliDescription:"Path to the file to pretend that stdin comes from."},insertPragma:{since:"1.8.0",category:ct,type:"boolean",default:!1,description:"Insert @format pragma into file's first docblock comment.",cliCategory:ot},parser:{since:"0.0.10",category:ut,type:"choice",default:[{since:"0.0.10",value:"babylon"},{since:"1.13.0",value:void 0}],description:"Which parser to use.",exception:e=>"string"==typeof e||"function"==typeof e,choices:[{value:"flow",description:"Flow"},{value:"babel",since:"1.16.0",description:"JavaScript"},{value:"babel-flow",since:"1.16.0",description:"Flow"},{value:"babel-ts",since:"2.0.0",description:"TypeScript"},{value:"typescript",since:"1.4.0",description:"TypeScript"},{value:"espree",since:"2.2.0",description:"JavaScript"},{value:"meriyah",since:"2.2.0",description:"JavaScript"},{value:"css",since:"1.7.1",description:"CSS"},{value:"less",since:"1.7.1",description:"Less"},{value:"scss",since:"1.7.1",description:"SCSS"},{value:"json",since:"1.5.0",description:"JSON"},{value:"json5",since:"1.13.0",description:"JSON5"},{value:"json-stringify",since:"1.13.0",description:"JSON.stringify"},{value:"graphql",since:"1.5.0",description:"GraphQL"},{value:"markdown",since:"1.8.0",description:"Markdown"},{value:"mdx",since:"1.15.0",description:"MDX"},{value:"vue",since:"1.10.0",description:"Vue"},{value:"yaml",since:"1.14.0",description:"YAML"},{value:"glimmer",since:null,description:"Handlebars"},{value:"html",since:"1.15.0",description:"HTML"},{value:"angular",since:"1.15.0",description:"Angular"},{value:"lwc",since:"1.17.0",description:"Lightning Web Components"}]},plugins:{since:"1.10.0",type:"path",array:!0,default:[{value:[]}],category:ut,description:"Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",exception:e=>"string"==typeof e||"object"==typeof e,cliName:"plugin",cliCategory:it},pluginSearchDirs:{since:"1.13.0",type:"path",array:!0,default:[{value:[]}],category:ut,description:st(tt()),exception:e=>"string"==typeof e||"object"==typeof e,cliName:"plugin-search-dir",cliCategory:it},printWidth:{since:"0.0.0",category:ut,type:"int",default:80,description:"The line length where Prettier will try wrap.",range:{start:0,end:1/0,step:1}},rangeEnd:{since:"1.4.0",category:ct,type:"int",default:1/0,range:{start:0,end:1/0,step:1},description:st(et()),cliCategory:at},rangeStart:{since:"1.4.0",category:ct,type:"int",default:0,range:{start:0,end:1/0,step:1},description:st(Ze()),cliCategory:at},requirePragma:{since:"1.7.0",category:ct,type:"boolean",default:!1,description:st(Qe()),cliCategory:ot},tabWidth:{type:"int",category:ut,default:2,description:"Number of spaces per indentation level.",range:{start:0,end:1/0,step:1}},useTabs:{since:"1.0.0",category:ut,type:"boolean",default:!1,description:"Indent with tabs instead of spaces."},embeddedLanguageFormatting:{since:"2.1.0",category:ut,type:"choice",default:[{since:"2.1.0",value:"auto"}],description:"Control how Prettier formats quoted code embedded in the file.",choices:[{value:"auto",description:"Format embedded code if Prettier can automatically identify it."},{value:"off",description:"Never automatically format embedded code."}]}},pt=Ke,ht=(e,t,n)=>Ke(e,t,n)<0,dt=(e,t,n)=>Ke(e,t,n)>=0,ft=r.version,Dt=lt;var mt={getSupportInfo:function({plugins:t=[],showUnreleased:n=!1,showDeprecated:r=!1,showInternal:s=!1}={}){const i=ft.split("-",1)[0],a=t.reduce(((e,t)=>e.concat(t.languages||[])),[]).filter(u),o=((e,t)=>Object.entries(e).map((([e,t])=>Object.assign({name:e},t))))(Object.assign({},...t.map((({options:e})=>e)),Dt)).filter((e=>u(e)&&c(e))).sort(((e,t)=>e.name===t.name?0:e.name<t.name?-1:1)).map((function(t){return s?t:e(t,["cliName","cliCategory","cliDescription"])})).map((e=>{e=Object.assign({},e),Array.isArray(e.default)&&(e.default=1===e.default.length?e.default[0].value:e.default.filter(u).sort(((e,t)=>pt(t.since,e.since)))[0].value),Array.isArray(e.choices)&&(e.choices=e.choices.filter((e=>u(e)&&c(e))),"parser"===e.name&&function(e,t,n){const r=new Set(e.choices.map((e=>e.value)));for(const s of t)if(s.parsers)for(const t of s.parsers)if(!r.has(t)){r.add(t);const i=n.find((e=>e.parsers&&e.parsers[t]));let a=s.name;i&&i.name&&(a+=" (plugin: ".concat(i.name,")")),e.choices.push({value:t,description:a})}}(e,a,t));const n=t.filter((t=>t.defaultOptions&&void 0!==t.defaultOptions[e.name])).reduce(((t,n)=>(t[n.name]=n.defaultOptions[e.name],t)),{});return Object.assign({},e,{pluginDefaults:n})}));return{languages:a,options:o};function u(e){return n||!("since"in e)||e.since&&dt(i,e.since)}function c(e){return r||!("deprecated"in e)||e.deprecated&&ht(i,e.deprecated)}}};const{getSupportInfo:gt}=mt,yt=/[^\x20-\x7F]/;function Et(e){return(t,n,r)=>{const s=r&&r.backwards;if(!1===n)return!1;const{length:i}=t;let a=n;for(;a>=0&&a<i;){const n=t.charAt(a);if(e instanceof RegExp){if(!e.test(n))return a}else if(!e.includes(n))return a;s?a--:a++}return(-1===a||a===i)&&a}}const Ct=Et(/\s/),At=Et(" \t"),bt=Et(",; \t"),Ft=Et(/[^\n\r]/);function xt(e,t){if(!1===t)return!1;if("/"===e.charAt(t)&&"*"===e.charAt(t+1))for(let n=t+2;n<e.length;++n)if("*"===e.charAt(n)&&"/"===e.charAt(n+1))return n+2;return t}function vt(e,t){return!1!==t&&("/"===e.charAt(t)&&"/"===e.charAt(t+1)?Ft(e,t):t)}function St(e,t,n){const r=n&&n.backwards;if(!1===t)return!1;const s=e.charAt(t);if(r){if("\r"===e.charAt(t-1)&&"\n"===s)return t-2;if("\n"===s||"\r"===s||"\u2028"===s||"\u2029"===s)return t-1}else{if("\r"===s&&"\n"===e.charAt(t+1))return t+2;if("\n"===s||"\r"===s||"\u2028"===s||"\u2029"===s)return t+1}return t}function Tt(e,t,n){const r=At(e,(n=n||{}).backwards?t-1:t,n);return r!==St(e,r,n)}function wt(e,t){let n=null,r=t;for(;r!==n;)n=r,r=bt(e,r),r=xt(e,r),r=At(e,r);return r=vt(e,r),r=St(e,r),!1!==r&&Tt(e,r)}function Bt(e,t){let n=null,r=t;for(;r!==n;)n=r,r=At(e,r),r=xt(e,r),r=vt(e,r),r=St(e,r);return r}function Pt(e,t,n){return Bt(e,n(t))}function Nt(e,t,n){let r=0;for(let s=n=n||0;s<e.length;++s)"\t"===e[s]?r=r+t-r%t:r++;return r}function kt(e,t){const n=e.slice(1,-1),r={quote:'"',regex:/"/g},s={quote:"'",regex:/'/g},i="'"===t?s:r,a=i===s?r:s;let o=i.quote;return(n.includes(i.quote)||n.includes(a.quote))&&(o=(n.match(i.regex)||[]).length>(n.match(a.regex)||[]).length?a.quote:i.quote),o}function It(e,t,n){const r='"'===t?"'":'"',s=e.replace(/\\([\S\s])|(["'])/g,((e,s,i)=>s===r?s:i===t?"\\"+i:i||(n&&/^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(s)?s:"\\"+s)));return t+s+t}function Lt(e,t){(e.comments||(e.comments=[])).push(t),t.printed=!1,"JSXText"===e.type&&(t.printed=!0)}var Ot={inferParserByLanguage:function(e,t){const{languages:n}=gt({plugins:t.plugins}),r=n.find((({name:t})=>t.toLowerCase()===e))||n.find((({aliases:t})=>Array.isArray(t)&&t.includes(e)))||n.find((({extensions:t})=>Array.isArray(t)&&t.includes(".".concat(e))));return r&&r.parsers[0]},replaceEndOfLineWith:function(e,t){const n=[];for(const r of e.split("\n"))0!==n.length&&n.push(t),n.push(r);return n},getStringWidth:function(e){return e?yt.test(e)?ie(e):e.length:0},getMaxContinuousCount:function(e,t){const n=e.match(new RegExp("(".concat(oe(t),")+"),"g"));return null===n?0:n.reduce(((e,n)=>Math.max(e,n.length/t.length)),0)},getMinNotPresentContinuousCount:function(e,t){const n=e.match(new RegExp("(".concat(oe(t),")+"),"g"));if(null===n)return 0;const r=new Map;let s=0;for(const e of n){const n=e.length/t.length;r.set(n,!0),n>s&&(s=n)}for(let e=1;e<s;e++)if(!r.get(e))return e;return s+1},getPenultimate:e=>e[e.length-2],getLast:ue,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:Bt,getNextNonSpaceNonCommentCharacterIndex:Pt,getNextNonSpaceNonCommentCharacter:function(e,t,n){return e.charAt(Pt(e,t,n))},skip:Et,skipWhitespace:Ct,skipSpaces:At,skipToLineEnd:bt,skipEverythingButNewLine:Ft,skipInlineComment:xt,skipTrailingComment:vt,skipNewline:St,isNextLineEmptyAfterIndex:wt,isNextLineEmpty:function(e,t,n){return wt(e,n(t))},isPreviousLineEmpty:function(e,t,n){let r=n(t)-1;return r=At(e,r,{backwards:!0}),r=St(e,r,{backwards:!0}),r=At(e,r,{backwards:!0}),r!==St(e,r,{backwards:!0})},hasNewline:Tt,hasNewlineInRange:function(e,t,n){for(let r=t;r<n;++r)if("\n"===e.charAt(r))return!0;return!1},hasSpaces:function(e,t,n){return At(e,(n=n||{}).backwards?t-1:t,n)!==t},getAlignmentSize:Nt,getIndentSize:function(e,t){const n=e.lastIndexOf("\n");return-1===n?0:Nt(e.slice(n+1).match(/^[\t ]*/)[0],t)},getPreferredQuote:kt,printString:function(e,t,n){const r=e.slice(1,-1),s=!r.includes('"')&&!r.includes("'"),i="json"===t.parser?'"':t.__isInHtmlAttribute?"'":kt(e,t.singleQuote?"'":'"');return n?s?i+r+i:e:It(r,i,!("css"===t.parser||"less"===t.parser||"scss"===t.parser||t.embeddedInHtml))},printNumber:function(e){return e.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/,"$1$2$3").replace(/^([+-]?[\d.]+)e[+-]?0+$/,"$1").replace(/^([+-])?\./,"$10.").replace(/(\.\d+?)0+(?=e|$)/,"$1").replace(/\.(?=e|$)/,"")},isNodeIgnoreComment:function(e){return"prettier-ignore"===e.value.trim()},makeString:It,addLeadingComment:function(e,t){t.leading=!0,t.trailing=!1,Lt(e,t)},addDanglingComment:function(e,t,n){t.leading=!1,t.trailing=!1,n&&(t.marker=n),Lt(e,t)},addTrailingComment:function(e,t){t.leading=!1,t.trailing=!0,Lt(e,t)},isFrontMatterNode:function(e){return e&&"front-matter"===e.type},getShebang:function(e){if(!e.startsWith("#!"))return"";const t=e.indexOf("\n");return-1===t?e:e.slice(0,t)}},_t={guessEndOfLine:function(e){const t=e.indexOf("\r");return t>=0?"\n"===e.charAt(t+1)?"crlf":"cr":"lf"},convertEndOfLineToChars:function(e){switch(e){case"cr":return"\r";case"crlf":return"\r\n";default:return"\n"}},countEndOfLineChars:function(e,t){let n;if("\n"===t)n=/\n/g;else if("\r"===t)n=/\r/g;else{if("\r\n"!==t)throw new Error('Unexpected "eol" '.concat(JSON.stringify(t),"."));n=/\r\n/g}const r=e.match(n);return r?r.length:0},normalizeEndOfLine:function(e){return e.replace(/\r\n?/g,"\n")}};const{getStringWidth:Mt}=Ot,{convertEndOfLineToChars:Rt}=_t,{concat:jt,fill:qt,cursor:Ut}=ee;let $t;function Vt(e,t){return zt(e,{type:"indent"},t)}function Wt(e,t,n){return t===-1/0?e.root||{value:"",length:0,queue:[]}:t<0?zt(e,{type:"dedent"},n):t?"root"===t.type?Object.assign({},e,{root:e}):zt(e,{type:"string"==typeof t?"stringAlign":"numberAlign",n:t},n):e}function zt(e,t,n){const r="dedent"===t.type?e.queue.slice(0,-1):e.queue.concat(t);let s="",i=0,a=0,o=0;for(const e of r)switch(e.type){case"indent":l(),n.useTabs?u(1):c(n.tabWidth);break;case"stringAlign":l(),s+=e.n,i+=e.n.length;break;case"numberAlign":a+=1,o+=e.n;break;default:throw new Error("Unexpected type '".concat(e.type,"'"))}return p(),Object.assign({},e,{value:s,length:i,queue:r});function u(e){s+="\t".repeat(e),i+=n.tabWidth*e}function c(e){s+=" ".repeat(e),i+=e}function l(){n.useTabs?(a>0&&u(a),h()):p()}function p(){o>0&&c(o),h()}function h(){a=0,o=0}}function Ht(e){if(0===e.length)return 0;let t=0;for(;e.length>0&&"string"==typeof e[e.length-1]&&e[e.length-1].match(/^[\t ]*$/);)t+=e.pop().length;if(e.length&&"string"==typeof e[e.length-1]){const n=e[e.length-1].replace(/[\t ]*$/,"");t+=e[e.length-1].length-n.length,e[e.length-1]=n}return t}function Gt(e,t,n,r,s){let i=t.length;const a=[e],o=[];for(;n>=0;){if(0===a.length){if(0===i)return!0;a.push(t[i-1]),i--;continue}const[e,u,c]=a.pop();if("string"==typeof c)o.push(c),n-=Mt(c);else switch(c.type){case"concat":for(let t=c.parts.length-1;t>=0;t--)a.push([e,u,c.parts[t]]);break;case"indent":a.push([Vt(e,r),u,c.contents]);break;case"align":a.push([Wt(e,c.n,r),u,c.contents]);break;case"trim":n+=Ht(o);break;case"group":if(s&&c.break)return!1;a.push([e,c.break?1:u,c.contents]),c.id&&($t[c.id]=a[a.length-1][1]);break;case"fill":for(let t=c.parts.length-1;t>=0;t--)a.push([e,u,c.parts[t]]);break;case"if-break":{const t=c.groupId?$t[c.groupId]:u;1===t&&c.breakContents&&a.push([e,u,c.breakContents]),2===t&&c.flatContents&&a.push([e,u,c.flatContents]);break}case"line":switch(u){case 2:if(!c.hard){c.soft||(o.push(" "),n-=1);break}return!0;case 1:return!0}}}return!1}var Xt={printDocToString:function(e,t){$t={};const n=t.printWidth,r=Rt(t.endOfLine);let s=0;const i=[[{value:"",length:0,queue:[]},1,e]],a=[];let o=!1,u=[];for(;0!==i.length;){const[e,c,l]=i.pop();if("string"==typeof l){const e="\n"!==r&&l.includes("\n")?l.replace(/\n/g,r):l;a.push(e),s+=Mt(e)}else switch(l.type){case"cursor":a.push(Ut.placeholder);break;case"concat":for(let t=l.parts.length-1;t>=0;t--)i.push([e,c,l.parts[t]]);break;case"indent":i.push([Vt(e,t),c,l.contents]);break;case"align":i.push([Wt(e,l.n,t),c,l.contents]);break;case"trim":s-=Ht(a);break;case"group":switch(c){case 2:if(!o){i.push([e,l.break?1:2,l.contents]);break}case 1:{o=!1;const r=[e,2,l.contents],a=n-s;if(!l.break&&Gt(r,i,a,t))i.push(r);else if(l.expandedStates){const n=l.expandedStates[l.expandedStates.length-1];if(l.break){i.push([e,1,n]);break}for(let r=1;r<l.expandedStates.length+1;r++){if(r>=l.expandedStates.length){i.push([e,1,n]);break}{const n=[e,2,l.expandedStates[r]];if(Gt(n,i,a,t)){i.push(n);break}}}}else i.push([e,1,l.contents]);break}}l.id&&($t[l.id]=i[i.length-1][1]);break;case"fill":{const r=n-s,{parts:a}=l;if(0===a.length)break;const[o,u]=a,p=[e,2,o],h=[e,1,o],d=Gt(p,[],r,t,!0);if(1===a.length){d?i.push(p):i.push(h);break}const f=[e,2,u],D=[e,1,u];if(2===a.length){d?(i.push(f),i.push(p)):(i.push(D),i.push(h));break}a.splice(0,2);const m=[e,c,qt(a)],g=a[0];Gt([e,2,jt([o,u,g])],[],r,t,!0)?(i.push(m),i.push(f),i.push(p)):d?(i.push(m),i.push(D),i.push(p)):(i.push(m),i.push(D),i.push(h));break}case"if-break":{const t=l.groupId?$t[l.groupId]:c;1===t&&l.breakContents&&i.push([e,c,l.breakContents]),2===t&&l.flatContents&&i.push([e,c,l.flatContents]);break}case"line-suffix":u.push([e,c,l.contents]);break;case"line-suffix-boundary":u.length>0&&i.push([e,c,{type:"line",hard:!0}]);break;case"line":switch(c){case 2:if(!l.hard){l.soft||(a.push(" "),s+=1);break}o=!0;case 1:if(u.length){i.push([e,c,l]),i.push(...u.reverse()),u=[];break}l.literal?e.root?(a.push(r,e.root.value),s=e.root.length):(a.push(r),s=0):(s-=Ht(a),a.push(r+e.value),s=e.length)}}0===i.length&&u.length&&(i.push(...u.reverse()),u=[])}const c=a.indexOf(Ut.placeholder);if(-1!==c){const e=a.indexOf(Ut.placeholder,c+1),t=a.slice(0,c).join(""),n=a.slice(c+1,e).join("");return{formatted:t+n+a.slice(e+1).join(""),cursorNodeStart:t.length,cursorNodeText:n}}return{formatted:a.join("")}}};const{literalline:Jt,concat:Kt}=ee,Yt={};function Qt(e,t,n,r){const s=[e];for(;0!==s.length;){const e=s.pop();if(e!==Yt){if(n&&s.push(e,Yt),!t||!1!==t(e))if("concat"===e.type||"fill"===e.type)for(let t=e.parts.length-1;t>=0;--t)s.push(e.parts[t]);else if("if-break"===e.type)e.flatContents&&s.push(e.flatContents),e.breakContents&&s.push(e.breakContents);else if("group"===e.type&&e.expandedStates)if(r)for(let t=e.expandedStates.length-1;t>=0;--t)s.push(e.expandedStates[t]);else s.push(e.contents);else e.contents&&s.push(e.contents)}else n(s.pop())}}function Zt(e,t){if("concat"===e.type||"fill"===e.type){const n=e.parts.map((e=>Zt(e,t)));return t(Object.assign({},e,{parts:n}))}if("if-break"===e.type){const n=e.breakContents&&Zt(e.breakContents,t),r=e.flatContents&&Zt(e.flatContents,t);return t(Object.assign({},e,{breakContents:n,flatContents:r}))}if(e.contents){const n=Zt(e.contents,t);return t(Object.assign({},e,{contents:n}))}return t(e)}function en(e,t,n){let r=n,s=!1;return Qt(e,(function(e){const n=t(e);if(void 0!==n&&(s=!0,r=n),s)return!1})),r}function tn(e){return"string"!=typeof e&&("line"===e.type||void 0)}function nn(e){return!("group"!==e.type||!e.break)||!("line"!==e.type||!e.hard)||"break-parent"===e.type||void 0}function rn(e){if(e.length>0){const t=e[e.length-1];t.expandedStates||(t.break=!0)}return null}function sn(e){return"line"!==e.type||e.hard?"if-break"===e.type?e.flatContents||"":e:e.soft?"":" "}function an(e){const t=[],n=e.filter(Boolean);for(;0!==n.length;){const e=n.shift();e&&("concat"!==e.type?0===t.length||"string"!=typeof t[t.length-1]||"string"!=typeof e?t.push(e):t[t.length-1]+=e:n.unshift(...e.parts))}return t}function on(e){if("concat"===e.type){const t=[];for(let n=0;n<e.parts.length;++n){const r=e.parts[n];if("string"!=typeof r&&"concat"===r.type)t.push(...on(r).parts);else{const e=on(r);""!==e&&t.push(e)}}return Object.assign({},e,{parts:t})}return"if-break"===e.type?Object.assign({},e,{breakContents:null!=e.breakContents?on(e.breakContents):null,flatContents:null!=e.flatContents?on(e.flatContents):null}):"group"===e.type?Object.assign({},e,{contents:on(e.contents),expandedStates:e.expandedStates?e.expandedStates.map(on):e.expandedStates}):e.contents?Object.assign({},e,{contents:on(e.contents)}):e}function un(e){if("string"==typeof e)return JSON.stringify(e);if("line"===e.type)return e.literal?"literalline":e.hard?"hardline":e.soft?"softline":"line";if("break-parent"===e.type)return"breakParent";if("trim"===e.type)return"trim";if("concat"===e.type)return"["+e.parts.map(un).join(", ")+"]";if("indent"===e.type)return"indent("+un(e.contents)+")";if("align"===e.type)return e.n===-1/0?"dedentToRoot("+un(e.contents)+")":e.n<0?"dedent("+un(e.contents)+")":"root"===e.n.type?"markAsRoot("+un(e.contents)+")":"align("+JSON.stringify(e.n)+", "+un(e.contents)+")";if("if-break"===e.type)return"ifBreak("+un(e.breakContents)+(e.flatContents?", "+un(e.flatContents):"")+")";if("group"===e.type)return e.expandedStates?"conditionalGroup(["+e.expandedStates.map(un).join(",")+"])":(e.break?"wrappedGroup":"group")+"("+un(e.contents)+")";if("fill"===e.type)return"fill("+e.parts.map(un).join(", ")+")";if("line-suffix"===e.type)return"lineSuffix("+un(e.contents)+")";if("line-suffix-boundary"===e.type)return"lineSuffixBoundary";throw new Error("Unknown doc type "+e.type)}var cn={builders:ee,printer:Xt,utils:{isEmpty:function(e){return"string"==typeof e&&0===e.length},willBreak:function(e){return en(e,nn,!1)},isLineNext:function(e){return en(e,tn,!1)},traverseDoc:Qt,findInDoc:en,mapDoc:Zt,propagateBreaks:function(e){const t=new Set,n=[];Qt(e,(function(e){if("break-parent"===e.type&&rn(n),"group"===e.type){if(n.push(e),t.has(e))return!1;t.add(e)}}),(function(e){"group"===e.type&&n.pop().break&&rn(n)}),!0)},removeLines:function(e){return Zt(e,sn)},stripTrailingHardline:function e(t,n=!1){if("concat"===t.type&&0!==t.parts.length){const r=n?function(e){let t,{parts:n}=e;for(let r=e.parts.length;r>0&&!t;r--)t=n[r-1];return"group"===t.type&&(n=t.contents.parts),n}(t):t.parts,s=r[r.length-1];if("concat"===s.type)return 2===s.parts.length&&s.parts[0].hard&&"break-parent"===s.parts[1].type?{type:"concat",parts:r.slice(0,-1)}:{type:"concat",parts:t.parts.slice(0,-1).concat(e(s))}}return t},normalizeParts:an,normalizeDoc:function(e){return Zt(e,(e=>e.parts?Object.assign({},e,{parts:an(e.parts)}):e))},replaceNewlinesWithLiterallines:function(e){return Zt(e,(e=>"string"==typeof e&&e.includes("\n")?Kt(e.split(/(\n)/g).map(((e,t)=>t%2==0?e:Jt))):e))}},debug:{printDocToDebug:e=>un(on(e))}};const ln=()=>!1,pn=()=>"";var hn={existsSync:ln,readFileSync:pn},dn=Object.freeze({__proto__:null,existsSync:ln,readFileSync:pn,default:hn});function fn(e){if("string"!=typeof e)throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}function Dn(e,t){for(var n,r="",s=0,i=-1,a=0,o=0;o<=e.length;++o){if(o<e.length)n=e.charCodeAt(o);else{if(47===n)break;n=47}if(47===n){if(i===o-1||1===a);else if(i!==o-1&&2===a){if(r.length<2||2!==s||46!==r.charCodeAt(r.length-1)||46!==r.charCodeAt(r.length-2))if(r.length>2){var u=r.lastIndexOf("/");if(u!==r.length-1){-1===u?(r="",s=0):s=(r=r.slice(0,u)).length-1-r.lastIndexOf("/"),i=o,a=0;continue}}else if(2===r.length||1===r.length){r="",s=0,i=o,a=0;continue}t&&(r.length>0?r+="/..":r="..",s=2)}else r.length>0?r+="/"+e.slice(i+1,o):r=e.slice(i+1,o),s=o-i-1;i=o,a=0}else 46===n&&-1!==a?++a:a=-1}return r}var mn={resolve:function(){for(var e,t="",n=!1,r=arguments.length-1;r>=-1&&!n;r--){var s;r>=0?s=arguments[r]:(void 0===e&&(e=Ie.cwd()),s=e),fn(s),0!==s.length&&(t=s+"/"+t,n=47===s.charCodeAt(0))}return t=Dn(t,!n),n?t.length>0?"/"+t:"/":t.length>0?t:"."},normalize:function(e){if(fn(e),0===e.length)return".";var t=47===e.charCodeAt(0),n=47===e.charCodeAt(e.length-1);return 0!==(e=Dn(e,!t)).length||t||(e="."),e.length>0&&n&&(e+="/"),t?"/"+e:e},isAbsolute:function(e){return fn(e),e.length>0&&47===e.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var e,t=0;t<arguments.length;++t){var n=arguments[t];fn(n),n.length>0&&(void 0===e?e=n:e+="/"+n)}return void 0===e?".":mn.normalize(e)},relative:function(e,t){if(fn(e),fn(t),e===t)return"";if((e=mn.resolve(e))===(t=mn.resolve(t)))return"";for(var n=1;n<e.length&&47===e.charCodeAt(n);++n);for(var r=e.length,s=r-n,i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var a=t.length-i,o=s<a?s:a,u=-1,c=0;c<=o;++c){if(c===o){if(a>o){if(47===t.charCodeAt(i+c))return t.slice(i+c+1);if(0===c)return t.slice(i+c)}else s>o&&(47===e.charCodeAt(n+c)?u=c:0===c&&(u=0));break}var l=e.charCodeAt(n+c);if(l!==t.charCodeAt(i+c))break;47===l&&(u=c)}var p="";for(c=n+u+1;c<=r;++c)c!==r&&47!==e.charCodeAt(c)||(0===p.length?p+="..":p+="/..");return p.length>0?p+t.slice(i+u):(i+=u,47===t.charCodeAt(i)&&++i,t.slice(i))},_makeLong:function(e){return e},dirname:function(e){if(fn(e),0===e.length)return".";for(var t=e.charCodeAt(0),n=47===t,r=-1,s=!0,i=e.length-1;i>=1;--i)if(47===(t=e.charCodeAt(i))){if(!s){r=i;break}}else s=!1;return-1===r?n?"/":".":n&&1===r?"//":e.slice(0,r)},basename:function(e,t){if(void 0!==t&&"string"!=typeof t)throw new TypeError('"ext" argument must be a string');fn(e);var n,r=0,s=-1,i=!0;if(void 0!==t&&t.length>0&&t.length<=e.length){if(t.length===e.length&&t===e)return"";var a=t.length-1,o=-1;for(n=e.length-1;n>=0;--n){var u=e.charCodeAt(n);if(47===u){if(!i){r=n+1;break}}else-1===o&&(i=!1,o=n+1),a>=0&&(u===t.charCodeAt(a)?-1==--a&&(s=n):(a=-1,s=o))}return r===s?s=o:-1===s&&(s=e.length),e.slice(r,s)}for(n=e.length-1;n>=0;--n)if(47===e.charCodeAt(n)){if(!i){r=n+1;break}}else-1===s&&(i=!1,s=n+1);return-1===s?"":e.slice(r,s)},extname:function(e){fn(e);for(var t=-1,n=0,r=-1,s=!0,i=0,a=e.length-1;a>=0;--a){var o=e.charCodeAt(a);if(47!==o)-1===r&&(s=!1,r=a+1),46===o?-1===t?t=a:1!==i&&(i=1):-1!==t&&(i=-1);else if(!s){n=a+1;break}}return-1===t||-1===r||0===i||1===i&&t===r-1&&t===n+1?"":e.slice(t,r)},format:function(e){if(null===e||"object"!=typeof e)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof e);return function(e,t){var n=t.dir||t.root,r=t.base||(t.name||"")+(t.ext||"");return n?n===t.root?n+r:n+"/"+r:r}(0,e)},parse:function(e){fn(e);var t={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return t;var n,r=e.charCodeAt(0),s=47===r;s?(t.root="/",n=1):n=0;for(var i=-1,a=0,o=-1,u=!0,c=e.length-1,l=0;c>=n;--c)if(47!==(r=e.charCodeAt(c)))-1===o&&(u=!1,o=c+1),46===r?-1===i?i=c:1!==l&&(l=1):-1!==i&&(l=-1);else if(!u){a=c+1;break}return-1===i||-1===o||0===l||1===l&&i===o-1&&i===a+1?-1!==o&&(t.base=t.name=0===a&&s?e.slice(1,o):e.slice(a,o)):(0===a&&s?(t.name=e.slice(1,i),t.base=e.slice(1,o)):(t.name=e.slice(a,i),t.base=e.slice(a,o)),t.ext=e.slice(i,o)),a>0?t.dir=e.slice(0,a-1):s&&(t.dir="/"),t},sep:"/",delimiter:":",win32:null,posix:null};mn.posix=mn;var gn=mn,yn=Object.freeze(Object.assign(Object.create(null),gn,{default:gn,__moduleExports:gn})),En=[],Cn=[],An="undefined"!=typeof Uint8Array?Uint8Array:Array,bn=!1;function Fn(){bn=!0;for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t=0,n=e.length;t<n;++t)En[t]=e[t],Cn[e.charCodeAt(t)]=t;Cn["-".charCodeAt(0)]=62,Cn["_".charCodeAt(0)]=63}function xn(e,t,n){for(var r,s,i=[],a=t;a<n;a+=3)r=(e[a]<<16)+(e[a+1]<<8)+e[a+2],i.push(En[(s=r)>>18&63]+En[s>>12&63]+En[s>>6&63]+En[63&s]);return i.join("")}function vn(e){var t;bn||Fn();for(var n=e.length,r=n%3,s="",i=[],a=16383,o=0,u=n-r;o<u;o+=a)i.push(xn(e,o,o+a>u?u:o+a));return 1===r?(t=e[n-1],s+=En[t>>2],s+=En[t<<4&63],s+="=="):2===r&&(t=(e[n-2]<<8)+e[n-1],s+=En[t>>10],s+=En[t>>4&63],s+=En[t<<2&63],s+="="),i.push(s),i.join("")}function Sn(e,t,n,r,s){var i,a,o=8*s-r-1,u=(1<<o)-1,c=u>>1,l=-7,p=n?s-1:0,h=n?-1:1,d=e[t+p];for(p+=h,i=d&(1<<-l)-1,d>>=-l,l+=o;l>0;i=256*i+e[t+p],p+=h,l-=8);for(a=i&(1<<-l)-1,i>>=-l,l+=r;l>0;a=256*a+e[t+p],p+=h,l-=8);if(0===i)i=1-c;else{if(i===u)return a?NaN:1/0*(d?-1:1);a+=Math.pow(2,r),i-=c}return(d?-1:1)*a*Math.pow(2,i-r)}function Tn(e,t,n,r,s,i){var a,o,u,c=8*i-s-1,l=(1<<c)-1,p=l>>1,h=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:i-1,f=r?1:-1,D=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,a=l):(a=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-a))<1&&(a--,u*=2),(t+=a+p>=1?h/u:h*Math.pow(2,1-p))*u>=2&&(a++,u/=2),a+p>=l?(o=0,a=l):a+p>=1?(o=(t*u-1)*Math.pow(2,s),a+=p):(o=t*Math.pow(2,p-1)*Math.pow(2,s),a=0));s>=8;e[n+d]=255&o,d+=f,o/=256,s-=8);for(a=a<<s|o,c+=s;c>0;e[n+d]=255&a,d+=f,a/=256,c-=8);e[n+d-f]|=128*D}var wn={}.toString,Bn=Array.isArray||function(e){return"[object Array]"==wn.call(e)};function Pn(){return kn.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function Nn(e,t){if(Pn()<t)throw new RangeError("Invalid typed array length");return kn.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=kn.prototype:(null===e&&(e=new kn(t)),e.length=t),e}function kn(e,t,n){if(!(kn.TYPED_ARRAY_SUPPORT||this instanceof kn))return new kn(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return On(this,e)}return In(this,e,t,n)}function In(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");return t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r),kn.TYPED_ARRAY_SUPPORT?(e=t).__proto__=kn.prototype:e=_n(e,t),e}(e,t,n,r):"string"==typeof t?function(e,t,n){if("string"==typeof n&&""!==n||(n="utf8"),!kn.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|jn(t,n),s=(e=Nn(e,r)).write(t,n);return s!==r&&(e=e.slice(0,s)),e}(e,t,n):function(e,t){if(Rn(t)){var n=0|Mn(t.length);return 0===(e=Nn(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?Nn(e,0):_n(e,t);if("Buffer"===t.type&&Bn(t.data))return _n(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function Ln(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function On(e,t){if(Ln(t),e=Nn(e,t<0?0:0|Mn(t)),!kn.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function _n(e,t){var n=t.length<0?0:0|Mn(t.length);e=Nn(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function Mn(e){if(e>=Pn())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Pn().toString(16)+" bytes");return 0|e}function Rn(e){return!(null==e||!e._isBuffer)}function jn(e,t){if(Rn(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return hr(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return dr(e).length;default:if(r)return hr(e).length;t=(""+t).toLowerCase(),r=!0}}function qn(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return tr(this,t,n);case"utf8":case"utf-8":return Yn(this,t,n);case"ascii":return Zn(this,t,n);case"latin1":case"binary":return er(this,t,n);case"base64":return Kn(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return nr(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function Un(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function $n(e,t,n,r,s){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=s?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(s)return-1;n=e.length-1}else if(n<0){if(!s)return-1;n=0}if("string"==typeof t&&(t=kn.from(t,r)),Rn(t))return 0===t.length?-1:Vn(e,t,n,r,s);if("number"==typeof t)return t&=255,kn.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):Vn(e,[t],n,r,s);throw new TypeError("val must be string, number or Buffer")}function Vn(e,t,n,r,s){var i,a=1,o=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;a=2,o/=2,u/=2,n/=2}function c(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(s){var l=-1;for(i=n;i<o;i++)if(c(e,i)===c(t,-1===l?0:i-l)){if(-1===l&&(l=i),i-l+1===u)return l*a}else-1!==l&&(i-=i-l),l=-1}else for(n+u>o&&(n=o-u),i=n;i>=0;i--){for(var p=!0,h=0;h<u;h++)if(c(e,i+h)!==c(t,h)){p=!1;break}if(p)return i}return-1}function Wn(e,t,n,r){n=Number(n)||0;var s=e.length-n;r?(r=Number(r))>s&&(r=s):r=s;var i=t.length;if(i%2!=0)throw new TypeError("Invalid hex string");r>i/2&&(r=i/2);for(var a=0;a<r;++a){var o=parseInt(t.substr(2*a,2),16);if(isNaN(o))return a;e[n+a]=o}return a}function zn(e,t,n,r){return fr(hr(t,e.length-n),e,n,r)}function Hn(e,t,n,r){return fr(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function Gn(e,t,n,r){return Hn(e,t,n,r)}function Xn(e,t,n,r){return fr(dr(t),e,n,r)}function Jn(e,t,n,r){return fr(function(e,t){for(var n,r,s,i=[],a=0;a<e.length&&!((t-=2)<0);++a)r=(n=e.charCodeAt(a))>>8,s=n%256,i.push(s),i.push(r);return i}(t,e.length-n),e,n,r)}function Kn(e,t,n){return 0===t&&n===e.length?vn(e):vn(e.slice(t,n))}function Yn(e,t,n){n=Math.min(e.length,n);for(var r=[],s=t;s<n;){var i,a,o,u,c=e[s],l=null,p=c>239?4:c>223?3:c>191?2:1;if(s+p<=n)switch(p){case 1:c<128&&(l=c);break;case 2:128==(192&(i=e[s+1]))&&(u=(31&c)<<6|63&i)>127&&(l=u);break;case 3:i=e[s+1],a=e[s+2],128==(192&i)&&128==(192&a)&&(u=(15&c)<<12|(63&i)<<6|63&a)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:i=e[s+1],a=e[s+2],o=e[s+3],128==(192&i)&&128==(192&a)&&128==(192&o)&&(u=(15&c)<<18|(63&i)<<12|(63&a)<<6|63&o)>65535&&u<1114112&&(l=u)}null===l?(l=65533,p=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),s+=p}return function(e){var t=e.length;if(t<=Qn)return String.fromCharCode.apply(String,e);for(var n="",r=0;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=Qn));return n}(r)}kn.TYPED_ARRAY_SUPPORT=void 0===ce.TYPED_ARRAY_SUPPORT||ce.TYPED_ARRAY_SUPPORT,kn.poolSize=8192,kn._augment=function(e){return e.__proto__=kn.prototype,e},kn.from=function(e,t,n){return In(null,e,t,n)},kn.TYPED_ARRAY_SUPPORT&&(kn.prototype.__proto__=Uint8Array.prototype,kn.__proto__=Uint8Array),kn.alloc=function(e,t,n){return function(e,t,n,r){return Ln(t),t<=0?Nn(e,t):void 0!==n?"string"==typeof r?Nn(e,t).fill(n,r):Nn(e,t).fill(n):Nn(e,t)}(null,e,t,n)},kn.allocUnsafe=function(e){return On(null,e)},kn.allocUnsafeSlow=function(e){return On(null,e)},kn.isBuffer=function(e){return null!=e&&(!!e._isBuffer||Dr(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&Dr(e.slice(0,0))}(e))},kn.compare=function(e,t){if(!Rn(e)||!Rn(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,s=0,i=Math.min(n,r);s<i;++s)if(e[s]!==t[s]){n=e[s],r=t[s];break}return n<r?-1:r<n?1:0},kn.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},kn.concat=function(e,t){if(!Bn(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return kn.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=kn.allocUnsafe(t),s=0;for(n=0;n<e.length;++n){var i=e[n];if(!Rn(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,s),s+=i.length}return r},kn.byteLength=jn,kn.prototype._isBuffer=!0,kn.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)Un(this,t,t+1);return this},kn.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)Un(this,t,t+3),Un(this,t+1,t+2);return this},kn.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)Un(this,t,t+7),Un(this,t+1,t+6),Un(this,t+2,t+5),Un(this,t+3,t+4);return this},kn.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?Yn(this,0,e):qn.apply(this,arguments)},kn.prototype.equals=function(e){if(!Rn(e))throw new TypeError("Argument must be a Buffer");return this===e||0===kn.compare(this,e)},kn.prototype.inspect=function(){var e="";return this.length>0&&(e=this.toString("hex",0,50).match(/.{2}/g).join(" "),this.length>50&&(e+=" ... ")),"<Buffer "+e+">"},kn.prototype.compare=function(e,t,n,r,s){if(!Rn(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),t<0||n>e.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&t>=n)return 0;if(r>=s)return-1;if(t>=n)return 1;if(this===e)return 0;for(var i=(s>>>=0)-(r>>>=0),a=(n>>>=0)-(t>>>=0),o=Math.min(i,a),u=this.slice(r,s),c=e.slice(t,n),l=0;l<o;++l)if(u[l]!==c[l]){i=u[l],a=c[l];break}return i<a?-1:a<i?1:0},kn.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},kn.prototype.indexOf=function(e,t,n){return $n(this,e,t,n,!0)},kn.prototype.lastIndexOf=function(e,t,n){return $n(this,e,t,n,!1)},kn.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var s=this.length-t;if((void 0===n||n>s)&&(n=s),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var i=!1;;)switch(r){case"hex":return Wn(this,e,t,n);case"utf8":case"utf-8":return zn(this,e,t,n);case"ascii":return Hn(this,e,t,n);case"latin1":case"binary":return Gn(this,e,t,n);case"base64":return Xn(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Jn(this,e,t,n);default:if(i)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),i=!0}},kn.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var Qn=4096;function Zn(e,t,n){var r="";n=Math.min(e.length,n);for(var s=t;s<n;++s)r+=String.fromCharCode(127&e[s]);return r}function er(e,t,n){var r="";n=Math.min(e.length,n);for(var s=t;s<n;++s)r+=String.fromCharCode(e[s]);return r}function tr(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var s="",i=t;i<n;++i)s+=pr(e[i]);return s}function nr(e,t,n){for(var r=e.slice(t,n),s="",i=0;i<r.length;i+=2)s+=String.fromCharCode(r[i]+256*r[i+1]);return s}function rr(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function sr(e,t,n,r,s,i){if(!Rn(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>s||t<i)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function ir(e,t,n,r){t<0&&(t=65535+t+1);for(var s=0,i=Math.min(e.length-n,2);s<i;++s)e[n+s]=(t&255<<8*(r?s:1-s))>>>8*(r?s:1-s)}function ar(e,t,n,r){t<0&&(t=4294967295+t+1);for(var s=0,i=Math.min(e.length-n,4);s<i;++s)e[n+s]=t>>>8*(r?s:3-s)&255}function or(e,t,n,r,s,i){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function ur(e,t,n,r,s){return s||or(e,0,n,4),Tn(e,t,n,r,23,4),n+4}function cr(e,t,n,r,s){return s||or(e,0,n,8),Tn(e,t,n,r,52,8),n+8}kn.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),kn.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=kn.prototype;else{var s=t-e;n=new kn(s,void 0);for(var i=0;i<s;++i)n[i]=this[i+e]}return n},kn.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||rr(e,t,this.length);for(var r=this[e],s=1,i=0;++i<t&&(s*=256);)r+=this[e+i]*s;return r},kn.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||rr(e,t,this.length);for(var r=this[e+--t],s=1;t>0&&(s*=256);)r+=this[e+--t]*s;return r},kn.prototype.readUInt8=function(e,t){return t||rr(e,1,this.length),this[e]},kn.prototype.readUInt16LE=function(e,t){return t||rr(e,2,this.length),this[e]|this[e+1]<<8},kn.prototype.readUInt16BE=function(e,t){return t||rr(e,2,this.length),this[e]<<8|this[e+1]},kn.prototype.readUInt32LE=function(e,t){return t||rr(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},kn.prototype.readUInt32BE=function(e,t){return t||rr(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},kn.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||rr(e,t,this.length);for(var r=this[e],s=1,i=0;++i<t&&(s*=256);)r+=this[e+i]*s;return r>=(s*=128)&&(r-=Math.pow(2,8*t)),r},kn.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||rr(e,t,this.length);for(var r=t,s=1,i=this[e+--r];r>0&&(s*=256);)i+=this[e+--r]*s;return i>=(s*=128)&&(i-=Math.pow(2,8*t)),i},kn.prototype.readInt8=function(e,t){return t||rr(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},kn.prototype.readInt16LE=function(e,t){t||rr(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},kn.prototype.readInt16BE=function(e,t){t||rr(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},kn.prototype.readInt32LE=function(e,t){return t||rr(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},kn.prototype.readInt32BE=function(e,t){return t||rr(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},kn.prototype.readFloatLE=function(e,t){return t||rr(e,4,this.length),Sn(this,e,!0,23,4)},kn.prototype.readFloatBE=function(e,t){return t||rr(e,4,this.length),Sn(this,e,!1,23,4)},kn.prototype.readDoubleLE=function(e,t){return t||rr(e,8,this.length),Sn(this,e,!0,52,8)},kn.prototype.readDoubleBE=function(e,t){return t||rr(e,8,this.length),Sn(this,e,!1,52,8)},kn.prototype.writeUIntLE=function(e,t,n,r){e=+e,t|=0,n|=0,r||sr(this,e,t,n,Math.pow(2,8*n)-1,0);var s=1,i=0;for(this[t]=255&e;++i<n&&(s*=256);)this[t+i]=e/s&255;return t+n},kn.prototype.writeUIntBE=function(e,t,n,r){e=+e,t|=0,n|=0,r||sr(this,e,t,n,Math.pow(2,8*n)-1,0);var s=n-1,i=1;for(this[t+s]=255&e;--s>=0&&(i*=256);)this[t+s]=e/i&255;return t+n},kn.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||sr(this,e,t,1,255,0),kn.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},kn.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||sr(this,e,t,2,65535,0),kn.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):ir(this,e,t,!0),t+2},kn.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||sr(this,e,t,2,65535,0),kn.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):ir(this,e,t,!1),t+2},kn.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||sr(this,e,t,4,4294967295,0),kn.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):ar(this,e,t,!0),t+4},kn.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||sr(this,e,t,4,4294967295,0),kn.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):ar(this,e,t,!1),t+4},kn.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var s=Math.pow(2,8*n-1);sr(this,e,t,n,s-1,-s)}var i=0,a=1,o=0;for(this[t]=255&e;++i<n&&(a*=256);)e<0&&0===o&&0!==this[t+i-1]&&(o=1),this[t+i]=(e/a>>0)-o&255;return t+n},kn.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var s=Math.pow(2,8*n-1);sr(this,e,t,n,s-1,-s)}var i=n-1,a=1,o=0;for(this[t+i]=255&e;--i>=0&&(a*=256);)e<0&&0===o&&0!==this[t+i+1]&&(o=1),this[t+i]=(e/a>>0)-o&255;return t+n},kn.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||sr(this,e,t,1,127,-128),kn.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},kn.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||sr(this,e,t,2,32767,-32768),kn.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):ir(this,e,t,!0),t+2},kn.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||sr(this,e,t,2,32767,-32768),kn.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):ir(this,e,t,!1),t+2},kn.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||sr(this,e,t,4,2147483647,-2147483648),kn.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):ar(this,e,t,!0),t+4},kn.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||sr(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),kn.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):ar(this,e,t,!1),t+4},kn.prototype.writeFloatLE=function(e,t,n){return ur(this,e,t,!0,n)},kn.prototype.writeFloatBE=function(e,t,n){return ur(this,e,t,!1,n)},kn.prototype.writeDoubleLE=function(e,t,n){return cr(this,e,t,!0,n)},kn.prototype.writeDoubleBE=function(e,t,n){return cr(this,e,t,!1,n)},kn.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var s,i=r-n;if(this===e&&n<t&&t<r)for(s=i-1;s>=0;--s)e[s+t]=this[s+n];else if(i<1e3||!kn.TYPED_ARRAY_SUPPORT)for(s=0;s<i;++s)e[s+t]=this[s+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+i),t);return i},kn.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var s=e.charCodeAt(0);s<256&&(e=s)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!kn.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{var a=Rn(e)?e:hr(new kn(e,r).toString()),o=a.length;for(i=0;i<n-t;++i)this[i+t]=a[i%o]}return this};var lr=/[^+\/0-9A-Za-z-_]/g;function pr(e){return e<16?"0"+e.toString(16):e.toString(16)}function hr(e,t){var n;t=t||1/0;for(var r=e.length,s=null,i=[],a=0;a<r;++a){if((n=e.charCodeAt(a))>55295&&n<57344){if(!s){if(n>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(a+1===r){(t-=3)>-1&&i.push(239,191,189);continue}s=n;continue}if(n<56320){(t-=3)>-1&&i.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(t-=3)>-1&&i.push(239,191,189);if(s=null,n<128){if((t-=1)<0)break;i.push(n)}else if(n<2048){if((t-=2)<0)break;i.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;i.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return i}function dr(e){return function(e){var t,n,r,s,i,a;bn||Fn();var o=e.length;if(o%4>0)throw new Error("Invalid string. Length must be a multiple of 4");i="="===e[o-2]?2:"="===e[o-1]?1:0,a=new An(3*o/4-i),r=i>0?o-4:o;var u=0;for(t=0,n=0;t<r;t+=4,n+=3)s=Cn[e.charCodeAt(t)]<<18|Cn[e.charCodeAt(t+1)]<<12|Cn[e.charCodeAt(t+2)]<<6|Cn[e.charCodeAt(t+3)],a[u++]=s>>16&255,a[u++]=s>>8&255,a[u++]=255&s;return 2===i?(s=Cn[e.charCodeAt(t)]<<2|Cn[e.charCodeAt(t+1)]>>4,a[u++]=255&s):1===i&&(s=Cn[e.charCodeAt(t)]<<10|Cn[e.charCodeAt(t+1)]<<4|Cn[e.charCodeAt(t+2)]>>2,a[u++]=s>>8&255,a[u++]=255&s),a}(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(lr,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function fr(e,t,n,r){for(var s=0;s<r&&!(s+n>=t.length||s>=e.length);++s)t[s+n]=e[s];return s}function Dr(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}var mr=Re(dn);class gr extends Error{}class yr extends Error{}class Er extends Error{}var Cr={ConfigError:gr,DebugError:yr,UndefinedParserError:Er},Ar=function(e,t){return(Ar=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},br=function(){return(br=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};function Fr(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function xr(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,s,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(s)throw s.error}}return a}function vr(e){return this instanceof vr?(this.v=e,this):new vr(e)}var Sr=Object.freeze({__proto__:null,__extends:function(e,t){function n(){this.constructor=e}Ar(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)},get __assign(){return br},__rest:function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n},__decorate:function(e,t,n,r){var s,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(a=(i<3?s(a):i>3?s(t,n,a):s(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a},__param:function(e,t){return function(n,r){t(n,r,e)}},__metadata:function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},__awaiter:function(e,t,n,r){return new(n||(n=Promise))((function(s,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,o)}u((r=r.apply(e,t||[])).next())}))},__generator:function(e,t){var n,r,s,i,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){a.label=i[1];break}if(6===i[0]&&a.label<s[1]){a.label=s[1],s=i;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(i);break}s[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}},__createBinding:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]},__exportStar:function(e,t){for(var n in e)"default"===n||t.hasOwnProperty(n)||(t[n]=e[n])},__values:Fr,__read:xr,__spread:function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(xr(arguments[t]));return e},__spreadArrays:function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),s=0;for(t=0;t<n;t++)for(var i=arguments[t],a=0,o=i.length;a<o;a++,s++)r[s]=i[a];return r},__await:vr,__asyncGenerator:function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(e,t||[]),i=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(e){s[e]&&(r[e]=function(t){return new Promise((function(n,r){i.push([e,t,n,r])>1||o(e,t)}))})}function o(e,t){try{(n=s[e](t)).value instanceof vr?Promise.resolve(n.value.v).then(u,c):l(i[0][2],n)}catch(e){l(i[0][3],e)}var n}function u(e){o("next",e)}function c(e){o("throw",e)}function l(e,t){e(t),i.shift(),i.length&&o(i[0][0],i[0][1])}},__asyncDelegator:function(e){var t,n;return t={},r("next"),r("throw",(function(e){throw e})),r("return"),t[Symbol.iterator]=function(){return this},t;function r(r,s){t[r]=e[r]?function(t){return(n=!n)?{value:vr(e[r](t)),done:"return"===r}:s?s(t):t}:s}},__asyncValues:function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e=Fr(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise((function(r,s){!function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n})}),t)}(r,s,(t=e[n](t)).done,t.value)}))}}},__makeTemplateObject:function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},__importStar:function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},__importDefault:function(e){return e&&e.__esModule?e:{default:e}},__classPrivateFieldGet:function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)},__classPrivateFieldSet:function(e,t,n){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,n),n}}),Tr=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.apiDescriptor={key:e=>/^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(e)?e:JSON.stringify(e),value(e){if(null===e||"object"!=typeof e)return JSON.stringify(e);if(Array.isArray(e))return"[".concat(e.map((e=>t.apiDescriptor.value(e))).join(", "),"]");const n=Object.keys(e);return 0===n.length?"{}":"{ ".concat(n.map((n=>"".concat(t.apiDescriptor.key(n),": ").concat(t.apiDescriptor.value(e[n])))).join(", ")," }")},pair:({key:e,value:n})=>t.apiDescriptor.value({[e]:n})}})),wr=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(Tr,t)})),Br=/[|\\{}()[\]^$+*?.]/g,Pr=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(Br,"\\$&")},Nr={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},kr=Me((function(e){var t={};for(var n in Nr)Nr.hasOwnProperty(n)&&(t[Nr[n]]=n);var r=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var s in r)if(r.hasOwnProperty(s)){if(!("channels"in r[s]))throw new Error("missing channels property: "+s);if(!("labels"in r[s]))throw new Error("missing channel labels property: "+s);if(r[s].labels.length!==r[s].channels)throw new Error("channel and label counts mismatch: "+s);var i=r[s].channels,a=r[s].labels;delete r[s].channels,delete r[s].labels,Object.defineProperty(r[s],"channels",{value:i}),Object.defineProperty(r[s],"labels",{value:a})}r.rgb.hsl=function(e){var t,n,r=e[0]/255,s=e[1]/255,i=e[2]/255,a=Math.min(r,s,i),o=Math.max(r,s,i),u=o-a;return o===a?t=0:r===o?t=(s-i)/u:s===o?t=2+(i-r)/u:i===o&&(t=4+(r-s)/u),(t=Math.min(60*t,360))<0&&(t+=360),n=(a+o)/2,[t,100*(o===a?0:n<=.5?u/(o+a):u/(2-o-a)),100*n]},r.rgb.hsv=function(e){var t,n,r,s,i,a=e[0]/255,o=e[1]/255,u=e[2]/255,c=Math.max(a,o,u),l=c-Math.min(a,o,u),p=function(e){return(c-e)/6/l+.5};return 0===l?s=i=0:(i=l/c,t=p(a),n=p(o),r=p(u),a===c?s=r-n:o===c?s=1/3+t-r:u===c&&(s=2/3+n-t),s<0?s+=1:s>1&&(s-=1)),[360*s,100*i,100*c]},r.rgb.hwb=function(e){var t=e[0],n=e[1],s=e[2];return[r.rgb.hsl(e)[0],1/255*Math.min(t,Math.min(n,s))*100,100*(s=1-1/255*Math.max(t,Math.max(n,s)))]},r.rgb.cmyk=function(e){var t,n=e[0]/255,r=e[1]/255,s=e[2]/255;return[100*((1-n-(t=Math.min(1-n,1-r,1-s)))/(1-t)||0),100*((1-r-t)/(1-t)||0),100*((1-s-t)/(1-t)||0),100*t]},r.rgb.keyword=function(e){var n=t[e];if(n)return n;var r,s,i,a=1/0;for(var o in Nr)if(Nr.hasOwnProperty(o)){var u=(s=e,i=Nr[o],Math.pow(s[0]-i[0],2)+Math.pow(s[1]-i[1],2)+Math.pow(s[2]-i[2],2));u<a&&(a=u,r=o)}return r},r.keyword.rgb=function(e){return Nr[e]},r.rgb.xyz=function(e){var t=e[0]/255,n=e[1]/255,r=e[2]/255;return[100*(.4124*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.3576*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)+.1805*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)),100*(.2126*t+.7152*n+.0722*r),100*(.0193*t+.1192*n+.9505*r)]},r.rgb.lab=function(e){var t=r.rgb.xyz(e),n=t[0],s=t[1],i=t[2];return s/=100,i/=108.883,n=(n/=95.047)>.008856?Math.pow(n,1/3):7.787*n+16/116,[116*(s=s>.008856?Math.pow(s,1/3):7.787*s+16/116)-16,500*(n-s),200*(s-(i=i>.008856?Math.pow(i,1/3):7.787*i+16/116))]},r.hsl.rgb=function(e){var t,n,r,s,i,a=e[0]/360,o=e[1]/100,u=e[2]/100;if(0===o)return[i=255*u,i,i];t=2*u-(n=u<.5?u*(1+o):u+o-u*o),s=[0,0,0];for(var c=0;c<3;c++)(r=a+1/3*-(c-1))<0&&r++,r>1&&r--,i=6*r<1?t+6*(n-t)*r:2*r<1?n:3*r<2?t+(n-t)*(2/3-r)*6:t,s[c]=255*i;return s},r.hsl.hsv=function(e){var t=e[0],n=e[1]/100,r=e[2]/100,s=n,i=Math.max(r,.01);return n*=(r*=2)<=1?r:2-r,s*=i<=1?i:2-i,[t,100*(0===r?2*s/(i+s):2*n/(r+n)),(r+n)/2*100]},r.hsv.rgb=function(e){var t=e[0]/60,n=e[1]/100,r=e[2]/100,s=Math.floor(t)%6,i=t-Math.floor(t),a=255*r*(1-n),o=255*r*(1-n*i),u=255*r*(1-n*(1-i));switch(r*=255,s){case 0:return[r,u,a];case 1:return[o,r,a];case 2:return[a,r,u];case 3:return[a,o,r];case 4:return[u,a,r];case 5:return[r,a,o]}},r.hsv.hsl=function(e){var t,n,r,s=e[0],i=e[1]/100,a=e[2]/100,o=Math.max(a,.01);return r=(2-i)*a,n=i*o,[s,100*(n=(n/=(t=(2-i)*o)<=1?t:2-t)||0),100*(r/=2)]},r.hwb.rgb=function(e){var t,n,r,s,i,a,o,u=e[0]/360,c=e[1]/100,l=e[2]/100,p=c+l;switch(p>1&&(c/=p,l/=p),r=6*u-(t=Math.floor(6*u)),0!=(1&t)&&(r=1-r),s=c+r*((n=1-l)-c),t){default:case 6:case 0:i=n,a=s,o=c;break;case 1:i=s,a=n,o=c;break;case 2:i=c,a=n,o=s;break;case 3:i=c,a=s,o=n;break;case 4:i=s,a=c,o=n;break;case 5:i=n,a=c,o=s}return[255*i,255*a,255*o]},r.cmyk.rgb=function(e){var t=e[0]/100,n=e[1]/100,r=e[2]/100,s=e[3]/100;return[255*(1-Math.min(1,t*(1-s)+s)),255*(1-Math.min(1,n*(1-s)+s)),255*(1-Math.min(1,r*(1-s)+s))]},r.xyz.rgb=function(e){var t,n,r,s=e[0]/100,i=e[1]/100,a=e[2]/100;return n=-.9689*s+1.8758*i+.0415*a,r=.0557*s+-.204*i+1.057*a,t=(t=3.2406*s+-1.5372*i+-.4986*a)>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r,[255*(t=Math.min(Math.max(0,t),1)),255*(n=Math.min(Math.max(0,n),1)),255*(r=Math.min(Math.max(0,r),1))]},r.xyz.lab=function(e){var t=e[0],n=e[1],r=e[2];return n/=100,r/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116)-16,500*(t-n),200*(n-(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116))]},r.lab.xyz=function(e){var t,n,r,s=e[0];t=e[1]/500+(n=(s+16)/116),r=n-e[2]/200;var i=Math.pow(n,3),a=Math.pow(t,3),o=Math.pow(r,3);return n=i>.008856?i:(n-16/116)/7.787,t=a>.008856?a:(t-16/116)/7.787,r=o>.008856?o:(r-16/116)/7.787,[t*=95.047,n*=100,r*=108.883]},r.lab.lch=function(e){var t,n=e[0],r=e[1],s=e[2];return(t=360*Math.atan2(s,r)/2/Math.PI)<0&&(t+=360),[n,Math.sqrt(r*r+s*s),t]},r.lch.lab=function(e){var t,n=e[0],r=e[1];return t=e[2]/360*2*Math.PI,[n,r*Math.cos(t),r*Math.sin(t)]},r.rgb.ansi16=function(e){var t=e[0],n=e[1],s=e[2],i=1 in arguments?arguments[1]:r.rgb.hsv(e)[2];if(0===(i=Math.round(i/50)))return 30;var a=30+(Math.round(s/255)<<2|Math.round(n/255)<<1|Math.round(t/255));return 2===i&&(a+=60),a},r.hsv.ansi16=function(e){return r.rgb.ansi16(r.hsv.rgb(e),e[2])},r.rgb.ansi256=function(e){var t=e[0],n=e[1],r=e[2];return t===n&&n===r?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5)},r.ansi16.rgb=function(e){var t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];var n=.5*(1+~~(e>50));return[(1&t)*n*255,(t>>1&1)*n*255,(t>>2&1)*n*255]},r.ansi256.rgb=function(e){if(e>=232){var t=10*(e-232)+8;return[t,t,t]}var n;return e-=16,[Math.floor(e/36)/5*255,Math.floor((n=e%36)/6)/5*255,n%6/5*255]},r.rgb.hex=function(e){var t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},r.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];var n=t[0];3===t[0].length&&(n=n.split("").map((function(e){return e+e})).join(""));var r=parseInt(n,16);return[r>>16&255,r>>8&255,255&r]},r.rgb.hcg=function(e){var t,n=e[0]/255,r=e[1]/255,s=e[2]/255,i=Math.max(Math.max(n,r),s),a=Math.min(Math.min(n,r),s),o=i-a;return t=o<=0?0:i===n?(r-s)/o%6:i===r?2+(s-n)/o:4+(n-r)/o+4,t/=6,[360*(t%=1),100*o,100*(o<1?a/(1-o):0)]},r.hsl.hcg=function(e){var t,n=e[1]/100,r=e[2]/100,s=0;return(t=r<.5?2*n*r:2*n*(1-r))<1&&(s=(r-.5*t)/(1-t)),[e[0],100*t,100*s]},r.hsv.hcg=function(e){var t=e[1]/100,n=e[2]/100,r=t*n,s=0;return r<1&&(s=(n-r)/(1-r)),[e[0],100*r,100*s]},r.hcg.rgb=function(e){var t=e[0]/360,n=e[1]/100,r=e[2]/100;if(0===n)return[255*r,255*r,255*r];var s,i=[0,0,0],a=t%1*6,o=a%1,u=1-o;switch(Math.floor(a)){case 0:i[0]=1,i[1]=o,i[2]=0;break;case 1:i[0]=u,i[1]=1,i[2]=0;break;case 2:i[0]=0,i[1]=1,i[2]=o;break;case 3:i[0]=0,i[1]=u,i[2]=1;break;case 4:i[0]=o,i[1]=0,i[2]=1;break;default:i[0]=1,i[1]=0,i[2]=u}return s=(1-n)*r,[255*(n*i[0]+s),255*(n*i[1]+s),255*(n*i[2]+s)]},r.hcg.hsv=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t),r=0;return n>0&&(r=t/n),[e[0],100*r,100*n]},r.hcg.hsl=function(e){var t=e[1]/100,n=e[2]/100*(1-t)+.5*t,r=0;return n>0&&n<.5?r=t/(2*n):n>=.5&&n<1&&(r=t/(2*(1-n))),[e[0],100*r,100*n]},r.hcg.hwb=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t);return[e[0],100*(n-t),100*(1-n)]},r.hwb.hcg=function(e){var t=e[1]/100,n=1-e[2]/100,r=n-t,s=0;return r<1&&(s=(n-r)/(1-r)),[e[0],100*r,100*s]},r.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},r.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},r.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},r.gray.hsl=r.gray.hsv=function(e){return[0,0,e[0]]},r.gray.hwb=function(e){return[0,100,e[0]]},r.gray.cmyk=function(e){return[0,0,0,e[0]]},r.gray.lab=function(e){return[e[0],0,0]},r.gray.hex=function(e){var t=255&Math.round(e[0]/100*255),n=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(n.length)+n},r.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}}));function Ir(e,t){return function(n){return t(e(n))}}function Lr(e,t){for(var n=[t[e].parent,e],r=kr[t[e].parent][e],s=t[e].parent;t[s].parent;)n.unshift(t[s].parent),r=Ir(kr[t[s].parent][s],r),s=t[s].parent;return r.conversion=n,r}var Or={};Object.keys(kr).forEach((function(e){Or[e]={},Object.defineProperty(Or[e],"channels",{value:kr[e].channels}),Object.defineProperty(Or[e],"labels",{value:kr[e].labels});var t=function(e){for(var t=function(e){var t=function(){for(var e={},t=Object.keys(kr),n=t.length,r=0;r<n;r++)e[t[r]]={distance:-1,parent:null};return e}(),n=[e];for(t[e].distance=0;n.length;)for(var r=n.pop(),s=Object.keys(kr[r]),i=s.length,a=0;a<i;a++){var o=s[a],u=t[o];-1===u.distance&&(u.distance=t[r].distance+1,u.parent=r,n.unshift(o))}return t}(e),n={},r=Object.keys(t),s=r.length,i=0;i<s;i++){var a=r[i];null!==t[a].parent&&(n[a]=Lr(a,t))}return n}(e);Object.keys(t).forEach((function(n){var r=t[n];Or[e][n]=function(e){var t=function(t){if(null==t)return t;arguments.length>1&&(t=Array.prototype.slice.call(arguments));var n=e(t);if("object"==typeof n)for(var r=n.length,s=0;s<r;s++)n[s]=Math.round(n[s]);return n};return"conversion"in e&&(t.conversion=e.conversion),t}(r),Or[e][n].raw=function(e){var t=function(t){return null==t?t:(arguments.length>1&&(t=Array.prototype.slice.call(arguments)),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(r)}))}));var _r=Or,Mr=Me((function(e){const t=(e,t)=>function(){const n=e.apply(_r,arguments);return"[".concat(n+t,"m")},n=(e,t)=>function(){const n=e.apply(_r,arguments);return"[".concat(38+t,";5;").concat(n,"m")},r=(e,t)=>function(){const n=e.apply(_r,arguments);return"[".concat(38+t,";2;").concat(n[0],";").concat(n[1],";").concat(n[2],"m")};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){const e=new Map,s={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};s.color.grey=s.color.gray;for(const t of Object.keys(s)){const n=s[t];for(const t of Object.keys(n)){const r=n[t];s[t]={open:"[".concat(r[0],"m"),close:"[".concat(r[1],"m")},n[t]=s[t],e.set(r[0],r[1])}Object.defineProperty(s,t,{value:n,enumerable:!1}),Object.defineProperty(s,"codes",{value:e,enumerable:!1})}const i=e=>e,a=(e,t,n)=>[e,t,n];s.color.close="[39m",s.bgColor.close="[49m",s.color.ansi={ansi:t(i,0)},s.color.ansi256={ansi256:n(i,0)},s.color.ansi16m={rgb:r(a,0)},s.bgColor.ansi={ansi:t(i,10)},s.bgColor.ansi256={ansi256:n(i,10)},s.bgColor.ansi16m={rgb:r(a,10)};for(let e of Object.keys(_r)){if("object"!=typeof _r[e])continue;const i=_r[e];"ansi16"===e&&(e="ansi"),"ansi16"in i&&(s.color.ansi[e]=t(i.ansi16,0),s.bgColor.ansi[e]=t(i.ansi16,10)),"ansi256"in i&&(s.color.ansi256[e]=n(i.ansi256,0),s.bgColor.ansi256[e]=n(i.ansi256,10)),"rgb"in i&&(s.color.ansi16m[e]=r(i.rgb,0),s.bgColor.ansi16m[e]=r(i.rgb,10))}return s}})})),Rr=(e,t)=>{t=t||Ie.argv;const n=e.startsWith("-")?"":1===e.length?"-":"--",r=t.indexOf(n+e),s=t.indexOf("--");return-1!==r&&(-1===s||r<s)},jr=Re(Object.freeze({__proto__:null,default:{EOL:"\n",platform:()=>"browser",cpus:()=>[{model:"Prettier"}]}}));const qr=Ie.env;let Ur;function $r(e){return function(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}(function(e){if(!1===Ur)return 0;if(Rr("color=16m")||Rr("color=full")||Rr("color=truecolor"))return 3;if(Rr("color=256"))return 2;if(e&&!e.isTTY&&!0!==Ur)return 0;const t=Ur?1:0;if("win32"===Ie.platform){const e=jr.release().split(".");return Number(Ie.versions.node.split(".")[0])>=8&&Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in qr)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some((e=>e in qr))||"codeship"===qr.CI_NAME?1:t;if("TEAMCITY_VERSION"in qr)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(qr.TEAMCITY_VERSION)?1:0;if("truecolor"===qr.COLORTERM)return 3;if("TERM_PROGRAM"in qr){const e=parseInt((qr.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(qr.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(qr.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(qr.TERM)||"COLORTERM"in qr?1:(qr.TERM,t)}(e))}Rr("no-color")||Rr("no-colors")||Rr("color=false")?Ur=!1:(Rr("color")||Rr("colors")||Rr("color=true")||Rr("color=always"))&&(Ur=!0),"FORCE_COLOR"in qr&&(Ur=0===qr.FORCE_COLOR.length||0!==parseInt(qr.FORCE_COLOR,10));var Vr={supportsColor:$r,stdout:$r(Ie.stdout),stderr:$r(Ie.stderr)};const Wr=/(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,zr=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,Hr=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,Gr=/\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi,Xr=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e",""],["a",""]]);function Jr(e){return"u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):Xr.get(e)||e}function Kr(e,t){const n=[],r=t.trim().split(/\s*,\s*/g);let s;for(const t of r)if(isNaN(t)){if(!(s=t.match(Hr)))throw new Error("Invalid Chalk template style argument: ".concat(t," (in style '").concat(e,"')"));n.push(s[2].replace(Gr,((e,t,n)=>t?Jr(t):n)))}else n.push(Number(t));return n}function Yr(e){zr.lastIndex=0;const t=[];let n;for(;null!==(n=zr.exec(e));){const e=n[1];if(n[2]){const r=Kr(e,n[2]);t.push([e].concat(r))}else t.push([e])}return t}function Qr(e,t){const n={};for(const e of t)for(const t of e.styles)n[t[0]]=e.inverse?null:t.slice(1);let r=e;for(const e of Object.keys(n))if(Array.isArray(n[e])){if(!(e in r))throw new Error("Unknown Chalk style: ".concat(e));r=n[e].length>0?r[e].apply(r,n[e]):r[e]}return r}var Zr=(e,t)=>{const n=[],r=[];let s=[];if(t.replace(Wr,((t,i,a,o,u,c)=>{if(i)s.push(Jr(i));else if(o){const t=s.join("");s=[],r.push(0===n.length?t:Qr(e,n)(t)),n.push({inverse:a,styles:Yr(o)})}else if(u){if(0===n.length)throw new Error("Found extraneous } in Chalk template literal");r.push(Qr(e,n)(s.join(""))),s=[],n.pop()}else s.push(c)})),r.push(s.join("")),n.length>0){const e="Chalk template literal is missing ".concat(n.length," closing bracket").concat(1===n.length?"":"s"," (`}`)");throw new Error(e)}return r.join("")},es=Me((function(e){const t=Vr.stdout,n="win32"===Ie.platform&&!(Ie.env.TERM||"").toLowerCase().startsWith("xterm"),r=["ansi","ansi","ansi256","ansi16m"],s=new Set(["gray"]),i=Object.create(null);function a(e,n){n=n||{};const r=t?t.level:0;e.level=void 0===n.level?r:n.level,e.enabled="enabled"in n?n.enabled:e.level>0}function o(e){if(!this||!(this instanceof o)||this.template){const t={};return a(t,e),t.template=function(){const e=[].slice.call(arguments);return p.apply(null,[t.template].concat(e))},Object.setPrototypeOf(t,o.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=o,t.template}a(this,e)}n&&(Mr.blue.open="[94m");for(const e of Object.keys(Mr))Mr[e].closeRe=new RegExp(Pr(Mr[e].close),"g"),i[e]={get(){const t=Mr[e];return c.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}};i.visible={get(){return c.call(this,this._styles||[],!0,"visible")}},Mr.color.closeRe=new RegExp(Pr(Mr.color.close),"g");for(const e of Object.keys(Mr.color.ansi))s.has(e)||(i[e]={get(){const t=this.level;return function(){const n={open:Mr.color[r[t]][e].apply(null,arguments),close:Mr.color.close,closeRe:Mr.color.closeRe};return c.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}});Mr.bgColor.closeRe=new RegExp(Pr(Mr.bgColor.close),"g");for(const e of Object.keys(Mr.bgColor.ansi))s.has(e)||(i["bg"+e[0].toUpperCase()+e.slice(1)]={get(){const t=this.level;return function(){const n={open:Mr.bgColor[r[t]][e].apply(null,arguments),close:Mr.bgColor.close,closeRe:Mr.bgColor.closeRe};return c.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}});const u=Object.defineProperties((()=>{}),i);function c(e,t,n){const r=function(){return l.apply(r,arguments)};r._styles=e,r._empty=t;const s=this;return Object.defineProperty(r,"level",{enumerable:!0,get:()=>s.level,set(e){s.level=e}}),Object.defineProperty(r,"enabled",{enumerable:!0,get:()=>s.enabled,set(e){s.enabled=e}}),r.hasGrey=this.hasGrey||"gray"===n||"grey"===n,r.__proto__=u,r}function l(){const e=arguments,t=e.length;let r=String(arguments[0]);if(0===t)return"";if(t>1)for(let n=1;n<t;n++)r+=" "+e[n];if(!this.enabled||this.level<=0||!r)return this._empty?"":r;const s=Mr.dim.open;n&&this.hasGrey&&(Mr.dim.open="");for(const e of this._styles.slice().reverse())r=e.open+r.replace(e.closeRe,e.open)+e.close,r=r.replace(/\r?\n/g,"".concat(e.close,"$&").concat(e.open));return Mr.dim.open=s,r}function p(e,t){if(!Array.isArray(t))return[].slice.call(arguments,1).join(" ");const n=[].slice.call(arguments,2),r=[t.raw[0]];for(let e=1;e<t.length;e++)r.push(String(n[e-1]).replace(/[{}\\]/g,"\\$&")),r.push(String(t.raw[e]));return Zr(e,r.join(""))}Object.defineProperties(o.prototype,i),e.exports=o(),e.exports.supportsColor=t,e.exports.default=e.exports})),ts=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.commonDeprecatedHandler=(e,t,{descriptor:n})=>{const r=["".concat(es.default.yellow("string"==typeof e?n.key(e):n.pair(e))," is deprecated")];return t&&r.push("we now treat it as ".concat(es.default.blue("string"==typeof t?n.key(t):n.pair(t)))),r.join("; ")+"."}})),ns=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(ts,t)})),rs=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.commonInvalidHandler=(e,t,n)=>["Invalid ".concat(es.default.red(n.descriptor.key(e))," value."),"Expected ".concat(es.default.blue(n.schemas[e].expected(n)),","),"but received ".concat(es.default.red(n.descriptor.value(t)),".")].join(" ")})),ss=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(rs,t)})),is=[],as=[],os=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.levenUnknownHandler=(e,t,{descriptor:n,logger:r,schemas:s})=>{const i=["Ignored unknown option ".concat(es.default.yellow(n.pair({key:e,value:t})),".")],a=Object.keys(s).sort().find((t=>function(e,t){if(e===t)return 0;var n=e;e.length>t.length&&(e=t,t=n);var r=e.length,s=t.length;if(0===r)return s;if(0===s)return r;for(;r>0&&e.charCodeAt(~-r)===t.charCodeAt(~-s);)r--,s--;if(0===r)return s;for(var i,a,o,u,c=0;c<r&&e.charCodeAt(c)===t.charCodeAt(c);)c++;if(s-=c,0==(r-=c))return s;for(var l=0,p=0;l<r;)as[c+l]=e.charCodeAt(c+l),is[l]=++l;for(;p<s;)for(i=t.charCodeAt(c+p),o=p++,a=p,l=0;l<r;l++)u=i===as[c+l]?o:o+1,o=is[l],a=is[l]=o>a?u>a?a+1:u:u>o?o+1:u;return a}(e,t)<3));a&&i.push("Did you mean ".concat(es.default.blue(n.key(a)),"?")),r.warn(i.join(" "))}})),us=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(os,t)})),cs=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(ns,t),Sr.__exportStar(ss,t),Sr.__exportStar(us,t)})),ls=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});const n=["default","expected","validate","deprecated","forward","redirect","overlap","preprocess","postprocess"];function r(e,t){const r=new e(t),a=Object.create(r);for(const e of n)e in t&&(a[e]=i(t[e],r,s.prototype[e].length));return a}t.createSchema=r;class s{constructor(e){this.name=e.name}static create(e){return r(this,e)}default(e){}expected(e){return"nothing"}validate(e,t){return!1}deprecated(e,t){return!1}forward(e,t){}redirect(e,t){}overlap(e,t,n){return e}preprocess(e,t){return e}postprocess(e,t){return e}}function i(e,t,n){return"function"==typeof e?(...r)=>e(...r.slice(0,n-1),t,...r.slice(n-1)):()=>e}t.Schema=s})),ps=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends ls.Schema{constructor(e){super(e),this._sourceName=e.sourceName}expected(e){return e.schemas[this._sourceName].expected(e)}validate(e,t){return t.schemas[this._sourceName].validate(e,t)}redirect(e,t){return this._sourceName}}t.AliasSchema=n})),hs=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends ls.Schema{expected(){return"anything"}validate(){return!0}}t.AnySchema=n})),ds=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends ls.Schema{constructor(e){var{valueSchema:t,name:n=t.name}=e,r=Sr.__rest(e,["valueSchema","name"]);super(Object.assign({},r,{name:n})),this._valueSchema=t}expected(e){return"an array of ".concat(this._valueSchema.expected(e))}validate(e,t){if(!Array.isArray(e))return!1;const n=[];for(const r of e){const e=t.normalizeValidateResult(this._valueSchema.validate(r,t),r);!0!==e&&n.push(e.value)}return 0===n.length||{value:n}}deprecated(e,t){const n=[];for(const r of e){const e=t.normalizeDeprecatedResult(this._valueSchema.deprecated(r,t),r);!1!==e&&n.push(...e.map((({value:e})=>({value:[e]}))))}return n}forward(e,t){const n=[];for(const s of e){const e=t.normalizeForwardResult(this._valueSchema.forward(s,t),s);n.push(...e.map(r))}return n}redirect(e,t){const n=[],s=[];for(const i of e){const e=t.normalizeRedirectResult(this._valueSchema.redirect(i,t),i);"remain"in e&&n.push(e.remain),s.push(...e.redirect.map(r))}return 0===n.length?{redirect:s}:{redirect:s,remain:n}}overlap(e,t){return e.concat(t)}}function r({from:e,to:t}){return{from:[e],to:t}}t.ArraySchema=n})),fs=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends ls.Schema{expected(){return"true or false"}validate(e){return"boolean"==typeof e}}t.BooleanSchema=n})),Ds=Me((function(e,t){function n(e,t){return"string"==typeof e||"key"in e?{from:t,to:e}:"from"in e?{from:e.from,to:e.to}:{from:t,to:e.to}}function r(e,t){return void 0===e?[]:Array.isArray(e)?e.map((e=>n(e,t))):[n(e,t)]}Object.defineProperty(t,"__esModule",{value:!0}),t.recordFromArray=function(e,t){const n=Object.create(null);for(const r of e){const e=r[t];if(n[e])throw new Error("Duplicate ".concat(t," ").concat(JSON.stringify(e)));n[e]=r}return n},t.mapFromArray=function(e,t){const n=new Map;for(const r of e){const e=r[t];if(n.has(e))throw new Error("Duplicate ".concat(t," ").concat(JSON.stringify(e)));n.set(e,r)}return n},t.createAutoChecklist=function(){const e=Object.create(null);return t=>{const n=JSON.stringify(t);return!!e[n]||(e[n]=!0,!1)}},t.partition=function(e,t){const n=[],r=[];for(const s of e)t(s)?n.push(s):r.push(s);return[n,r]},t.isInt=function(e){return e===Math.floor(e)},t.comparePrimitive=function(e,t){if(e===t)return 0;const n=typeof e,r=typeof t,s=["undefined","object","boolean","number","string"];return n!==r?s.indexOf(n)-s.indexOf(r):"string"!==n?Number(e)-Number(t):e.localeCompare(t)},t.normalizeDefaultResult=function(e){return void 0===e?{}:e},t.normalizeValidateResult=function(e,t){return!0===e||(!1===e?{value:t}:e)},t.normalizeDeprecatedResult=function(e,t,n=!1){return!1!==e&&(!0===e?!!n||[{value:t}]:"value"in e?[e]:0!==e.length&&e)},t.normalizeTransferResult=n,t.normalizeForwardResult=r,t.normalizeRedirectResult=function(e,t){const n=r("object"==typeof e&&"redirect"in e?e.redirect:e,t);return 0===n.length?{remain:t,redirect:n}:"object"==typeof e&&"remain"in e?{remain:e.remain,redirect:n}:{redirect:n}}})),ms=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends ls.Schema{constructor(e){super(e),this._choices=Ds.mapFromArray(e.choices.map((e=>e&&"object"==typeof e?e:{value:e})),"value")}expected({descriptor:e}){const t=Array.from(this._choices.keys()).map((e=>this._choices.get(e))).filter((e=>!e.deprecated)).map((e=>e.value)).sort(Ds.comparePrimitive).map(e.value),n=t.slice(0,-2),r=t.slice(-2);return n.concat(r.join(" or ")).join(", ")}validate(e){return this._choices.has(e)}deprecated(e){const t=this._choices.get(e);return!(!t||!t.deprecated)&&{value:e}}forward(e){const t=this._choices.get(e);return t?t.forward:void 0}redirect(e){const t=this._choices.get(e);return t?t.redirect:void 0}}t.ChoiceSchema=n})),gs=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends ls.Schema{expected(){return"a number"}validate(e,t){return"number"==typeof e}}t.NumberSchema=n})),ys=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends gs.NumberSchema{expected(){return"an integer"}validate(e,t){return!0===t.normalizeValidateResult(super.validate(e,t),e)&&Ds.isInt(e)}}t.IntegerSchema=n})),Es=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends ls.Schema{expected(){return"a string"}validate(e){return"string"==typeof e}}t.StringSchema=n})),Cs=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(ps,t),Sr.__exportStar(hs,t),Sr.__exportStar(ds,t),Sr.__exportStar(fs,t),Sr.__exportStar(ms,t),Sr.__exportStar(ys,t),Sr.__exportStar(gs,t),Sr.__exportStar(Es,t)})),As=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.defaultDescriptor=Tr.apiDescriptor,t.defaultUnknownHandler=os.levenUnknownHandler,t.defaultInvalidHandler=ss.commonInvalidHandler,t.defaultDeprecatedHandler=ts.commonDeprecatedHandler})),bs=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.normalize=(e,t,r)=>new n(t,r).normalize(e);class n{constructor(e,t){const{logger:n=console,descriptor:r=As.defaultDescriptor,unknown:s=As.defaultUnknownHandler,invalid:i=As.defaultInvalidHandler,deprecated:a=As.defaultDeprecatedHandler}=t||{};this._utils={descriptor:r,logger:n||{warn:()=>{}},schemas:Ds.recordFromArray(e,"name"),normalizeDefaultResult:Ds.normalizeDefaultResult,normalizeDeprecatedResult:Ds.normalizeDeprecatedResult,normalizeForwardResult:Ds.normalizeForwardResult,normalizeRedirectResult:Ds.normalizeRedirectResult,normalizeValidateResult:Ds.normalizeValidateResult},this._unknownHandler=s,this._invalidHandler=i,this._deprecatedHandler=a,this.cleanHistory()}cleanHistory(){this._hasDeprecationWarned=Ds.createAutoChecklist()}normalize(e){const t={},n=[e],r=()=>{for(;0!==n.length;){const e=n.shift(),r=this._applyNormalization(e,t);n.push(...r)}};r();for(const e of Object.keys(this._utils.schemas)){const r=this._utils.schemas[e];if(!(e in t)){const t=Ds.normalizeDefaultResult(r.default(this._utils));"value"in t&&n.push({[e]:t.value})}}r();for(const e of Object.keys(this._utils.schemas)){const n=this._utils.schemas[e];e in t&&(t[e]=n.postprocess(t[e],this._utils))}return t}_applyNormalization(e,t){const n=[],[r,s]=Ds.partition(Object.keys(e),(e=>e in this._utils.schemas));for(const s of r){const r=this._utils.schemas[s],i=r.preprocess(e[s],this._utils),a=Ds.normalizeValidateResult(r.validate(i,this._utils),i);if(!0!==a){const{value:e}=a,t=this._invalidHandler(s,e,this._utils);throw"string"==typeof t?new Error(t):t}const o=({from:e,to:t})=>{n.push("string"==typeof t?{[t]:e}:{[t.key]:t.value})},u=({value:e,redirectTo:t})=>{const n=Ds.normalizeDeprecatedResult(r.deprecated(e,this._utils),i,!0);if(!1!==n)if(!0===n)this._hasDeprecationWarned(s)||this._utils.logger.warn(this._deprecatedHandler(s,t,this._utils));else for(const{value:e}of n){const n={key:s,value:e};if(!this._hasDeprecationWarned(n)){const r="string"==typeof t?{key:t,value:e}:t;this._utils.logger.warn(this._deprecatedHandler(n,r,this._utils))}}};Ds.normalizeForwardResult(r.forward(i,this._utils),i).forEach(o);const c=Ds.normalizeRedirectResult(r.redirect(i,this._utils),i);if(c.redirect.forEach(o),"remain"in c){const e=c.remain;t[s]=s in t?r.overlap(t[s],e,this._utils):e,u({value:e})}for(const{from:e,to:t}of c.redirect)u({value:e,redirectTo:t})}for(const r of s){const s=e[r],i=this._unknownHandler(r,s,this._utils);if(i)for(const e of Object.keys(i)){const r={[e]:i[e]};e in this._utils.schemas?n.push(r):Object.assign(t,r)}}return n}}t.Normalizer=n})),Fs=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(wr,t),Sr.__exportStar(cs,t),Sr.__exportStar(Cs,t),Sr.__exportStar(bs,t),Sr.__exportStar(ls,t)}));const xs=[],vs=[],Ss=(e,t)=>{if(e===t)return 0;const n=e;e.length>t.length&&(e=t,t=n);let r=e.length,s=t.length;for(;r>0&&e.charCodeAt(~-r)===t.charCodeAt(~-s);)r--,s--;let i,a,o,u,c=0;for(;c<r&&e.charCodeAt(c)===t.charCodeAt(c);)c++;if(r-=c,s-=c,0===r)return s;let l=0,p=0;for(;l<r;)vs[l]=e.charCodeAt(c+l),xs[l]=++l;for(;p<s;)for(i=t.charCodeAt(c+p),o=p++,a=p,l=0;l<r;l++)u=i===vs[l]?o:o+1,o=xs[l],a=xs[l]=o>a?u>a?a+1:u:u>o?o+1:u;return a};var Ts=Ss,ws=Ss;Ts.default=ws;var Bs={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};const Ps={};for(const e of Object.keys(Bs))Ps[Bs[e]]=e;const Ns={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};var ks=Ns;for(const e of Object.keys(Ns)){if(!("channels"in Ns[e]))throw new Error("missing channels property: "+e);if(!("labels"in Ns[e]))throw new Error("missing channel labels property: "+e);if(Ns[e].labels.length!==Ns[e].channels)throw new Error("channel and label counts mismatch: "+e);const{channels:t,labels:n}=Ns[e];delete Ns[e].channels,delete Ns[e].labels,Object.defineProperty(Ns[e],"channels",{value:t}),Object.defineProperty(Ns[e],"labels",{value:n})}function Is(e,t){return function(n){return t(e(n))}}function Ls(e,t){const n=[t[e].parent,e];let r=ks[t[e].parent][e],s=t[e].parent;for(;t[s].parent;)n.unshift(t[s].parent),r=Is(ks[t[s].parent][s],r),s=t[s].parent;return r.conversion=n,r}Ns.rgb.hsl=function(e){const t=e[0]/255,n=e[1]/255,r=e[2]/255,s=Math.min(t,n,r),i=Math.max(t,n,r),a=i-s;let o,u;i===s?o=0:t===i?o=(n-r)/a:n===i?o=2+(r-t)/a:r===i&&(o=4+(t-n)/a),o=Math.min(60*o,360),o<0&&(o+=360);const c=(s+i)/2;return u=i===s?0:c<=.5?a/(i+s):a/(2-i-s),[o,100*u,100*c]},Ns.rgb.hsv=function(e){let t,n,r,s,i;const a=e[0]/255,o=e[1]/255,u=e[2]/255,c=Math.max(a,o,u),l=c-Math.min(a,o,u),p=function(e){return(c-e)/6/l+.5};return 0===l?(s=0,i=0):(i=l/c,t=p(a),n=p(o),r=p(u),a===c?s=r-n:o===c?s=1/3+t-r:u===c&&(s=2/3+n-t),s<0?s+=1:s>1&&(s-=1)),[360*s,100*i,100*c]},Ns.rgb.hwb=function(e){const t=e[0],n=e[1];let r=e[2];const s=Ns.rgb.hsl(e)[0],i=1/255*Math.min(t,Math.min(n,r));return r=1-1/255*Math.max(t,Math.max(n,r)),[s,100*i,100*r]},Ns.rgb.cmyk=function(e){const t=e[0]/255,n=e[1]/255,r=e[2]/255,s=Math.min(1-t,1-n,1-r);return[100*((1-t-s)/(1-s)||0),100*((1-n-s)/(1-s)||0),100*((1-r-s)/(1-s)||0),100*s]},Ns.rgb.keyword=function(e){const t=Ps[e];if(t)return t;let n,r=1/0;for(const t of Object.keys(Bs)){const a=(i=Bs[t],((s=e)[0]-i[0])**2+(s[1]-i[1])**2+(s[2]-i[2])**2);a<r&&(r=a,n=t)}var s,i;return n},Ns.keyword.rgb=function(e){return Bs[e]},Ns.rgb.xyz=function(e){let t=e[0]/255,n=e[1]/255,r=e[2]/255;return t=t>.04045?((t+.055)/1.055)**2.4:t/12.92,n=n>.04045?((n+.055)/1.055)**2.4:n/12.92,r=r>.04045?((r+.055)/1.055)**2.4:r/12.92,[100*(.4124*t+.3576*n+.1805*r),100*(.2126*t+.7152*n+.0722*r),100*(.0193*t+.1192*n+.9505*r)]},Ns.rgb.lab=function(e){const t=Ns.rgb.xyz(e);let n=t[0],r=t[1],s=t[2];return n/=95.047,r/=100,s/=108.883,n=n>.008856?n**(1/3):7.787*n+16/116,r=r>.008856?r**(1/3):7.787*r+16/116,s=s>.008856?s**(1/3):7.787*s+16/116,[116*r-16,500*(n-r),200*(r-s)]},Ns.hsl.rgb=function(e){const t=e[0]/360,n=e[1]/100,r=e[2]/100;let s,i,a;if(0===n)return a=255*r,[a,a,a];s=r<.5?r*(1+n):r+n-r*n;const o=2*r-s,u=[0,0,0];for(let e=0;e<3;e++)i=t+1/3*-(e-1),i<0&&i++,i>1&&i--,a=6*i<1?o+6*(s-o)*i:2*i<1?s:3*i<2?o+(s-o)*(2/3-i)*6:o,u[e]=255*a;return u},Ns.hsl.hsv=function(e){const t=e[0];let n=e[1]/100,r=e[2]/100,s=n;const i=Math.max(r,.01);return r*=2,n*=r<=1?r:2-r,s*=i<=1?i:2-i,[t,100*(0===r?2*s/(i+s):2*n/(r+n)),(r+n)/2*100]},Ns.hsv.rgb=function(e){const t=e[0]/60,n=e[1]/100;let r=e[2]/100;const s=Math.floor(t)%6,i=t-Math.floor(t),a=255*r*(1-n),o=255*r*(1-n*i),u=255*r*(1-n*(1-i));switch(r*=255,s){case 0:return[r,u,a];case 1:return[o,r,a];case 2:return[a,r,u];case 3:return[a,o,r];case 4:return[u,a,r];case 5:return[r,a,o]}},Ns.hsv.hsl=function(e){const t=e[0],n=e[1]/100,r=e[2]/100,s=Math.max(r,.01);let i,a;a=(2-n)*r;const o=(2-n)*s;return i=n*s,i/=o<=1?o:2-o,i=i||0,a/=2,[t,100*i,100*a]},Ns.hwb.rgb=function(e){const t=e[0]/360;let n=e[1]/100,r=e[2]/100;const s=n+r;let i;s>1&&(n/=s,r/=s);const a=Math.floor(6*t),o=1-r;i=6*t-a,0!=(1&a)&&(i=1-i);const u=n+i*(o-n);let c,l,p;switch(a){default:case 6:case 0:c=o,l=u,p=n;break;case 1:c=u,l=o,p=n;break;case 2:c=n,l=o,p=u;break;case 3:c=n,l=u,p=o;break;case 4:c=u,l=n,p=o;break;case 5:c=o,l=n,p=u}return[255*c,255*l,255*p]},Ns.cmyk.rgb=function(e){const t=e[0]/100,n=e[1]/100,r=e[2]/100,s=e[3]/100;return[255*(1-Math.min(1,t*(1-s)+s)),255*(1-Math.min(1,n*(1-s)+s)),255*(1-Math.min(1,r*(1-s)+s))]},Ns.xyz.rgb=function(e){const t=e[0]/100,n=e[1]/100,r=e[2]/100;let s,i,a;return s=3.2406*t+-1.5372*n+-.4986*r,i=-.9689*t+1.8758*n+.0415*r,a=.0557*t+-.204*n+1.057*r,s=s>.0031308?1.055*s**(1/2.4)-.055:12.92*s,i=i>.0031308?1.055*i**(1/2.4)-.055:12.92*i,a=a>.0031308?1.055*a**(1/2.4)-.055:12.92*a,s=Math.min(Math.max(0,s),1),i=Math.min(Math.max(0,i),1),a=Math.min(Math.max(0,a),1),[255*s,255*i,255*a]},Ns.xyz.lab=function(e){let t=e[0],n=e[1],r=e[2];return t/=95.047,n/=100,r/=108.883,t=t>.008856?t**(1/3):7.787*t+16/116,n=n>.008856?n**(1/3):7.787*n+16/116,r=r>.008856?r**(1/3):7.787*r+16/116,[116*n-16,500*(t-n),200*(n-r)]},Ns.lab.xyz=function(e){let t,n,r;n=(e[0]+16)/116,t=e[1]/500+n,r=n-e[2]/200;const s=n**3,i=t**3,a=r**3;return n=s>.008856?s:(n-16/116)/7.787,t=i>.008856?i:(t-16/116)/7.787,r=a>.008856?a:(r-16/116)/7.787,t*=95.047,n*=100,r*=108.883,[t,n,r]},Ns.lab.lch=function(e){const t=e[0],n=e[1],r=e[2];let s;return s=360*Math.atan2(r,n)/2/Math.PI,s<0&&(s+=360),[t,Math.sqrt(n*n+r*r),s]},Ns.lch.lab=function(e){const t=e[0],n=e[1],r=e[2]/360*2*Math.PI;return[t,n*Math.cos(r),n*Math.sin(r)]},Ns.rgb.ansi16=function(e,t=null){const[n,r,s]=e;let i=null===t?Ns.rgb.hsv(e)[2]:t;if(i=Math.round(i/50),0===i)return 30;let a=30+(Math.round(s/255)<<2|Math.round(r/255)<<1|Math.round(n/255));return 2===i&&(a+=60),a},Ns.hsv.ansi16=function(e){return Ns.rgb.ansi16(Ns.hsv.rgb(e),e[2])},Ns.rgb.ansi256=function(e){const t=e[0],n=e[1],r=e[2];return t===n&&n===r?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5)},Ns.ansi16.rgb=function(e){let t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),t=t/10.5*255,[t,t,t];const n=.5*(1+~~(e>50));return[(1&t)*n*255,(t>>1&1)*n*255,(t>>2&1)*n*255]},Ns.ansi256.rgb=function(e){if(e>=232){const t=10*(e-232)+8;return[t,t,t]}let t;return e-=16,[Math.floor(e/36)/5*255,Math.floor((t=e%36)/6)/5*255,t%6/5*255]},Ns.rgb.hex=function(e){const t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},Ns.hex.rgb=function(e){const t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];let n=t[0];3===t[0].length&&(n=n.split("").map((e=>e+e)).join(""));const r=parseInt(n,16);return[r>>16&255,r>>8&255,255&r]},Ns.rgb.hcg=function(e){const t=e[0]/255,n=e[1]/255,r=e[2]/255,s=Math.max(Math.max(t,n),r),i=Math.min(Math.min(t,n),r),a=s-i;let o,u;return o=a<1?i/(1-a):0,u=a<=0?0:s===t?(n-r)/a%6:s===n?2+(r-t)/a:4+(t-n)/a,u/=6,u%=1,[360*u,100*a,100*o]},Ns.hsl.hcg=function(e){const t=e[1]/100,n=e[2]/100,r=n<.5?2*t*n:2*t*(1-n);let s=0;return r<1&&(s=(n-.5*r)/(1-r)),[e[0],100*r,100*s]},Ns.hsv.hcg=function(e){const t=e[1]/100,n=e[2]/100,r=t*n;let s=0;return r<1&&(s=(n-r)/(1-r)),[e[0],100*r,100*s]},Ns.hcg.rgb=function(e){const t=e[0]/360,n=e[1]/100,r=e[2]/100;if(0===n)return[255*r,255*r,255*r];const s=[0,0,0],i=t%1*6,a=i%1,o=1-a;let u=0;switch(Math.floor(i)){case 0:s[0]=1,s[1]=a,s[2]=0;break;case 1:s[0]=o,s[1]=1,s[2]=0;break;case 2:s[0]=0,s[1]=1,s[2]=a;break;case 3:s[0]=0,s[1]=o,s[2]=1;break;case 4:s[0]=a,s[1]=0,s[2]=1;break;default:s[0]=1,s[1]=0,s[2]=o}return u=(1-n)*r,[255*(n*s[0]+u),255*(n*s[1]+u),255*(n*s[2]+u)]},Ns.hcg.hsv=function(e){const t=e[1]/100,n=t+e[2]/100*(1-t);let r=0;return n>0&&(r=t/n),[e[0],100*r,100*n]},Ns.hcg.hsl=function(e){const t=e[1]/100,n=e[2]/100*(1-t)+.5*t;let r=0;return n>0&&n<.5?r=t/(2*n):n>=.5&&n<1&&(r=t/(2*(1-n))),[e[0],100*r,100*n]},Ns.hcg.hwb=function(e){const t=e[1]/100,n=t+e[2]/100*(1-t);return[e[0],100*(n-t),100*(1-n)]},Ns.hwb.hcg=function(e){const t=e[1]/100,n=1-e[2]/100,r=n-t;let s=0;return r<1&&(s=(n-r)/(1-r)),[e[0],100*r,100*s]},Ns.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},Ns.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},Ns.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},Ns.gray.hsl=function(e){return[0,0,e[0]]},Ns.gray.hsv=Ns.gray.hsl,Ns.gray.hwb=function(e){return[0,100,e[0]]},Ns.gray.cmyk=function(e){return[0,0,0,e[0]]},Ns.gray.lab=function(e){return[e[0],0,0]},Ns.gray.hex=function(e){const t=255&Math.round(e[0]/100*255),n=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(n.length)+n},Ns.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]};const Os={};Object.keys(ks).forEach((e=>{Os[e]={},Object.defineProperty(Os[e],"channels",{value:ks[e].channels}),Object.defineProperty(Os[e],"labels",{value:ks[e].labels});const t=function(e){const t=function(e){const t=function(){const e={},t=Object.keys(ks);for(let n=t.length,r=0;r<n;r++)e[t[r]]={distance:-1,parent:null};return e}(),n=[e];for(t[e].distance=0;n.length;){const e=n.pop(),r=Object.keys(ks[e]);for(let s=r.length,i=0;i<s;i++){const s=r[i],a=t[s];-1===a.distance&&(a.distance=t[e].distance+1,a.parent=e,n.unshift(s))}}return t}(e),n={},r=Object.keys(t);for(let e=r.length,s=0;s<e;s++){const e=r[s];null!==t[e].parent&&(n[e]=Ls(e,t))}return n}(e);Object.keys(t).forEach((n=>{const r=t[n];Os[e][n]=function(e){const t=function(...t){const n=t[0];if(null==n)return n;n.length>1&&(t=n);const r=e(t);if("object"==typeof r)for(let e=r.length,t=0;t<e;t++)r[t]=Math.round(r[t]);return r};return"conversion"in e&&(t.conversion=e.conversion),t}(r),Os[e][n].raw=function(e){const t=function(...t){const n=t[0];return null==n?n:(n.length>1&&(t=n),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(r)}))}));var _s=Os,Ms=Me((function(e){const t=(e,t)=>(...n)=>{const r=e(...n);return"[".concat(r+t,"m")},n=(e,t)=>(...n)=>{const r=e(...n);return"[".concat(38+t,";5;").concat(r,"m")},r=(e,t)=>(...n)=>{const r=e(...n);return"[".concat(38+t,";2;").concat(r[0],";").concat(r[1],";").concat(r[2],"m")},s=e=>e,i=(e,t,n)=>[e,t,n],a=(e,t,n)=>{Object.defineProperty(e,t,{get:()=>{const r=n();return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0}),r},enumerable:!0,configurable:!0})};let o;const u=(e,t,n,r)=>{void 0===o&&(o=_s);const s=r?10:0,i={};for(const[r,a]of Object.entries(o)){const o="ansi16"===r?"ansi":r;r===t?i[o]=e(n,s):"object"==typeof a&&(i[o]=e(a[t],s))}return i};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){const e=new Map,o={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};o.color.gray=o.color.blackBright,o.bgColor.bgGray=o.bgColor.bgBlackBright,o.color.grey=o.color.blackBright,o.bgColor.bgGrey=o.bgColor.bgBlackBright;for(const[t,n]of Object.entries(o)){for(const[t,r]of Object.entries(n))o[t]={open:"[".concat(r[0],"m"),close:"[".concat(r[1],"m")},n[t]=o[t],e.set(r[0],r[1]);Object.defineProperty(o,t,{value:n,enumerable:!1})}return Object.defineProperty(o,"codes",{value:e,enumerable:!1}),o.color.close="[39m",o.bgColor.close="[49m",a(o.color,"ansi",(()=>u(t,"ansi16",s,!1))),a(o.color,"ansi256",(()=>u(n,"ansi256",s,!1))),a(o.color,"ansi16m",(()=>u(r,"rgb",i,!1))),a(o.bgColor,"ansi",(()=>u(t,"ansi16",s,!0))),a(o.bgColor,"ansi256",(()=>u(n,"ansi256",s,!0))),a(o.bgColor,"ansi16m",(()=>u(r,"rgb",i,!0))),o}})})),Rs=(e,t=Ie.argv)=>{const n=e.startsWith("-")?"":1===e.length?"-":"--",r=t.indexOf(n+e),s=t.indexOf("--");return-1!==r&&(-1===s||r<s)},js=Re(Object.freeze({__proto__:null,default:{isatty:()=>!1}}));const{env:qs}=Ie;let Us;function $s(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function Vs(e,t){if(0===Us)return 0;if(Rs("color=16m")||Rs("color=full")||Rs("color=truecolor"))return 3;if(Rs("color=256"))return 2;if(e&&!t&&void 0===Us)return 0;const n=Us||0;if("dumb"===qs.TERM)return n;if("win32"===Ie.platform){const e=jr.release().split(".");return Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in qs)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some((e=>e in qs))||"codeship"===qs.CI_NAME?1:n;if("TEAMCITY_VERSION"in qs)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(qs.TEAMCITY_VERSION)?1:0;if("GITHUB_ACTIONS"in qs)return 1;if("truecolor"===qs.COLORTERM)return 3;if("TERM_PROGRAM"in qs){const e=parseInt((qs.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(qs.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(qs.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(qs.TERM)||"COLORTERM"in qs?1:n}Rs("no-color")||Rs("no-colors")||Rs("color=false")||Rs("color=never")?Us=0:(Rs("color")||Rs("colors")||Rs("color=true")||Rs("color=always"))&&(Us=1),"FORCE_COLOR"in qs&&(Us="true"===qs.FORCE_COLOR?1:"false"===qs.FORCE_COLOR?0:0===qs.FORCE_COLOR.length?1:Math.min(parseInt(qs.FORCE_COLOR,10),3));var Ws={supportsColor:function(e){return $s(Vs(e,e&&e.isTTY))},stdout:$s(Vs(!0,js.isatty(1))),stderr:$s(Vs(!0,js.isatty(2)))};const zs=/(?:\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,Hs=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,Gs=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,Xs=/\\(u(?:[a-f\d]{4}|{[a-f\d]{1,6}})|x[a-f\d]{2}|.)|([^\\])/gi,Js=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e",""],["a",""]]);function Ks(e){const t="u"===e[0],n="{"===e[1];return t&&!n&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):t&&n?String.fromCodePoint(parseInt(e.slice(2,-1),16)):Js.get(e)||e}function Ys(e,t){const n=[],r=t.trim().split(/\s*,\s*/g);let s;for(const t of r){const r=Number(t);if(Number.isNaN(r)){if(!(s=t.match(Gs)))throw new Error("Invalid Chalk template style argument: ".concat(t," (in style '").concat(e,"')"));n.push(s[2].replace(Xs,((e,t,n)=>t?Ks(t):n)))}else n.push(r)}return n}function Qs(e){Hs.lastIndex=0;const t=[];let n;for(;null!==(n=Hs.exec(e));){const e=n[1];if(n[2]){const r=Ys(e,n[2]);t.push([e].concat(r))}else t.push([e])}return t}function Zs(e,t){const n={};for(const e of t)for(const t of e.styles)n[t[0]]=e.inverse?null:t.slice(1);let r=e;for(const[e,t]of Object.entries(n))if(Array.isArray(t)){if(!(e in r))throw new Error("Unknown Chalk style: ".concat(e));r=t.length>0?r[e](...t):r[e]}return r}var ei=(e,t)=>{const n=[],r=[];let s=[];if(t.replace(zs,((t,i,a,o,u,c)=>{if(i)s.push(Ks(i));else if(o){const t=s.join("");s=[],r.push(0===n.length?t:Zs(e,n)(t)),n.push({inverse:a,styles:Qs(o)})}else if(u){if(0===n.length)throw new Error("Found extraneous } in Chalk template literal");r.push(Zs(e,n)(s.join(""))),s=[],n.pop()}else s.push(c)})),r.push(s.join("")),n.length>0){const e="Chalk template literal is missing ".concat(n.length," closing bracket").concat(1===n.length?"":"s"," (`}`)");throw new Error(e)}return r.join("")};const{stdout:ti,stderr:ni}=Ws,{stringReplaceAll:ri,stringEncaseCRLFWithFirstIndex:si}={stringReplaceAll:(e,t,n)=>{let r=e.indexOf(t);if(-1===r)return e;const s=t.length;let i=0,a="";do{a+=e.substr(i,r-i)+t+n,i=r+s,r=e.indexOf(t,i)}while(-1!==r);return a+=e.substr(i),a},stringEncaseCRLFWithFirstIndex:(e,t,n,r)=>{let s=0,i="";do{const a="\r"===e[r-1];i+=e.substr(s,(a?r-1:r)-s)+t+(a?"\r\n":"\n")+n,s=r+1,r=e.indexOf("\n",s)}while(-1!==r);return i+=e.substr(s),i}},{isArray:ii}=Array,ai=["ansi","ansi","ansi256","ansi16m"],oi=Object.create(null);class ui{constructor(e){return ci(e)}}const ci=e=>{const t={};return((e,t={})=>{if(t.level&&!(Number.isInteger(t.level)&&t.level>=0&&t.level<=3))throw new Error("The `level` option should be an integer from 0 to 3");const n=ti?ti.level:0;e.level=void 0===t.level?n:t.level})(t,e),t.template=(...e)=>gi(t.template,...e),Object.setPrototypeOf(t,li.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=()=>{throw new Error("`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.")},t.template.Instance=ui,t.template};function li(e){return ci(e)}for(const[e,t]of Object.entries(Ms))oi[e]={get(){const n=fi(this,di(t.open,t.close,this._styler),this._isEmpty);return Object.defineProperty(this,e,{value:n}),n}};oi.visible={get(){const e=fi(this,this._styler,!0);return Object.defineProperty(this,"visible",{value:e}),e}};const pi=["rgb","hex","keyword","hsl","hsv","hwb","ansi","ansi256"];for(const e of pi)oi[e]={get(){const{level:t}=this;return function(...n){const r=di(Ms.color[ai[t]][e](...n),Ms.color.close,this._styler);return fi(this,r,this._isEmpty)}}};for(const e of pi)oi["bg"+e[0].toUpperCase()+e.slice(1)]={get(){const{level:t}=this;return function(...n){const r=di(Ms.bgColor[ai[t]][e](...n),Ms.bgColor.close,this._styler);return fi(this,r,this._isEmpty)}}};const hi=Object.defineProperties((()=>{}),Object.assign({},oi,{level:{enumerable:!0,get(){return this._generator.level},set(e){this._generator.level=e}}})),di=(e,t,n)=>{let r,s;return void 0===n?(r=e,s=t):(r=n.openAll+e,s=t+n.closeAll),{open:e,close:t,openAll:r,closeAll:s,parent:n}},fi=(e,t,n)=>{const r=(...e)=>ii(e[0])&&ii(e[0].raw)?Di(r,gi(r,...e)):Di(r,1===e.length?""+e[0]:e.join(" "));return Object.setPrototypeOf(r,hi),r._generator=e,r._styler=t,r._isEmpty=n,r},Di=(e,t)=>{if(e.level<=0||!t)return e._isEmpty?"":t;let n=e._styler;if(void 0===n)return t;const{openAll:r,closeAll:s}=n;if(-1!==t.indexOf(""))for(;void 0!==n;)t=ri(t,n.close,n.open),n=n.parent;const i=t.indexOf("\n");return-1!==i&&(t=si(t,s,r,i)),r+t+s};let mi;const gi=(e,...t)=>{const[n]=t;if(!ii(n)||!ii(n.raw))return t.join(" ");const r=t.slice(1),s=[n.raw[0]];for(let e=1;e<n.length;e++)s.push(String(r[e-1]).replace(/[{}\\]/g,"\\$&"),String(n.raw[e]));return void 0===mi&&(mi=ei),mi(e,s.join(""))};Object.defineProperties(li.prototype,oi);const yi=li();yi.supportsColor=ti,yi.stderr=li({level:ni?ni.level:0}),yi.stderr.supportsColor=ni;var Ei=yi,Ci=function(e,t){for(var n=-1,r=t.length,s=e.length;++n<r;)e[s+n]=t[n];return e},Ai="object"==typeof _e&&_e&&_e.Object===Object&&_e,bi="object"==typeof self&&self&&self.Object===Object&&self,Fi=(Ai||bi||Function("return this")()).Symbol,xi=Object.prototype,vi=xi.hasOwnProperty,Si=xi.toString,Ti=Fi?Fi.toStringTag:void 0,wi=Object.prototype.toString,Bi=Fi?Fi.toStringTag:void 0,Pi=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":Bi&&Bi in Object(e)?function(e){var t=vi.call(e,Ti),n=e[Ti];try{e[Ti]=void 0;var r=!0}catch(e){}var s=Si.call(e);return r&&(t?e[Ti]=n:delete e[Ti]),s}(e):function(e){return wi.call(e)}(e)},Ni=function(e){return null!=e&&"object"==typeof e},ki=function(e){return Ni(e)&&"[object Arguments]"==Pi(e)},Ii=Object.prototype,Li=Ii.hasOwnProperty,Oi=Ii.propertyIsEnumerable,_i=ki(function(){return arguments}())?ki:function(e){return Ni(e)&&Li.call(e,"callee")&&!Oi.call(e,"callee")},Mi=Array.isArray,Ri=Fi?Fi.isConcatSpreadable:void 0,ji=function(e){return Mi(e)||_i(e)||!!(Ri&&e&&e[Ri])},qi=function e(t,n,r,s,i){var a=-1,o=t.length;for(r||(r=ji),i||(i=[]);++a<o;){var u=t[a];n>0&&r(u)?n>1?e(u,n-1,r,s,i):Ci(i,u):s||(i[i.length]=u)}return i},Ui=function(e){return null!=e&&e.length?qi(e,1):[]};const $i={key:e=>1===e.length?"-".concat(e):"--".concat(e),value:e=>Fs.apiDescriptor.value(e),pair:({key:e,value:t})=>!1===t?"--no-".concat(e):!0===t?$i.key(e):""===t?"".concat($i.key(e)," without an argument"):"".concat($i.key(e),"=").concat(t)};class Vi extends Fs.ChoiceSchema{constructor({name:e,flags:t}){super({name:e,choices:t}),this._flags=t.slice().sort()}preprocess(e,t){if("string"==typeof e&&0!==e.length&&!this._flags.includes(e)){const n=this._flags.find((t=>Ts(t,e)<3));if(n)return t.logger.warn(["Unknown flag ".concat(Ei.yellow(t.descriptor.value(e)),","),"did you mean ".concat(Ei.blue(t.descriptor.value(n)),"?")].join(" ")),n}return e}expected(){return"a flag"}}let Wi;function zi(t,n,{logger:r,isCLI:s=!1,passThrough:i=!1}={}){const a=i?Array.isArray(i)?(e,t)=>i.includes(e)?{[e]:t}:void 0:(e,t)=>({[e]:t}):(t,n,r)=>{const s=e(r.schemas,["_"]);return Fs.levenUnknownHandler(t,n,Object.assign({},r,{schemas:s}))},o=s?$i:Fs.apiDescriptor,u=function(e,{isCLI:t}){const n=[];t&&n.push(Fs.AnySchema.create({name:"_"}));for(const r of e)n.push(Hi(r,{isCLI:t,optionInfos:e})),r.alias&&t&&n.push(Fs.AliasSchema.create({name:r.alias,sourceName:r.name}));return n}(n,{isCLI:s}),c=new Fs.Normalizer(u,{logger:r,unknown:a,descriptor:o}),l=!1!==r;l&&Wi&&(c._hasDeprecationWarned=Wi);const p=c.normalize(t);return l&&(Wi=c._hasDeprecationWarned),p}function Hi(e,{isCLI:t,optionInfos:n}){let r;const s={name:e.name},i={};switch(e.type){case"int":r=Fs.IntegerSchema,t&&(s.preprocess=e=>Number(e));break;case"string":case"path":r=Fs.StringSchema;break;case"choice":r=Fs.ChoiceSchema,s.choices=e.choices.map((t=>"object"==typeof t&&t.redirect?Object.assign({},t,{redirect:{to:{key:e.name,value:t.redirect}}}):t));break;case"boolean":r=Fs.BooleanSchema;break;case"flag":r=Vi,s.flags=Ui(n.map((e=>[e.alias,e.description&&e.name,e.oppositeDescription&&"no-".concat(e.name)].filter(Boolean))));break;default:throw new Error("Unexpected type ".concat(e.type))}if(e.exception?s.validate=(t,n,r)=>e.exception(t)||n.validate(t,r):s.validate=(e,t,n)=>void 0===e||t.validate(e,n),e.redirect&&(i.redirect=t=>t?{to:{key:e.redirect.option,value:e.redirect.value}}:void 0),e.deprecated&&(i.deprecated=!0),t&&!e.array){const e=s.preprocess||(e=>e);s.preprocess=(t,n,r)=>n.preprocess(e(Array.isArray(t)?t[t.length-1]:t),r)}return e.array?Fs.ArraySchema.create(Object.assign({},t?{preprocess:e=>[].concat(e)}:{},i,{valueSchema:r.create(s)})):r.create(Object.assign({},s,i))}var Gi=function(e,t,n){return zi(e,t,n)};function Xi(e,t){const{ignoreDecorators:n}=t||{};if(!n){const t=e.declaration&&e.declaration.decorators||e.decorators;if(t&&t.length>0)return Xi(t[0])}return e.range?e.range[0]:e.start}function Ji(e){const t=e.range?e.range[1]:e.end;return e.typeAnnotation?Math.max(t,Ji(e.typeAnnotation)):t}function Ki(e,t){return Xi(e)===Xi(t)}var Yi={locStart:Xi,locEnd:Ji,composeLoc:function(e,t=e){const n=Xi(e);return[n,"number"==typeof t?n+t:Ji(t)]},hasSameLocStart:Ki,hasSameLoc:function(e,t){return Ki(e,t)&&function(e,t){return Ji(e)===Ji(t)}(e,t)}},Qi=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=/((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g,t.matchToToken=function(e){var t={type:"invalid",value:e[0],closed:void 0};return e[1]?(t.type="string",t.closed=!(!e[3]&&!e[4])):e[5]?t.type="comment":e[6]?(t.type="comment",t.closed=!!e[7]):e[8]?t.type="regex":e[9]?t.type="number":e[10]?t.type="name":e[11]?t.type="punctuator":e[12]&&(t.type="whitespace"),t}})),Zi=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isIdentifierStart=c,t.isIdentifierChar=l,t.isIdentifierName=function(e){let t=!0;for(let n=0,r=Array.from(e);n<r.length;n++){const e=r[n].codePointAt(0);if(t){if(!c(e))return!1;t=!1}else if(!l(e))return!1}return!t};let n="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-ꟊꟵ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",r="‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿᫀᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿";const s=new RegExp("["+n+"]"),i=new RegExp("["+n+r+"]");n=r=null;const a=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938],o=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];function u(e,t){let n=65536;for(let r=0,s=t.length;r<s;r+=2){if(n+=t[r],n>e)return!1;if(n+=t[r+1],n>=e)return!0}return!1}function c(e){return e<65?36===e:e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&s.test(String.fromCharCode(e)):u(e,a)))}function l(e){return e<48?36===e:e<58||!(e<65)&&(e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&i.test(String.fromCharCode(e)):u(e,a)||u(e,o))))}})),ea=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isReservedWord=i,t.isStrictReservedWord=a,t.isStrictBindOnlyReservedWord=o,t.isStrictBindReservedWord=function(e,t){return a(e,t)||o(e)},t.isKeyword=function(e){return n.has(e)};const n=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),r=new Set(["implements","interface","let","package","private","protected","public","static","yield"]),s=new Set(["eval","arguments"]);function i(e,t){return t&&"await"===e||"enum"===e}function a(e,t){return i(e,t)||r.has(e)}function o(e){return s.has(e)}})),ta=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"isIdentifierName",{enumerable:!0,get:function(){return Zi.isIdentifierName}}),Object.defineProperty(t,"isIdentifierChar",{enumerable:!0,get:function(){return Zi.isIdentifierChar}}),Object.defineProperty(t,"isIdentifierStart",{enumerable:!0,get:function(){return Zi.isIdentifierStart}}),Object.defineProperty(t,"isReservedWord",{enumerable:!0,get:function(){return ea.isReservedWord}}),Object.defineProperty(t,"isStrictBindOnlyReservedWord",{enumerable:!0,get:function(){return ea.isStrictBindOnlyReservedWord}}),Object.defineProperty(t,"isStrictBindReservedWord",{enumerable:!0,get:function(){return ea.isStrictBindReservedWord}}),Object.defineProperty(t,"isStrictReservedWord",{enumerable:!0,get:function(){return ea.isStrictReservedWord}}),Object.defineProperty(t,"isKeyword",{enumerable:!0,get:function(){return ea.isKeyword}})})),na=/[|\\{}()[\]^$+*?.]/g,ra=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(na,"\\$&")},sa={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},ia=Me((function(e){var t={};for(var n in sa)sa.hasOwnProperty(n)&&(t[sa[n]]=n);var r=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var s in r)if(r.hasOwnProperty(s)){if(!("channels"in r[s]))throw new Error("missing channels property: "+s);if(!("labels"in r[s]))throw new Error("missing channel labels property: "+s);if(r[s].labels.length!==r[s].channels)throw new Error("channel and label counts mismatch: "+s);var i=r[s].channels,a=r[s].labels;delete r[s].channels,delete r[s].labels,Object.defineProperty(r[s],"channels",{value:i}),Object.defineProperty(r[s],"labels",{value:a})}r.rgb.hsl=function(e){var t,n,r=e[0]/255,s=e[1]/255,i=e[2]/255,a=Math.min(r,s,i),o=Math.max(r,s,i),u=o-a;return o===a?t=0:r===o?t=(s-i)/u:s===o?t=2+(i-r)/u:i===o&&(t=4+(r-s)/u),(t=Math.min(60*t,360))<0&&(t+=360),n=(a+o)/2,[t,100*(o===a?0:n<=.5?u/(o+a):u/(2-o-a)),100*n]},r.rgb.hsv=function(e){var t,n,r,s,i,a=e[0]/255,o=e[1]/255,u=e[2]/255,c=Math.max(a,o,u),l=c-Math.min(a,o,u),p=function(e){return(c-e)/6/l+.5};return 0===l?s=i=0:(i=l/c,t=p(a),n=p(o),r=p(u),a===c?s=r-n:o===c?s=1/3+t-r:u===c&&(s=2/3+n-t),s<0?s+=1:s>1&&(s-=1)),[360*s,100*i,100*c]},r.rgb.hwb=function(e){var t=e[0],n=e[1],s=e[2];return[r.rgb.hsl(e)[0],1/255*Math.min(t,Math.min(n,s))*100,100*(s=1-1/255*Math.max(t,Math.max(n,s)))]},r.rgb.cmyk=function(e){var t,n=e[0]/255,r=e[1]/255,s=e[2]/255;return[100*((1-n-(t=Math.min(1-n,1-r,1-s)))/(1-t)||0),100*((1-r-t)/(1-t)||0),100*((1-s-t)/(1-t)||0),100*t]},r.rgb.keyword=function(e){var n=t[e];if(n)return n;var r,s,i,a=1/0;for(var o in sa)if(sa.hasOwnProperty(o)){var u=(s=e,i=sa[o],Math.pow(s[0]-i[0],2)+Math.pow(s[1]-i[1],2)+Math.pow(s[2]-i[2],2));u<a&&(a=u,r=o)}return r},r.keyword.rgb=function(e){return sa[e]},r.rgb.xyz=function(e){var t=e[0]/255,n=e[1]/255,r=e[2]/255;return[100*(.4124*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.3576*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)+.1805*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)),100*(.2126*t+.7152*n+.0722*r),100*(.0193*t+.1192*n+.9505*r)]},r.rgb.lab=function(e){var t=r.rgb.xyz(e),n=t[0],s=t[1],i=t[2];return s/=100,i/=108.883,n=(n/=95.047)>.008856?Math.pow(n,1/3):7.787*n+16/116,[116*(s=s>.008856?Math.pow(s,1/3):7.787*s+16/116)-16,500*(n-s),200*(s-(i=i>.008856?Math.pow(i,1/3):7.787*i+16/116))]},r.hsl.rgb=function(e){var t,n,r,s,i,a=e[0]/360,o=e[1]/100,u=e[2]/100;if(0===o)return[i=255*u,i,i];t=2*u-(n=u<.5?u*(1+o):u+o-u*o),s=[0,0,0];for(var c=0;c<3;c++)(r=a+1/3*-(c-1))<0&&r++,r>1&&r--,i=6*r<1?t+6*(n-t)*r:2*r<1?n:3*r<2?t+(n-t)*(2/3-r)*6:t,s[c]=255*i;return s},r.hsl.hsv=function(e){var t=e[0],n=e[1]/100,r=e[2]/100,s=n,i=Math.max(r,.01);return n*=(r*=2)<=1?r:2-r,s*=i<=1?i:2-i,[t,100*(0===r?2*s/(i+s):2*n/(r+n)),(r+n)/2*100]},r.hsv.rgb=function(e){var t=e[0]/60,n=e[1]/100,r=e[2]/100,s=Math.floor(t)%6,i=t-Math.floor(t),a=255*r*(1-n),o=255*r*(1-n*i),u=255*r*(1-n*(1-i));switch(r*=255,s){case 0:return[r,u,a];case 1:return[o,r,a];case 2:return[a,r,u];case 3:return[a,o,r];case 4:return[u,a,r];case 5:return[r,a,o]}},r.hsv.hsl=function(e){var t,n,r,s=e[0],i=e[1]/100,a=e[2]/100,o=Math.max(a,.01);return r=(2-i)*a,n=i*o,[s,100*(n=(n/=(t=(2-i)*o)<=1?t:2-t)||0),100*(r/=2)]},r.hwb.rgb=function(e){var t,n,r,s,i,a,o,u=e[0]/360,c=e[1]/100,l=e[2]/100,p=c+l;switch(p>1&&(c/=p,l/=p),r=6*u-(t=Math.floor(6*u)),0!=(1&t)&&(r=1-r),s=c+r*((n=1-l)-c),t){default:case 6:case 0:i=n,a=s,o=c;break;case 1:i=s,a=n,o=c;break;case 2:i=c,a=n,o=s;break;case 3:i=c,a=s,o=n;break;case 4:i=s,a=c,o=n;break;case 5:i=n,a=c,o=s}return[255*i,255*a,255*o]},r.cmyk.rgb=function(e){var t=e[0]/100,n=e[1]/100,r=e[2]/100,s=e[3]/100;return[255*(1-Math.min(1,t*(1-s)+s)),255*(1-Math.min(1,n*(1-s)+s)),255*(1-Math.min(1,r*(1-s)+s))]},r.xyz.rgb=function(e){var t,n,r,s=e[0]/100,i=e[1]/100,a=e[2]/100;return n=-.9689*s+1.8758*i+.0415*a,r=.0557*s+-.204*i+1.057*a,t=(t=3.2406*s+-1.5372*i+-.4986*a)>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r,[255*(t=Math.min(Math.max(0,t),1)),255*(n=Math.min(Math.max(0,n),1)),255*(r=Math.min(Math.max(0,r),1))]},r.xyz.lab=function(e){var t=e[0],n=e[1],r=e[2];return n/=100,r/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116)-16,500*(t-n),200*(n-(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116))]},r.lab.xyz=function(e){var t,n,r,s=e[0];t=e[1]/500+(n=(s+16)/116),r=n-e[2]/200;var i=Math.pow(n,3),a=Math.pow(t,3),o=Math.pow(r,3);return n=i>.008856?i:(n-16/116)/7.787,t=a>.008856?a:(t-16/116)/7.787,r=o>.008856?o:(r-16/116)/7.787,[t*=95.047,n*=100,r*=108.883]},r.lab.lch=function(e){var t,n=e[0],r=e[1],s=e[2];return(t=360*Math.atan2(s,r)/2/Math.PI)<0&&(t+=360),[n,Math.sqrt(r*r+s*s),t]},r.lch.lab=function(e){var t,n=e[0],r=e[1];return t=e[2]/360*2*Math.PI,[n,r*Math.cos(t),r*Math.sin(t)]},r.rgb.ansi16=function(e){var t=e[0],n=e[1],s=e[2],i=1 in arguments?arguments[1]:r.rgb.hsv(e)[2];if(0===(i=Math.round(i/50)))return 30;var a=30+(Math.round(s/255)<<2|Math.round(n/255)<<1|Math.round(t/255));return 2===i&&(a+=60),a},r.hsv.ansi16=function(e){return r.rgb.ansi16(r.hsv.rgb(e),e[2])},r.rgb.ansi256=function(e){var t=e[0],n=e[1],r=e[2];return t===n&&n===r?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5)},r.ansi16.rgb=function(e){var t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];var n=.5*(1+~~(e>50));return[(1&t)*n*255,(t>>1&1)*n*255,(t>>2&1)*n*255]},r.ansi256.rgb=function(e){if(e>=232){var t=10*(e-232)+8;return[t,t,t]}var n;return e-=16,[Math.floor(e/36)/5*255,Math.floor((n=e%36)/6)/5*255,n%6/5*255]},r.rgb.hex=function(e){var t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},r.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];var n=t[0];3===t[0].length&&(n=n.split("").map((function(e){return e+e})).join(""));var r=parseInt(n,16);return[r>>16&255,r>>8&255,255&r]},r.rgb.hcg=function(e){var t,n=e[0]/255,r=e[1]/255,s=e[2]/255,i=Math.max(Math.max(n,r),s),a=Math.min(Math.min(n,r),s),o=i-a;return t=o<=0?0:i===n?(r-s)/o%6:i===r?2+(s-n)/o:4+(n-r)/o+4,t/=6,[360*(t%=1),100*o,100*(o<1?a/(1-o):0)]},r.hsl.hcg=function(e){var t,n=e[1]/100,r=e[2]/100,s=0;return(t=r<.5?2*n*r:2*n*(1-r))<1&&(s=(r-.5*t)/(1-t)),[e[0],100*t,100*s]},r.hsv.hcg=function(e){var t=e[1]/100,n=e[2]/100,r=t*n,s=0;return r<1&&(s=(n-r)/(1-r)),[e[0],100*r,100*s]},r.hcg.rgb=function(e){var t=e[0]/360,n=e[1]/100,r=e[2]/100;if(0===n)return[255*r,255*r,255*r];var s,i=[0,0,0],a=t%1*6,o=a%1,u=1-o;switch(Math.floor(a)){case 0:i[0]=1,i[1]=o,i[2]=0;break;case 1:i[0]=u,i[1]=1,i[2]=0;break;case 2:i[0]=0,i[1]=1,i[2]=o;break;case 3:i[0]=0,i[1]=u,i[2]=1;break;case 4:i[0]=o,i[1]=0,i[2]=1;break;default:i[0]=1,i[1]=0,i[2]=u}return s=(1-n)*r,[255*(n*i[0]+s),255*(n*i[1]+s),255*(n*i[2]+s)]},r.hcg.hsv=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t),r=0;return n>0&&(r=t/n),[e[0],100*r,100*n]},r.hcg.hsl=function(e){var t=e[1]/100,n=e[2]/100*(1-t)+.5*t,r=0;return n>0&&n<.5?r=t/(2*n):n>=.5&&n<1&&(r=t/(2*(1-n))),[e[0],100*r,100*n]},r.hcg.hwb=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t);return[e[0],100*(n-t),100*(1-n)]},r.hwb.hcg=function(e){var t=e[1]/100,n=1-e[2]/100,r=n-t,s=0;return r<1&&(s=(n-r)/(1-r)),[e[0],100*r,100*s]},r.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},r.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},r.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},r.gray.hsl=r.gray.hsv=function(e){return[0,0,e[0]]},r.gray.hwb=function(e){return[0,100,e[0]]},r.gray.cmyk=function(e){return[0,0,0,e[0]]},r.gray.lab=function(e){return[e[0],0,0]},r.gray.hex=function(e){var t=255&Math.round(e[0]/100*255),n=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(n.length)+n},r.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}}));function aa(e,t){return function(n){return t(e(n))}}function oa(e,t){for(var n=[t[e].parent,e],r=ia[t[e].parent][e],s=t[e].parent;t[s].parent;)n.unshift(t[s].parent),r=aa(ia[t[s].parent][s],r),s=t[s].parent;return r.conversion=n,r}var ua={};Object.keys(ia).forEach((function(e){ua[e]={},Object.defineProperty(ua[e],"channels",{value:ia[e].channels}),Object.defineProperty(ua[e],"labels",{value:ia[e].labels});var t=function(e){for(var t=function(e){var t=function(){for(var e={},t=Object.keys(ia),n=t.length,r=0;r<n;r++)e[t[r]]={distance:-1,parent:null};return e}(),n=[e];for(t[e].distance=0;n.length;)for(var r=n.pop(),s=Object.keys(ia[r]),i=s.length,a=0;a<i;a++){var o=s[a],u=t[o];-1===u.distance&&(u.distance=t[r].distance+1,u.parent=r,n.unshift(o))}return t}(e),n={},r=Object.keys(t),s=r.length,i=0;i<s;i++){var a=r[i];null!==t[a].parent&&(n[a]=oa(a,t))}return n}(e);Object.keys(t).forEach((function(n){var r=t[n];ua[e][n]=function(e){var t=function(t){if(null==t)return t;arguments.length>1&&(t=Array.prototype.slice.call(arguments));var n=e(t);if("object"==typeof n)for(var r=n.length,s=0;s<r;s++)n[s]=Math.round(n[s]);return n};return"conversion"in e&&(t.conversion=e.conversion),t}(r),ua[e][n].raw=function(e){var t=function(t){return null==t?t:(arguments.length>1&&(t=Array.prototype.slice.call(arguments)),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(r)}))}));var ca=ua,la=Me((function(e){const t=(e,t)=>function(){const n=e.apply(ca,arguments);return"[".concat(n+t,"m")},n=(e,t)=>function(){const n=e.apply(ca,arguments);return"[".concat(38+t,";5;").concat(n,"m")},r=(e,t)=>function(){const n=e.apply(ca,arguments);return"[".concat(38+t,";2;").concat(n[0],";").concat(n[1],";").concat(n[2],"m")};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){const e=new Map,s={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};s.color.grey=s.color.gray;for(const t of Object.keys(s)){const n=s[t];for(const t of Object.keys(n)){const r=n[t];s[t]={open:"[".concat(r[0],"m"),close:"[".concat(r[1],"m")},n[t]=s[t],e.set(r[0],r[1])}Object.defineProperty(s,t,{value:n,enumerable:!1}),Object.defineProperty(s,"codes",{value:e,enumerable:!1})}const i=e=>e,a=(e,t,n)=>[e,t,n];s.color.close="[39m",s.bgColor.close="[49m",s.color.ansi={ansi:t(i,0)},s.color.ansi256={ansi256:n(i,0)},s.color.ansi16m={rgb:r(a,0)},s.bgColor.ansi={ansi:t(i,10)},s.bgColor.ansi256={ansi256:n(i,10)},s.bgColor.ansi16m={rgb:r(a,10)};for(let e of Object.keys(ca)){if("object"!=typeof ca[e])continue;const i=ca[e];"ansi16"===e&&(e="ansi"),"ansi16"in i&&(s.color.ansi[e]=t(i.ansi16,0),s.bgColor.ansi[e]=t(i.ansi16,10)),"ansi256"in i&&(s.color.ansi256[e]=n(i.ansi256,0),s.bgColor.ansi256[e]=n(i.ansi256,10)),"rgb"in i&&(s.color.ansi16m[e]=r(i.rgb,0),s.bgColor.ansi16m[e]=r(i.rgb,10))}return s}})}));const pa=Ie.env;let ha;function da(e){return function(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}(function(e){if(!1===ha)return 0;if(Rr("color=16m")||Rr("color=full")||Rr("color=truecolor"))return 3;if(Rr("color=256"))return 2;if(e&&!e.isTTY&&!0!==ha)return 0;const t=ha?1:0;if("win32"===Ie.platform){const e=jr.release().split(".");return Number(Ie.versions.node.split(".")[0])>=8&&Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in pa)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some((e=>e in pa))||"codeship"===pa.CI_NAME?1:t;if("TEAMCITY_VERSION"in pa)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(pa.TEAMCITY_VERSION)?1:0;if("truecolor"===pa.COLORTERM)return 3;if("TERM_PROGRAM"in pa){const e=parseInt((pa.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(pa.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(pa.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(pa.TERM)||"COLORTERM"in pa?1:(pa.TERM,t)}(e))}Rr("no-color")||Rr("no-colors")||Rr("color=false")?ha=!1:(Rr("color")||Rr("colors")||Rr("color=true")||Rr("color=always"))&&(ha=!0),"FORCE_COLOR"in pa&&(ha=0===pa.FORCE_COLOR.length||0!==parseInt(pa.FORCE_COLOR,10));var fa={supportsColor:da,stdout:da(Ie.stdout),stderr:da(Ie.stderr)};const Da=/(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,ma=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,ga=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,ya=/\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi,Ea=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e",""],["a",""]]);function Ca(e){return"u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):Ea.get(e)||e}function Aa(e,t){const n=[],r=t.trim().split(/\s*,\s*/g);let s;for(const t of r)if(isNaN(t)){if(!(s=t.match(ga)))throw new Error("Invalid Chalk template style argument: ".concat(t," (in style '").concat(e,"')"));n.push(s[2].replace(ya,((e,t,n)=>t?Ca(t):n)))}else n.push(Number(t));return n}function ba(e){ma.lastIndex=0;const t=[];let n;for(;null!==(n=ma.exec(e));){const e=n[1];if(n[2]){const r=Aa(e,n[2]);t.push([e].concat(r))}else t.push([e])}return t}function Fa(e,t){const n={};for(const e of t)for(const t of e.styles)n[t[0]]=e.inverse?null:t.slice(1);let r=e;for(const e of Object.keys(n))if(Array.isArray(n[e])){if(!(e in r))throw new Error("Unknown Chalk style: ".concat(e));r=n[e].length>0?r[e].apply(r,n[e]):r[e]}return r}var xa=(e,t)=>{const n=[],r=[];let s=[];if(t.replace(Da,((t,i,a,o,u,c)=>{if(i)s.push(Ca(i));else if(o){const t=s.join("");s=[],r.push(0===n.length?t:Fa(e,n)(t)),n.push({inverse:a,styles:ba(o)})}else if(u){if(0===n.length)throw new Error("Found extraneous } in Chalk template literal");r.push(Fa(e,n)(s.join(""))),s=[],n.pop()}else s.push(c)})),r.push(s.join("")),n.length>0){const e="Chalk template literal is missing ".concat(n.length," closing bracket").concat(1===n.length?"":"s"," (`}`)");throw new Error(e)}return r.join("")},va=Me((function(e){const t=fa.stdout,n="win32"===Ie.platform&&!(Ie.env.TERM||"").toLowerCase().startsWith("xterm"),r=["ansi","ansi","ansi256","ansi16m"],s=new Set(["gray"]),i=Object.create(null);function a(e,n){n=n||{};const r=t?t.level:0;e.level=void 0===n.level?r:n.level,e.enabled="enabled"in n?n.enabled:e.level>0}function o(e){if(!this||!(this instanceof o)||this.template){const t={};return a(t,e),t.template=function(){const e=[].slice.call(arguments);return p.apply(null,[t.template].concat(e))},Object.setPrototypeOf(t,o.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=o,t.template}a(this,e)}n&&(la.blue.open="[94m");for(const e of Object.keys(la))la[e].closeRe=new RegExp(ra(la[e].close),"g"),i[e]={get(){const t=la[e];return c.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}};i.visible={get(){return c.call(this,this._styles||[],!0,"visible")}},la.color.closeRe=new RegExp(ra(la.color.close),"g");for(const e of Object.keys(la.color.ansi))s.has(e)||(i[e]={get(){const t=this.level;return function(){const n={open:la.color[r[t]][e].apply(null,arguments),close:la.color.close,closeRe:la.color.closeRe};return c.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}});la.bgColor.closeRe=new RegExp(ra(la.bgColor.close),"g");for(const e of Object.keys(la.bgColor.ansi))s.has(e)||(i["bg"+e[0].toUpperCase()+e.slice(1)]={get(){const t=this.level;return function(){const n={open:la.bgColor[r[t]][e].apply(null,arguments),close:la.bgColor.close,closeRe:la.bgColor.closeRe};return c.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}});const u=Object.defineProperties((()=>{}),i);function c(e,t,n){const r=function(){return l.apply(r,arguments)};r._styles=e,r._empty=t;const s=this;return Object.defineProperty(r,"level",{enumerable:!0,get:()=>s.level,set(e){s.level=e}}),Object.defineProperty(r,"enabled",{enumerable:!0,get:()=>s.enabled,set(e){s.enabled=e}}),r.hasGrey=this.hasGrey||"gray"===n||"grey"===n,r.__proto__=u,r}function l(){const e=arguments,t=e.length;let r=String(arguments[0]);if(0===t)return"";if(t>1)for(let n=1;n<t;n++)r+=" "+e[n];if(!this.enabled||this.level<=0||!r)return this._empty?"":r;const s=la.dim.open;n&&this.hasGrey&&(la.dim.open="");for(const e of this._styles.slice().reverse())r=e.open+r.replace(e.closeRe,e.open)+e.close,r=r.replace(/\r?\n/g,"".concat(e.close,"$&").concat(e.open));return la.dim.open=s,r}function p(e,t){if(!Array.isArray(t))return[].slice.call(arguments,1).join(" ");const n=[].slice.call(arguments,2),r=[t.raw[0]];for(let e=1;e<t.length;e++)r.push(String(n[e-1]).replace(/[{}\\]/g,"\\$&")),r.push(String(t.raw[e]));return xa(e,r.join(""))}Object.defineProperties(o.prototype,i),e.exports=o(),e.exports.supportsColor=t,e.exports.default=e.exports})),Sa=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.shouldHighlight=c,t.getChalk=l,t.default=function(e,t={}){return c(t)?function(e,t){return t.replace(r.default,(function(...t){const n=function(e){const[t,n]=e.slice(-2),s=(0,r.matchToToken)(e);if("name"===s.type){if((0,ta.isKeyword)(s.value)||(0,ta.isReservedWord)(s.value))return"keyword";if(o.test(s.value)&&("<"===n[t-1]||"</"==n.substr(t-2,2)))return"jsx_tag";if(s.value[0]!==s.value[0].toLowerCase())return"capitalized"}return"punctuator"===s.type&&u.test(s.value)?"bracket":"invalid"!==s.type||"@"!==s.value&&"#"!==s.value?s.type:"punctuator"}(t),s=e[n];return s?t[0].split(a).map((e=>s(e))).join("\n"):t[0]}))}(function(e){return{keyword:e.cyan,capitalized:e.yellow,jsx_tag:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.grey,invalid:e.white.bgRed.bold}}(l(t)),e):e};var n,r=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=i();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s)){var a=r?Object.getOwnPropertyDescriptor(e,s):null;a&&(a.get||a.set)?Object.defineProperty(n,s,a):n[s]=e[s]}return n.default=e,t&&t.set(e,n),n}(Qi),s=(n=va)&&n.__esModule?n:{default:n};function i(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return i=function(){return e},e}const a=/\r\n|[\n\r\u2028\u2029]/,o=/^[a-z][\w-]*$/i,u=/^[()[\]{}]$/;function c(e){return s.default.supportsColor||e.forceColor}function l(e){let t=s.default;return e.forceColor&&(t=new s.default.constructor({enabled:!0,level:1})),t}})),Ta=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.codeFrameColumns=a,t.default=function(e,t,n,r={}){if(!s){s=!0;const e="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";Ie.emitWarning?Ie.emitWarning(e,"DeprecationWarning"):(new Error(e).name="DeprecationWarning",console.warn(new Error(e)))}return a(e,{start:{column:n=Math.max(n,0),line:t}},r)};var n=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=r();if(t&&t.has(e))return t.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}(Sa);function r(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return r=function(){return e},e}let s=!1;const i=/\r\n|[\n\r\u2028\u2029]/;function a(e,t,r={}){const s=(r.highlightCode||r.forceColor)&&(0,n.shouldHighlight)(r),a=(0,n.getChalk)(r),o=function(e){return{gutter:e.grey,marker:e.red.bold,message:e.red.bold}}(a),u=(e,t)=>s?e(t):t,c=e.split(i),{start:l,end:p,markerLines:h}=function(e,t,n){const r=Object.assign({column:0,line:-1},e.start),s=Object.assign({},r,e.end),{linesAbove:i=2,linesBelow:a=3}=n||{},o=r.line,u=r.column,c=s.line,l=s.column;let p=Math.max(o-(i+1),0),h=Math.min(t.length,c+a);-1===o&&(p=0),-1===c&&(h=t.length);const d=c-o,f={};if(d)for(let e=0;e<=d;e++){const n=e+o;if(u)if(0===e){const e=t[n-1].length;f[n]=[u,e-u+1]}else if(e===d)f[n]=[0,l];else{const r=t[n-e].length;f[n]=[0,r]}else f[n]=!0}else f[o]=u===l?!u||[u,0]:[u,l-u];return{start:p,end:h,markerLines:f}}(t,c,r),d=t.start&&"number"==typeof t.start.column,f=String(p).length;let D=(s?(0,n.default)(e,r):e).split(i).slice(l,p).map(((e,t)=>{const n=l+1+t,s=" ".concat(n).slice(-f),i=" ".concat(s," | "),a=h[n],c=!h[n+1];if(a){let t="";if(Array.isArray(a)){const n=e.slice(0,Math.max(a[0]-1,0)).replace(/[^\t]/g," "),s=a[1]||1;t=["\n ",u(o.gutter,i.replace(/\d/g," ")),n,u(o.marker,"^").repeat(s)].join(""),c&&r.message&&(t+=" "+u(o.message,r.message))}return[u(o.marker,">"),u(o.gutter,i),e,t].join("")}return" ".concat(u(o.gutter,i)).concat(e)})).join("\n");return r.message&&!d&&(D="".concat(" ".repeat(f+1)).concat(r.message,"\n").concat(D)),s?a.reset(D):D}})),wa=Re(yn);const{ConfigError:Ba}=Cr,{locStart:Pa,locEnd:Na}=Yi,ka=Object.getOwnPropertyNames,Ia=Object.getOwnPropertyDescriptor;function La(e){const t={};for(const n of e.plugins)if(n.parsers)for(const e of ka(n.parsers))Object.defineProperty(t,e,Ia(n.parsers,e));return t}function Oa(e,t){if(t=t||La(e),"function"==typeof e.parser)return{parse:e.parser,astFormat:"estree",locStart:Pa,locEnd:Na};if("string"==typeof e.parser){if(Object.prototype.hasOwnProperty.call(t,e.parser))return t[e.parser];throw new Ba("Couldn't resolve parser \"".concat(e.parser,'". Parsers must be explicitly added to the standalone bundle.'))}}var _a={parse:function(e,t){const n=La(t),r=Object.keys(n).reduce(((e,t)=>Object.defineProperty(e,t,{enumerable:!0,get:()=>n[t].parse})),{}),s=Oa(t,n);try{return s.preprocess&&(e=s.preprocess(e,t)),{text:e,ast:s.parse(e,r,t)}}catch(t){const{loc:n}=t;if(n){const{codeFrameColumns:r}=Ta;throw t.codeFrame=r(e,n,{highlightCode:!0}),t.message+="\n"+t.codeFrame,t}throw t.stack}},resolveParser:Oa};const{UndefinedParserError:Ma}=Cr,{getSupportInfo:Ra}=mt,{resolveParser:ja}=_a,qa={astFormat:"estree",printer:{},originalText:void 0,locStart:null,locEnd:null};function Ua(e,t){const n=wa.basename(e).toLowerCase(),r=Ra({plugins:t}).languages.filter((e=>null!==e.since));let s=r.find((e=>e.extensions&&e.extensions.some((e=>n.endsWith(e)))||e.filenames&&e.filenames.some((e=>e.toLowerCase()===n))));if(!s&&!n.includes(".")){const t=function(e){if("string"!=typeof e)return"";let t;try{t=mr.openSync(e,"r")}catch(e){return""}try{const n=new class{constructor(e,t){(t=t||{}).readChunk||(t.readChunk=1024),t.newLineCharacter?t.newLineCharacter=t.newLineCharacter.charCodeAt(0):t.newLineCharacter=10,this.fd="number"==typeof e?e:mr.openSync(e,"r"),this.options=t,this.newLineCharacter=t.newLineCharacter,this.reset()}_searchInBuffer(e,t){let n=-1;for(let r=0;r<=e.length;r++)if(e[r]===t){n=r;break}return n}reset(){this.eofReached=!1,this.linesCache=[],this.fdPosition=0}close(){mr.closeSync(this.fd),this.fd=null}_extractLines(e){let t;const n=[];let r=0,s=0;for(;;){let i=e[r++];if(i===this.newLineCharacter)t=e.slice(s,r),n.push(t),s=r;else if(void 0===i)break}let i=e.slice(s,r);return i.length&&n.push(i),n}_readChunk(e){let t,n=0;const r=[];do{const e=new kn(this.options.readChunk);t=mr.readSync(this.fd,e,0,this.options.readChunk,this.fdPosition),n+=t,this.fdPosition=this.fdPosition+t,r.push(e)}while(t&&-1===this._searchInBuffer(r[r.length-1],this.options.newLineCharacter));let s=kn.concat(r);return t<this.options.readChunk&&(this.eofReached=!0,s=s.slice(0,n)),n&&(this.linesCache=this._extractLines(s),e&&(this.linesCache[0]=kn.concat([e,this.linesCache[0]]))),n}next(){if(!this.fd)return!1;let e,t=!1;return this.eofReached&&0===this.linesCache.length||(this.linesCache.length||(e=this._readChunk()),this.linesCache.length&&(t=this.linesCache.shift(),t[t.length-1]!==this.newLineCharacter&&(e=this._readChunk(t),e&&(t=this.linesCache.shift()))),this.eofReached&&0===this.linesCache.length&&this.close(),t&&t[t.length-1]===this.newLineCharacter&&(t=t.slice(0,t.length-1))),t}}(t).next().toString("utf8"),r=n.match(/^#!\/(?:usr\/)?bin\/env\s+(\S+)/);if(r)return r[1];const s=n.match(/^#!\/(?:usr\/(?:local\/)?)?bin\/(\S+)/);return s?s[1]:""}catch(e){return""}finally{try{mr.closeSync(t)}catch(e){}}}(e);s=r.find((e=>e.interpreters&&e.interpreters.includes(t)))}return s&&s.parsers[0]}var $a={normalize:function(e,t){t=t||{};const n=Object.assign({},e),r=Ra({plugins:e.plugins,showUnreleased:!0,showDeprecated:!0}).options,s=Object.assign({},qa,function(e){for(var t=-1,n=null==e?0:e.length,r={};++t<n;){var s=e[t];r[s[0]]=s[1]}return r}(r.filter((e=>void 0!==e.default)).map((e=>[e.name,e.default]))));if(!n.parser)if(n.filepath){if(n.parser=Ua(n.filepath,n.plugins),!n.parser)throw new Ma("No parser could be inferred for file: ".concat(n.filepath))}else(t.logger||console).warn("No parser and no filepath given, using 'babel' the parser now but this will throw an error in the future. Please specify a parser or a filepath so one can be inferred."),n.parser="babel";const i=ja(Gi(n,[r.find((e=>"parser"===e.name))],{passThrough:!0,logger:!1}));n.astFormat=i.astFormat,n.locEnd=i.locEnd,n.locStart=i.locStart;const a=function(e){const{astFormat:t}=e;if(!t)throw new Error("getPlugin() requires astFormat to be set");const n=e.plugins.find((e=>e.printers&&e.printers[t]));if(!n)throw new Error("Couldn't find plugin for AST format \"".concat(t,'"'));return n}(n);n.printer=a.printers[n.astFormat];const o=r.filter((e=>e.pluginDefaults&&void 0!==e.pluginDefaults[a.name])).reduce(((e,t)=>Object.assign(e,{[t.name]:t.pluginDefaults[a.name]})),{}),u=Object.assign({},s,o);return Object.keys(u).forEach((e=>{null==n[e]&&(n[e]=u[e])})),"json"===n.parser&&(n.trailingComma="none"),Gi(n,r,Object.assign({passThrough:Object.keys(qa)},t))},hiddenDefaults:qa,inferParser:Ua},Va=function e(t,n,r){if(Array.isArray(t))return t.map((t=>e(t,n,r))).filter(Boolean);if(!t||"object"!=typeof t)return t;const s=n.printer.massageAstNode;let i;i=s&&s.ignoredProperties?s.ignoredProperties:new Set;const a={};for(const r of Object.keys(t))i.has(r)||"function"==typeof t[r]||(a[r]=e(t[r],n,t));if(s){const e=s(t,a,r);if(null===e)return;if(e)return e}return a};function Wa(){}Wa.ok=function(){},Wa.strictEqual=function(){};var za=Re(Object.freeze({__proto__:null,default:Wa}));const{builders:{concat:Ha,line:Ga,hardline:Xa,breakParent:Ja,indent:Ka,lineSuffix:Ya,join:Qa,cursor:Za}}=cn,{hasNewline:eo,skipNewline:to,skipSpaces:no,isPreviousLineEmpty:ro,addLeadingComment:so,addDanglingComment:io,addTrailingComment:ao}=Ot,oo=Symbol("child-nodes");function uo(e,t,n){if(!e)return;const{printer:r,locStart:s,locEnd:i}=t;if(n){if(r.canAttachComment&&r.canAttachComment(e)){let t;for(t=n.length-1;t>=0&&!(s(n[t])<=s(e)&&i(n[t])<=i(e));--t);return void n.splice(t+1,0,e)}}else if(e[oo])return e[oo];const a=r.getCommentChildNodes&&r.getCommentChildNodes(e,t)||"object"==typeof e&&Object.keys(e).filter((e=>"enclosingNode"!==e&&"precedingNode"!==e&&"followingNode"!==e&&"tokens"!==e&&"comments"!==e)).map((t=>e[t]));return a?(n||Object.defineProperty(e,oo,{value:n=[],enumerable:!1}),a.forEach((e=>{uo(e,t,n)})),n):void 0}function co(e,t,n){const{locStart:r,locEnd:s}=n,i=r(t),a=s(t),o=uo(e,n);let u,c,l=0,p=o.length;for(;l<p;){const e=l+p>>1,h=o[e],d=r(h),f=s(h);if(d<=i&&a<=f)return t.enclosingNode=h,void co(h,t,n);if(d<=i)u=h,l=e+1;else{if(!(a<=d))throw new Error("Comment location overlaps with node location");c=h,p=e}}if(t.enclosingNode&&"TemplateLiteral"===t.enclosingNode.type){const{quasis:e}=t.enclosingNode,r=ho(e,t,n);u&&ho(e,u,n)!==r&&(u=null),c&&ho(e,c,n)!==r&&(c=null)}u&&(t.precedingNode=u),c&&(t.followingNode=c)}function lo(e,t,n){const r=e.length;if(0===r)return;const{precedingNode:s,followingNode:i,enclosingNode:a}=e[0],o=n.printer.getGapRegex&&n.printer.getGapRegex(a)||/^[\s(]*$/;let u,c=n.locStart(i);for(u=r;u>0;--u){const r=e[u-1];za.strictEqual(r.precedingNode,s),za.strictEqual(r.followingNode,i);const a=t.slice(n.locEnd(r),c);if(!o.test(a))break;c=n.locStart(r)}e.forEach(((e,t)=>{t<u?ao(s,e):so(i,e)}));for(const e of[s,i])e.comments&&e.comments.length>1&&e.comments.sort(((e,t)=>n.locStart(e)-n.locStart(t)));e.length=0}function po(e,t){return e.getValue().printed=!0,t.printer.printComment(e,t)}function ho(e,t,n){const r=n.locStart(t)-1;for(let t=1;t<e.length;++t)if(r<n.locStart(e[t]))return t-1;return 0}function fo(e,t,n){return e.getNode()===t.cursorNode&&e.getValue()?Ha([Za,n,Za]):n}var Do={attach:function(e,t,n,r){if(!Array.isArray(e))return;const s=[],{locStart:i,locEnd:a}=r;e.forEach(((o,u)=>{if("json"===r.parser||"json5"===r.parser||"__js_expression"===r.parser||"__vue_expression"===r.parser){if(i(o)-i(t)<=0)return void so(t,o);if(a(o)-a(t)>=0)return void ao(t,o)}co(t,o,r);const{precedingNode:c,enclosingNode:l,followingNode:p}=o,h=r.printer.handleComments&&r.printer.handleComments.ownLine?r.printer.handleComments.ownLine:()=>!1,d=r.printer.handleComments&&r.printer.handleComments.endOfLine?r.printer.handleComments.endOfLine:()=>!1,f=r.printer.handleComments&&r.printer.handleComments.remaining?r.printer.handleComments.remaining:()=>!1,D=e.length-1===u;if(eo(n,i(o),{backwards:!0}))h(o,n,r,t,D)||(p?so(p,o):c?ao(c,o):io(l||t,o));else if(eo(n,a(o)))d(o,n,r,t,D)||(c?ao(c,o):p?so(p,o):io(l||t,o));else if(f(o,n,r,t,D));else if(c&&p){const e=s.length;e>0&&s[e-1].followingNode!==o.followingNode&&lo(s,n,r),s.push(o)}else c?ao(c,o):p?so(p,o):io(l||t,o)})),lo(s,n,r),e.forEach((e=>{delete e.precedingNode,delete e.enclosingNode,delete e.followingNode}))},printComments:function(e,t,n,r){const s=e.getValue(),i=t(e),a=s&&s.comments;if(!a||0===a.length)return fo(e,n,i);const o=[],u=[r?";":"",i];return e.each((e=>{const t=e.getValue(),{leading:r,trailing:s}=t;if(r){const r=function(e,t){const n=e.getValue(),r=po(e,t);if(!r)return"";if(t.printer.isBlockComment&&t.printer.isBlockComment(n)){const e=eo(t.originalText,t.locEnd(n))?eo(t.originalText,t.locStart(n),{backwards:!0})?Xa:Ga:" ";return Ha([r,e])}return Ha([r,Xa])}(e,n);if(!r)return;o.push(r);const s=n.originalText,i=to(s,no(s,n.locEnd(t)));!1!==i&&eo(s,i)&&o.push(Xa)}else s&&u.push(function(e,t){const n=e.getValue(),r=po(e,t);if(!r)return"";const{printer:s,originalText:i,locStart:a}=t,o=s.isBlockComment&&s.isBlockComment(n);if(eo(i,a(n),{backwards:!0})){const e=ro(i,n,a);return Ya(Ha([Xa,e?Xa:"",r]))}let u=Ha([" ",r]);return o||(u=Ha([Ya(u),Ja])),u}(e,n))}),"comments"),fo(e,n,Ha(o.concat(u)))},printDanglingComments:function(e,t,n,r){const s=[],i=e.getValue();return i&&i.comments?(e.each((e=>{const n=e.getValue();!n||n.leading||n.trailing||r&&!r(n)||s.push(po(e,t))}),"comments"),0===s.length?"":n?Qa(Xa,s):Ka(Ha([Xa,Qa(Xa,s)]))):""},getSortedChildNodes:uo,ensureAllCommentsPrinted:function(e){e&&e.forEach((e=>{if(!e.printed)throw new Error('Comment "'+e.value.trim()+'" was not printed. Please report this error!');delete e.printed}))}};function mo(e,t){const n=go(e.stack,t);return-1===n?null:e.stack[n]}function go(e,t){for(let n=e.length-1;n>=0;n-=2){const r=e[n];if(r&&!Array.isArray(r)&&--t<0)return n}return-1}var yo=class{constructor(e){this.stack=[e]}getName(){const{stack:e}=this,{length:t}=e;return t>1?e[t-2]:null}getValue(){return ue(this.stack)}getNode(e=0){return mo(this,e)}getParentNode(e=0){return mo(this,e+1)}call(e,...t){const{stack:n}=this,{length:r}=n;let s=ue(n);for(const e of t)s=s[e],n.push(e,s);const i=e(this);return n.length=r,i}callParent(e,t=0){const n=go(this.stack,t+1),r=this.stack.splice(n+1),s=e(this);return this.stack.push(...r),s}each(e,...t){const{stack:n}=this,{length:r}=n;let s=ue(n);for(const e of t)s=s[e],n.push(e,s);for(let t=0;t<s.length;++t)n.push(t,s[t]),e(this,t),n.length-=2;n.length=r}map(e,...t){const n=[];return this.each(((t,r)=>{n[r]=e(t,r)}),...t),n}match(...e){let t=this.stack.length-1,n=null,r=this.stack[t--];for(const s of e){if(void 0===r)return!1;let e=null;if("number"==typeof n&&(e=n,n=this.stack[t--],r=this.stack[t--]),s&&!s(r,n,e))return!1;n=this.stack[t--],r=this.stack[t--]}return!0}};const{utils:{stripTrailingHardline:Eo}}=cn,{normalize:Co}=$a;var Ao=function(e,t,n,r){if(n.printer.embed&&"auto"===n.embeddedLanguageFormatting)return n.printer.embed(e,t,((e,t,s)=>function(e,t,n,r,{stripTrailingHardline:s=!1}={}){const i=Co(Object.assign({},n,t,{parentParser:n.parser,embeddedInHtml:!(!n.embeddedInHtml&&"html"!==n.parser&&"vue"!==n.parser&&"angular"!==n.parser&&"lwc"!==n.parser),originalText:e}),{passThrough:!0}),a=_a.parse(e,i),{ast:o}=a;e=a.text;const u=o.comments;delete o.comments,Do.attach(u,o,e,i),i[Symbol.for("comments")]=u||[],i[Symbol.for("tokens")]=o.tokens||[];const c=r(o,i);return Do.ensureAllCommentsPrinted(u),s?"string"==typeof c?c.replace(/(?:\r?\n)*$/,""):Eo(c,!0):c}(e,t,n,r,s)),n)};const bo=cn,Fo=bo.builders,{concat:xo,hardline:vo,addAlignmentToDoc:So}=Fo,To=bo.utils;function wo(e,t,n=0){const{printer:r}=t;r.preprocess&&(e=r.preprocess(e,t));const s=new Map;let i=function e(n,i){const a=n.getValue(),o=a&&"object"==typeof a&&void 0===i;if(o&&s.has(a))return s.get(a);let u;return u=r.willPrintOwnComments&&r.willPrintOwnComments(n,t)?Bo(n,t,e,i):Do.printComments(n,(n=>Bo(n,t,e,i)),t,i&&i.needsSemi),o&&s.set(a,u),u}(new yo(e));return n>0&&(i=So(xo([vo,i]),n,t.tabWidth)),To.propagateBreaks(i),i}function Bo(e,t,n,r){za.ok(e instanceof yo);const s=e.getValue(),{printer:i}=t;if(i.hasPrettierIgnore&&i.hasPrettierIgnore(e))return function(e,t){const{originalText:n,[Symbol.for("comments")]:r,locStart:s,locEnd:i}=t,a=s(e),o=i(e);for(const e of r)s(e)>=a&&i(e)<=o&&(e.printed=!0);return n.slice(a,o)}(s,t);if(s)try{const r=Ao(e,n,t,wo);if(r)return r}catch(e){if(_e.PRETTIER_DEBUG)throw e}return i.print(e,t,n,r)}var Po=wo;function No(e,t,n,r,s=[]){if(!(t<n.locStart(e)||t>n.locEnd(e))){for(const i of Do.getSortedChildNodes(e,n)){const a=No(i,t,n,r,[e,...s]);if(a)return a}return!r||r(e)?{node:e,parentNodes:s}:void 0}}const ko=new Set(["ObjectExpression","ArrayExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral"]),Io=new Set(["OperationDefinition","FragmentDefinition","VariableDefinition","TypeExtensionDefinition","ObjectTypeDefinition","FieldDefinition","DirectiveDefinition","EnumTypeDefinition","EnumValueDefinition","InputValueDefinition","InputObjectTypeDefinition","SchemaDefinition","OperationTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","ScalarTypeDefinition"]);function Lo(e,t){if(null==t)return!1;switch(e.parser){case"flow":case"babel":case"babel-flow":case"babel-ts":case"typescript":case"espree":case"meriyah":return function(e){return"Directive"===e||"TypeAlias"===e||"TSExportAssignment"===e||e.startsWith("Declare")||e.startsWith("TSDeclare")||e.endsWith("Statement")||e.endsWith("Declaration")}(t.type);case"json":return ko.has(t.type);case"graphql":return Io.has(t.kind);case"vue":return"root"!==t.tag}return!1}var Oo={calculateRange:function(e,t,n){const r=e.slice(t.rangeStart,t.rangeEnd),s=Math.max(t.rangeStart+r.search(/\S/),t.rangeStart);let i;for(i=t.rangeEnd;i>t.rangeStart&&!/\S/.test(e[i-1]);--i);const a=No(n,s,t,(e=>Lo(t,e))),o=No(n,i,t,(e=>Lo(t,e)));if(!a||!o)return{rangeStart:0,rangeEnd:0};const{startNode:u,endNode:c}=function(e,t,n){let r=e.node,s=t.node;if(r===s)return{startNode:r,endNode:s};for(const r of t.parentNodes){if(!("Program"!==r.type&&"File"!==r.type&&n.locStart(r)>=n.locStart(e.node)))break;s=r}for(const s of e.parentNodes){if(!("Program"!==s.type&&"File"!==s.type&&n.locEnd(s)<=n.locEnd(t.node)))break;r=s}return{startNode:r,endNode:s}}(a,o,t);return{rangeStart:Math.min(t.locStart(u),t.locStart(c)),rangeEnd:Math.max(t.locEnd(u),t.locEnd(c))}},findNodeAtOffset:No};const{printer:{printDocToString:_o},debug:{printDocToDebug:Mo}}=cn,{getAlignmentSize:Ro}=Ot,{guessEndOfLine:jo,convertEndOfLineToChars:qo,countEndOfLineChars:Uo,normalizeEndOfLine:$o}=_t,Vo=$a.normalize,Wo=Symbol("cursor");function zo(e,t,n){const r=t.comments;return r&&(delete t.comments,Do.attach(r,t,e,n)),n[Symbol.for("comments")]=r||[],n[Symbol.for("tokens")]=t.tokens||[],n.originalText=e,r}function Ho(e,t,n){if(!e||!e.trim().length)return{formatted:"",cursorOffset:-1};n=n||0;const{ast:r,text:s}=_a.parse(e,t);if(t.cursorOffset>=0){const e=Oo.findNodeAtOffset(r,t.cursorOffset,t);e&&e.node&&(t.cursorNode=e.node)}const i=zo(s,r,t),a=Po(r,t,n),o=_o(a,t);if(Do.ensureAllCommentsPrinted(i),n>0){const e=o.formatted.trim();void 0!==o.cursorNodeStart&&(o.cursorNodeStart-=o.formatted.indexOf(e)),o.formatted=e+qo(t.endOfLine)}if(t.cursorOffset>=0){let e,n,r,i,a;if(t.cursorNode&&o.cursorNodeText?(e=t.locStart(t.cursorNode),n=s.slice(e,t.locEnd(t.cursorNode)),r=t.cursorOffset-e,i=o.cursorNodeStart,a=o.cursorNodeText):(e=0,n=s,r=t.cursorOffset,i=0,a=o.formatted),n===a)return{formatted:o.formatted,cursorOffset:i+r};const u=n.split("");u.splice(r,0,Wo);const c=a.split(""),l=H.diffArrays(u,c);let p=i;for(const e of l)if(e.removed){if(e.value.includes(Wo))break}else p+=e.count;return{formatted:o.formatted,cursorOffset:p}}return{formatted:o.formatted,cursorOffset:-1}}function Go(e,t,n){return"number"!=typeof t||isNaN(t)||t<0||t>e.length?n:t}function Xo(e,t){let{cursorOffset:n,rangeStart:r,rangeEnd:s}=t;return n=Go(e,n,-1),r=Go(e,r,0),s=Go(e,s,e.length),Object.assign({},t,{cursorOffset:n,rangeStart:r,rangeEnd:s})}function Jo(e,t){let{cursorOffset:n,rangeStart:r,rangeEnd:s,endOfLine:i}=Xo(e,t);const a="\ufeff"===e.charAt(0);if(a&&(e=e.slice(1),n--,r--,s--),"auto"===i&&(i=jo(e)),e.includes("\r")){const t=t=>Uo(e.slice(0,Math.max(t,0)),"\r\n");n-=t(n),r-=t(r),s-=t(s),e=$o(e)}return{hasBOM:a,text:e,options:Xo(e,Object.assign({},t,{cursorOffset:n,rangeStart:r,rangeEnd:s,endOfLine:i}))}}function Ko(e,t){let{hasBOM:n,text:r,options:s}=Jo(e,Vo(t));const i=_a.resolveParser(s),a=!i.hasPragma||i.hasPragma(r);if(s.requirePragma&&!a)return{formatted:e,cursorOffset:t.cursorOffset};let o;return s.rangeStart>0||s.rangeEnd<r.length?o=function(e,t){const{ast:n,text:r}=_a.parse(e,t),{rangeStart:s,rangeEnd:i}=Oo.calculateRange(r,t,n),a=r.slice(s,i),o=Math.min(s,r.lastIndexOf("\n",s)+1),u=r.slice(o,s).match(/^\s*/)[0],c=Ro(u,t.tabWidth),l=Ho(a,Object.assign({},t,{rangeStart:0,rangeEnd:1/0,cursorOffset:t.cursorOffset>s&&t.cursorOffset<i?t.cursorOffset-s:-1,endOfLine:"lf"}),c),p=l.formatted.trimEnd();let{cursorOffset:h}=t;h>=i?h=t.cursorOffset+(p.length-a.length):l.cursorOffset>=0&&(h=l.cursorOffset+s);let d=r.slice(0,s)+p+r.slice(i);if("lf"!==t.endOfLine){const e=qo(t.endOfLine);h>=0&&"\r\n"===e&&(h+=Uo(d.slice(0,h),"\n")),d=d.replace(/\n/g,e)}return{formatted:d,cursorOffset:h}}(r,s):(!a&&s.insertPragma&&s.printer.insertPragma&&(r=s.printer.insertPragma(r)),o=Ho(r,s)),n&&(o.formatted="\ufeff"+o.formatted,o.cursorOffset>=0&&o.cursorOffset++),o}var Yo={formatWithCursor:Ko,parse(e,t,n){const{text:r,options:s}=Jo(e,Vo(t)),i=_a.parse(r,s);return n&&(i.ast=Va(i.ast,s)),i},formatAST(e,t){t=Vo(t);const n=Po(e,t);return _o(n,t)},formatDoc:(e,t)=>Ko(Mo(e),Object.assign({},t,{parser:"babel"})).formatted,printToDoc(e,t){t=Vo(t);const{ast:n,text:r}=_a.parse(e,t);return zo(r,n,t),Po(n,t)},printDocToString:(e,t)=>_o(e,Vo(t))};const{getMaxContinuousCount:Qo,getStringWidth:Zo,getAlignmentSize:eu,getIndentSize:tu,skip:nu,skipWhitespace:ru,skipSpaces:su,skipNewline:iu,skipToLineEnd:au,skipEverythingButNewLine:ou,skipInlineComment:uu,skipTrailingComment:cu,hasNewline:lu,hasNewlineInRange:pu,hasSpaces:hu,isNextLineEmpty:du,isNextLineEmptyAfterIndex:fu,isPreviousLineEmpty:Du,getNextNonSpaceNonCommentCharacterIndex:mu,makeString:gu,addLeadingComment:yu,addDanglingComment:Eu,addTrailingComment:Cu}=Ot;var Au={getMaxContinuousCount:Qo,getStringWidth:Zo,getAlignmentSize:eu,getIndentSize:tu,skip:nu,skipWhitespace:ru,skipSpaces:su,skipNewline:iu,skipToLineEnd:au,skipEverythingButNewLine:ou,skipInlineComment:uu,skipTrailingComment:cu,hasNewline:lu,hasNewlineInRange:pu,hasSpaces:hu,isNextLineEmpty:du,isNextLineEmptyAfterIndex:fu,isPreviousLineEmpty:Du,getNextNonSpaceNonCommentCharacterIndex:mu,makeString:gu,addLeadingComment:yu,addDanglingComment:Eu,addTrailingComment:Cu},bu=function(t,n){const{languageId:r}=t,s=e(t,["languageId"]);return Object.assign({linguistLanguageId:r},s,n(t))},Fu=Me((function(e){!function(){function t(e){if(null==e)return!1;switch(e.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return!0}return!1}function n(e){switch(e.type){case"IfStatement":return null!=e.alternate?e.alternate:e.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return e.body}return null}e.exports={isExpression:function(e){if(null==e)return!1;switch(e.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return!0}return!1},isStatement:t,isIterationStatement:function(e){if(null==e)return!1;switch(e.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return!0}return!1},isSourceElement:function(e){return t(e)||null!=e&&"FunctionDeclaration"===e.type},isProblematicIfStatement:function(e){var t;if("IfStatement"!==e.type)return!1;if(null==e.alternate)return!1;t=e.consequent;do{if("IfStatement"===t.type&&null==t.alternate)return!0;t=n(t)}while(t);return!1},trailingStatement:n}}()})),xu=Me((function(e){!function(){var t,n,r,s,i,a;function o(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(Math.floor((e-65536)/1024)+55296)+String.fromCharCode((e-65536)%1024+56320)}for(n={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,NonAsciiIdentifierPart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/},t={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/},r=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],s=new Array(128),a=0;a<128;++a)s[a]=a>=97&&a<=122||a>=65&&a<=90||36===a||95===a;for(i=new Array(128),a=0;a<128;++a)i[a]=a>=97&&a<=122||a>=65&&a<=90||a>=48&&a<=57||36===a||95===a;e.exports={isDecimalDigit:function(e){return 48<=e&&e<=57},isHexDigit:function(e){return 48<=e&&e<=57||97<=e&&e<=102||65<=e&&e<=70},isOctalDigit:function(e){return e>=48&&e<=55},isWhiteSpace:function(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&r.indexOf(e)>=0},isLineTerminator:function(e){return 10===e||13===e||8232===e||8233===e},isIdentifierStartES5:function(e){return e<128?s[e]:n.NonAsciiIdentifierStart.test(o(e))},isIdentifierPartES5:function(e){return e<128?i[e]:n.NonAsciiIdentifierPart.test(o(e))},isIdentifierStartES6:function(e){return e<128?s[e]:t.NonAsciiIdentifierStart.test(o(e))},isIdentifierPartES6:function(e){return e<128?i[e]:t.NonAsciiIdentifierPart.test(o(e))}}}()})),vu=Me((function(e){!function(){var t=xu;function n(e,t){return!(!t&&"yield"===e)&&r(e,t)}function r(e,t){if(t&&function(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return!0;default:return!1}}(e))return!0;switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}}function s(e,t){return"null"===e||"true"===e||"false"===e||n(e,t)}function i(e,t){return"null"===e||"true"===e||"false"===e||r(e,t)}function a(e){var n,r,s;if(0===e.length)return!1;if(s=e.charCodeAt(0),!t.isIdentifierStartES5(s))return!1;for(n=1,r=e.length;n<r;++n)if(s=e.charCodeAt(n),!t.isIdentifierPartES5(s))return!1;return!0}function o(e){var n,r,s,i,a;if(0===e.length)return!1;for(a=t.isIdentifierStartES6,n=0,r=e.length;n<r;++n){if(55296<=(s=e.charCodeAt(n))&&s<=56319){if(++n>=r)return!1;if(!(56320<=(i=e.charCodeAt(n))&&i<=57343))return!1;s=1024*(s-55296)+(i-56320)+65536}if(!a(s))return!1;a=t.isIdentifierPartES6}return!0}e.exports={isKeywordES5:n,isKeywordES6:r,isReservedWordES5:s,isReservedWordES6:i,isRestrictedWord:function(e){return"eval"===e||"arguments"===e},isIdentifierNameES5:a,isIdentifierNameES6:o,isIdentifierES5:function(e,t){return a(e)&&!s(e,t)},isIdentifierES6:function(e,t){return o(e)&&!i(e,t)}}}()}));const Su=Me((function(e,t){t.ast=Fu,t.code=xu,t.keyword=vu})).keyword.isIdentifierNameES5,{getLast:Tu,hasNewline:wu,hasNewlineInRange:Bu,skipWhitespace:Pu}=Ot,{locStart:Nu,locEnd:ku,hasSameLocStart:Iu}=Yi,Lu="(?:(?=.)\\s)",Ou=new RegExp("^".concat(Lu,"*:")),_u=new RegExp("^".concat(Lu,"*::"));function Mu(e,t){if(!e||"object"!=typeof e)return!1;if(Array.isArray(e))return e.some((e=>Mu(e,t)));const n=t(e);return"boolean"==typeof n?n:Object.keys(e).some((n=>Mu(e[n],t)))}function Ru(e){return"AssignmentExpression"===e.type||"BinaryExpression"===e.type||"LogicalExpression"===e.type||"NGPipeExpression"===e.type||"ConditionalExpression"===e.type||"CallExpression"===e.type||"OptionalCallExpression"===e.type||"MemberExpression"===e.type||"OptionalMemberExpression"===e.type||"SequenceExpression"===e.type||"TaggedTemplateExpression"===e.type||"BindExpression"===e.type||"UpdateExpression"===e.type&&!e.prefix||"TSAsExpression"===e.type||"TSNonNullExpression"===e.type}function ju(e){return"Block"===e.type||"CommentBlock"===e.type||"MultiLine"===e.type}const qu=new Set(["ExportDefaultDeclaration","ExportDefaultSpecifier","DeclareExportDeclaration","ExportNamedDeclaration","ExportAllDeclaration"]);function Uu(e){return e&&qu.has(e.type)}function $u(e){return"BooleanLiteral"===e.type||"DirectiveLiteral"===e.type||"Literal"===e.type||"NullLiteral"===e.type||"NumericLiteral"===e.type||"BigIntLiteral"===e.type||"DecimalLiteral"===e.type||"RegExpLiteral"===e.type||"StringLiteral"===e.type||"TemplateLiteral"===e.type||"TSTypeLiteral"===e.type||"JSXText"===e.type}function Vu(e){return"NumericLiteral"===e.type||"Literal"===e.type&&"number"==typeof e.value}function Wu(e){return"StringLiteral"===e.type||"Literal"===e.type&&"string"==typeof e.value}function zu(e){return"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type}function Hu(e){return!("CallExpression"!==e.type&&"OptionalCallExpression"!==e.type||"Identifier"!==e.callee.type||"async"!==e.callee.name&&"inject"!==e.callee.name&&"fakeAsync"!==e.callee.name)}function Gu(e){return"JSXElement"===e.type||"JSXFragment"===e.type}function Xu(e){return"get"===e.kind||"set"===e.kind}function Ju(e){return Xu(e)||Iu(e,e.value)}const Ku=new Set(["BinaryExpression","LogicalExpression","NGPipeExpression"]),Yu=new Set(["AnyTypeAnnotation","TSAnyKeyword","NullLiteralTypeAnnotation","TSNullKeyword","ThisTypeAnnotation","TSThisType","NumberTypeAnnotation","TSNumberKeyword","VoidTypeAnnotation","TSVoidKeyword","BooleanTypeAnnotation","TSBooleanKeyword","BigIntTypeAnnotation","TSBigIntKeyword","SymbolTypeAnnotation","TSSymbolKeyword","StringTypeAnnotation","TSStringKeyword","BooleanLiteralTypeAnnotation","StringLiteralTypeAnnotation","BigIntLiteralTypeAnnotation","NumberLiteralTypeAnnotation","TSLiteralType","TSTemplateLiteralType","EmptyTypeAnnotation","MixedTypeAnnotation","TSNeverKeyword","TSObjectKeyword","TSUndefinedKeyword","TSUnknownKeyword"]),Qu=/^(skip|[fx]?(it|describe|test))$/;function Zu(e){return"CallExpression"===e.type||"OptionalCallExpression"===e.type}const ec=new RegExp("([ \n\r\t]+)"),tc=new RegExp("[^ \n\r\t]");function nc(e){return $u(e)&&(tc.test(ac(e))||!/\n/.test(ac(e)))}function rc(e,t){return Gu(t)?mc(t):t.comments&&t.comments.some((t=>t.leading&&wu(e,ku(t))))}function sc(e){return/^(\d+|\d+\.\d+)$/.test(e)}function ic(e){return e.quasis.some((e=>e.value.raw.includes("\n")))}function ac(e){return e.extra?e.extra.raw:e.raw}const oc={"==":!0,"!=":!0,"===":!0,"!==":!0},uc={"*":!0,"/":!0,"%":!0},cc={">>":!0,">>>":!0,"<<":!0},lc={};function pc(e){return lc[e]}[["|>"],["??"],["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"],["**"]].forEach(((e,t)=>{e.forEach((e=>{lc[e]=t}))}));const hc=new WeakMap;function dc(e){if(hc.has(e))return hc.get(e);const t=[];return e.this&&t.push(e.this),Array.isArray(e.parameters)?t.push(...e.parameters):Array.isArray(e.params)&&t.push(...e.params),e.rest&&t.push(e.rest),hc.set(e,t),t}const fc=new WeakMap;function Dc(e){return"prettier-ignore"===e.value.trim()}function mc(e){return e&&(e.comments&&e.comments.length>0&&e.comments.some((e=>Dc(e)&&!e.unignore))||e.prettierIgnore)}function gc(e){return mc(e.getValue())}var yc={classChildNeedsASIProtection:function(e){if(e){if(e.static||e.accessibility)return!1;if(!e.computed){const t=e.key&&e.key.name;if("in"===t||"instanceof"===t)return!0}switch(e.type){case"ClassProperty":case"FieldDefinition":case"TSAbstractClassProperty":return e.computed;case"MethodDefinition":case"TSAbstractMethodDefinition":case"ClassMethod":case"ClassPrivateMethod":{const t=e.value?e.value.async:e.async,n=e.value?e.value.generator:e.generator;return!(t||"get"===e.kind||"set"===e.kind||!e.computed&&!n)}case"TSIndexSignature":return!0;default:return!1}}},classPropMayCauseASIProblems:function(e){const t=e.getNode();if("ClassProperty"!==t.type&&"FieldDefinition"!==t.type)return!1;const n=t.key&&t.key.name;return!("static"!==n&&"get"!==n&&"set"!==n||t.value||t.typeAnnotation)||void 0},getFunctionParameters:dc,iterateFunctionParametersPath:function(e,t){const n=e.getValue();let r=0;const s=e=>t(e,r++);n.this&&e.call(s,"this"),Array.isArray(n.parameters)?e.each(s,"parameters"):Array.isArray(n.params)&&e.each(s,"params"),n.rest&&e.call(s,"rest")},getCallArguments:function(e){if(fc.has(e))return fc.get(e);const t="ImportExpression"===e.type?[e.source]:e.arguments;return fc.set(e,t),t},iterateCallArgumentsPath:function(e,t){"ImportExpression"===e.getValue().type?e.call((e=>t(e,0)),"source"):e.each(t,"arguments")},hasRestParameter:function(e){if(e.rest)return!0;const t=dc(e);return t.length>0&&"RestElement"===Tu(t).type},getLeftSidePathName:function(e,t){if(t.expressions)return["expressions",0];if(t.left)return["left"];if(t.test)return["test"];if(t.object)return["object"];if(t.callee)return["callee"];if(t.tag)return["tag"];if(t.argument)return["argument"];if(t.expression)return["expression"];throw new Error("Unexpected node has no left side.")},getParentExportDeclaration:function(e){const t=e.getParentNode();return"declaration"===e.getName()&&Uu(t)?t:null},getTypeScriptMappedTypeModifier:function(e,t){return"+"===e?"+"+t:"-"===e?"-"+t:t},hasDanglingComments:function(e){return e.comments&&e.comments.some((e=>!e.leading&&!e.trailing))},hasFlowAnnotationComment:function(e){return e&&ju(e[0])&&_u.test(e[0].value)},hasFlowShorthandAnnotationComment:function(e){return e.extra&&e.extra.parenthesized&&e.trailingComments&&ju(e.trailingComments[0])&&Ou.test(e.trailingComments[0].value)},hasLeadingComment:function(e){return e.comments&&e.comments.some((e=>e.leading))},hasLeadingOwnLineComment:rc,hasNakedLeftSide:Ru,hasNewlineBetweenOrAfterDecorators:function(e,t){return Bu(t.originalText,Nu(e.decorators[0]),ku(Tu(e.decorators)))||wu(t.originalText,ku(Tu(e.decorators)))},hasNgSideEffect:function(e){return Mu(e.getValue(),(e=>{switch(e.type){case void 0:return!1;case"CallExpression":case"OptionalCallExpression":case"AssignmentExpression":return!0}}))},hasNode:Mu,hasPrettierIgnore:function(e){return gc(e)||function(e){const t=e.getValue(),n=e.getParentNode();if(!(n&&t&&Gu(t)&&Gu(n)))return!1;let r=null;for(let e=n.children.indexOf(t);e>0;e--){const t=n.children[e-1];if("JSXText"!==t.type||nc(t)){r=t;break}}return r&&"JSXExpressionContainer"===r.type&&"JSXEmptyExpression"===r.expression.type&&r.expression.comments&&r.expression.comments.some((e=>Dc(e)))}(e)},hasTrailingComment:function(e){return e.comments&&e.comments.some((e=>e.trailing))},hasTrailingLineComment:function(e){return e.comments&&e.comments.some((e=>e.trailing&&!ju(e)))},hasIgnoreComment:gc,hasNodeIgnoreComment:mc,identity:function(e){return e},isBinaryish:function(e){return Ku.has(e.type)},isBlockComment:ju,isLineComment:function(e){return"Line"===e.type||"CommentLine"===e.type||"SingleLine"===e.type||"HashbangComment"===e.type||"HTMLOpen"===e.type||"HTMLClose"===e.type},isPrettierIgnoreComment:Dc,isCallOrOptionalCallExpression:Zu,isEmptyJSXElement:function(e){if(0===e.children.length)return!0;if(e.children.length>1)return!1;const t=e.children[0];return $u(t)&&!nc(t)},isExportDeclaration:Uu,isFlowAnnotationComment:function(e,t){const n=Nu(t),r=Pu(e,ku(t));return!1!==r&&"/*"===e.slice(n,n+2)&&"*/"===e.slice(r,r+2)},isFunctionCompositionArgs:function(e){if(e.length<=1)return!1;let t=0;for(const n of e)if(zu(n)){if(t+=1,t>1)return!0}else if(Zu(n))for(const e of n.arguments)if(zu(e))return!0;return!1},isFunctionNotation:Ju,isFunctionOrArrowExpression:zu,isGetterOrSetter:Xu,isJestEachTemplateLiteral:function(e,t){const n=/^[fx]?(describe|it|test)$/;return"TaggedTemplateExpression"===t.type&&t.quasi===e&&"MemberExpression"===t.tag.type&&"Identifier"===t.tag.property.type&&"each"===t.tag.property.name&&("Identifier"===t.tag.object.type&&n.test(t.tag.object.name)||"MemberExpression"===t.tag.object.type&&"Identifier"===t.tag.object.property.type&&("only"===t.tag.object.property.name||"skip"===t.tag.object.property.name)&&"Identifier"===t.tag.object.object.type&&n.test(t.tag.object.object.name))},isJSXNode:Gu,isJSXWhitespaceExpression:function(e){return"JSXExpressionContainer"===e.type&&$u(e.expression)&&" "===e.expression.value&&!e.expression.comments},isLastStatement:function(e){const t=e.getParentNode();if(!t)return!0;const n=e.getValue(),r=(t.body||t.consequent).filter((e=>"EmptyStatement"!==e.type));return r[r.length-1]===n},isLiteral:$u,isLongCurriedCallExpression:function(e){const t=e.getValue(),n=e.getParentNode();return Zu(t)&&Zu(n)&&n.callee===t&&t.arguments.length>n.arguments.length&&n.arguments.length>0},isSimpleCallArgument:function e(t,n){if(n>=2)return!1;const r=t=>e(t,n+1),s="Literal"===t.type&&"regex"in t&&t.regex.pattern||"RegExpLiteral"===t.type&&t.pattern;return!(s&&s.length>5)&&("Literal"===t.type||"BigIntLiteral"===t.type||"DecimalLiteral"===t.type||"BooleanLiteral"===t.type||"NullLiteral"===t.type||"NumericLiteral"===t.type||"RegExpLiteral"===t.type||"StringLiteral"===t.type||"Identifier"===t.type||"ThisExpression"===t.type||"Super"===t.type||"PrivateName"===t.type||"ArgumentPlaceholder"===t.type||"Import"===t.type||("TemplateLiteral"===t.type?t.expressions.every(r):"ObjectExpression"===t.type?t.properties.every((e=>!e.computed&&(e.shorthand||e.value&&r(e.value)))):"ArrayExpression"===t.type?t.elements.every((e=>null===e||r(e))):"ImportExpression"===t.type?r(t.source):"CallExpression"===t.type||"OptionalCallExpression"===t.type||"NewExpression"===t.type?e(t.callee,n)&&t.arguments.every(r):"MemberExpression"===t.type||"OptionalMemberExpression"===t.type?e(t.object,n)&&e(t.property,n):"UnaryExpression"!==t.type||"!"!==t.operator&&"-"!==t.operator?"TSNonNullExpression"===t.type&&e(t.expression,n):e(t.argument,n)))},isMeaningfulJSXText:nc,isMemberExpressionChain:function e(t){return("MemberExpression"===t.type||"OptionalMemberExpression"===t.type)&&("Identifier"===t.object.type||e(t.object))},isMemberish:function(e){return"MemberExpression"===e.type||"OptionalMemberExpression"===e.type||"BindExpression"===e.type&&Boolean(e.object)},isNgForOf:function(e,t,n){return"NGMicrosyntaxKeyedExpression"===e.type&&"of"===e.key.name&&1===t&&"NGMicrosyntaxLet"===n.body[0].type&&null===n.body[0].value},isNumericLiteral:Vu,isObjectType:function(e){return"ObjectTypeAnnotation"===e.type||"TSTypeLiteral"===e.type},isObjectTypePropertyAFunction:function(e){return!("ObjectTypeProperty"!==e.type&&"ObjectTypeInternalSlot"!==e.type||"FunctionTypeAnnotation"!==e.value.type||e.static||Ju(e))},isSimpleType:function(e){return!(!e||("GenericTypeAnnotation"!==e.type&&"TSTypeReference"!==e.type||e.typeParameters)&&!Yu.has(e.type))},isSimpleNumber:sc,isSimpleTemplateLiteral:function(e){let t="expressions";"TSTemplateLiteralType"===e.type&&(t="types");const n=e[t];return 0!==n.length&&n.every((e=>{if(e.comments)return!1;if("Identifier"===e.type||"ThisExpression"===e.type)return!0;if("MemberExpression"===e.type||"OptionalMemberExpression"===e.type){let t=e;for(;"MemberExpression"===t.type||"OptionalMemberExpression"===t.type;){if("Identifier"!==t.property.type&&"Literal"!==t.property.type&&"StringLiteral"!==t.property.type&&"NumericLiteral"!==t.property.type)return!1;if(t=t.object,t.comments)return!1}return"Identifier"===t.type||"ThisExpression"===t.type}return!1}))},isStringLiteral:Wu,isStringPropSafeToUnquote:function(e,t){return"json"!==t.parser&&Wu(e.key)&&ac(e.key).slice(1,-1)===e.key.value&&(Su(e.key.value)&&!(("typescript"===t.parser||"babel-ts"===t.parser)&&"ClassProperty"===e.type)||sc(e.key.value)&&String(Number(e.key.value))===e.key.value&&("babel"===t.parser||"espree"===t.parser||"meriyah"===t.parser))},isTemplateOnItsOwnLine:function(e,t){return("TemplateLiteral"===e.type&&ic(e)||"TaggedTemplateExpression"===e.type&&ic(e.quasi))&&!wu(t,Nu(e),{backwards:!0})},isTestCall:function e(t,n){if("CallExpression"!==t.type)return!1;if(1===t.arguments.length){if(Hu(t)&&n&&e(n))return zu(t.arguments[0]);if("Identifier"===(r=t).callee.type&&/^(before|after)(Each|All)$/.test(r.callee.name)&&1===r.arguments.length)return Hu(t.arguments[0])}else if((2===t.arguments.length||3===t.arguments.length)&&("Identifier"===t.callee.type&&Qu.test(t.callee.name)||function(e){return("MemberExpression"===e.callee.type||"OptionalMemberExpression"===e.callee.type)&&"Identifier"===e.callee.object.type&&"Identifier"===e.callee.property.type&&Qu.test(e.callee.object.name)&&("only"===e.callee.property.name||"skip"===e.callee.property.name)}(t))&&(function(e){return"TemplateLiteral"===e.type}(t.arguments[0])||Wu(t.arguments[0])))return!(t.arguments[2]&&!Vu(t.arguments[2]))&&((2===t.arguments.length?zu(t.arguments[1]):function(e){return"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type&&"BlockStatement"===e.body.type}(t.arguments[1])&&dc(t.arguments[1]).length<=1)||Hu(t.arguments[1]));var r;return!1},isTheOnlyJSXElementInMarkdown:function(e,t){if("markdown"!==e.parentParser&&"mdx"!==e.parentParser)return!1;const n=t.getNode();if(!n.expression||!Gu(n.expression))return!1;const r=t.getParentNode();return"Program"===r.type&&1===r.body.length},isTSXFile:function(e){return e.filepath&&/\.tsx$/i.test(e.filepath)},isTypeAnnotationAFunction:function(e){return!("TypeAnnotation"!==e.type&&"TSTypeAnnotation"!==e.type||"FunctionTypeAnnotation"!==e.typeAnnotation.type||e.static||Iu(e,e.typeAnnotation))},matchJsxWhitespaceRegex:ec,needsHardlineAfterDanglingComment:function(e){if(!e.comments)return!1;const t=Tu(e.comments.filter((e=>!e.leading&&!e.trailing)));return t&&!ju(t)},rawText:ac,returnArgumentHasLeadingComment:function(e,t){if(rc(e.originalText,t))return!0;if(Ru(t)){let r,s=t;for(;r=(n=s).expressions?n.expressions[0]:n.left||n.test||n.callee||n.object||n.tag||n.argument||n.expression;)if(s=r,rc(e.originalText,s))return!0}var n;return!1},shouldPrintComma:function(e,t="es5"){return"es5"===e.trailingComma&&"es5"===t||"all"===e.trailingComma&&("all"===t||"es5"===t)},isBitwiseOperator:function(e){return!!cc[e]||"|"===e||"^"===e||"&"===e},shouldFlatten:function(e,t){return!(pc(t)!==pc(e)||"**"===e||oc[e]&&oc[t]||"%"===t&&uc[e]||"%"===e&&uc[t]||t!==e&&uc[t]&&uc[e]||cc[e]&&cc[t])},startsWithNoLookaheadToken:function e(t,n){switch((t=function(e){for(;e.left;)e=e.left;return e}(t)).type){case"FunctionExpression":case"ClassExpression":case"DoExpression":return n;case"ObjectExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return e(t.object,n);case"TaggedTemplateExpression":return"FunctionExpression"!==t.tag.type&&e(t.tag,n);case"CallExpression":case"OptionalCallExpression":return"FunctionExpression"!==t.callee.type&&e(t.callee,n);case"ConditionalExpression":return e(t.test,n);case"UpdateExpression":return!t.prefix&&e(t.argument,n);case"BindExpression":return t.object&&e(t.object,n);case"SequenceExpression":return e(t.expressions[0],n);case"TSAsExpression":return e(t.expression,n);default:return!1}},getPrecedence:pc};const{getLast:Ec,hasNewline:Cc,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:Ac,getNextNonSpaceNonCommentCharacter:bc,hasNewlineInRange:Fc,addLeadingComment:xc,addTrailingComment:vc,addDanglingComment:Sc,getNextNonSpaceNonCommentCharacterIndex:Tc}=Ot,{isBlockComment:wc,getFunctionParameters:Bc,isPrettierIgnoreComment:Pc,isJSXNode:Nc,hasFlowShorthandAnnotationComment:kc,hasFlowAnnotationComment:Ic,hasIgnoreComment:Lc}=yc,{locStart:Oc,locEnd:_c}=Yi;function Mc(e,t){const n=(e.body||e.properties).find((({type:e})=>"EmptyStatement"!==e));n?xc(n,t):Sc(e,t)}function Rc(e,t){"BlockStatement"===e.type?Mc(e,t):xc(e,t)}function jc(e,t){const{precedingNode:n,enclosingNode:r,followingNode:s}=e;return!(!r||"IfStatement"!==r.type||!s||(")"===bc(t,e,_c)?(vc(n,e),0):n===r.consequent&&s===r.alternate?("BlockStatement"===n.type?vc(n,e):Sc(r,e),0):"BlockStatement"===s.type?(Mc(s,e),0):"IfStatement"===s.type?(Rc(s.consequent,e),0):r.consequent!==s||(xc(s,e),0)))}function qc(e,t){const{precedingNode:n,enclosingNode:r,followingNode:s}=e;return!(!r||"WhileStatement"!==r.type||!s||(")"===bc(t,e,_c)?(vc(n,e),0):"BlockStatement"===s.type?(Mc(s,e),0):r.body!==s||(xc(s,e),0)))}function Uc(e){const{precedingNode:t,enclosingNode:n,followingNode:r}=e;return!(!n||"TryStatement"!==n.type&&"CatchClause"!==n.type||!r||("CatchClause"===n.type&&t?(vc(t,e),0):"BlockStatement"===r.type?(Mc(r,e),0):"TryStatement"===r.type?(Rc(r.finalizer,e),0):"CatchClause"!==r.type||(Rc(r.body,e),0)))}function $c(e){const{precedingNode:t,enclosingNode:n,followingNode:r}=e;if(n&&("ClassDeclaration"===n.type||"ClassExpression"===n.type||"DeclareClass"===n.type||"DeclareInterface"===n.type||"InterfaceDeclaration"===n.type||"TSInterfaceDeclaration"===n.type)){if(n.decorators&&n.decorators.length>0&&(!r||"Decorator"!==r.type))return vc(n.decorators[n.decorators.length-1],e),!0;if(n.body&&r===n.body)return Mc(n.body,e),!0;if(r)for(const s of["implements","extends","mixins"])if(n[s]&&r===n[s][0])return!t||t!==n.id&&t!==n.typeParameters&&t!==n.superClass?Sc(n,e,s):vc(t,e),!0}return!1}function Vc(e,t){const{precedingNode:n,enclosingNode:r}=e;return(r&&n&&("Property"===r.type||"TSDeclareMethod"===r.type||"TSAbstractMethodDefinition"===r.type)&&"Identifier"===n.type&&r.key===n&&":"!==bc(t,n,_c)||!(!n||!r||"Decorator"!==n.type||"ClassMethod"!==r.type&&"ClassProperty"!==r.type&&"FieldDefinition"!==r.type&&"TSAbstractClassProperty"!==r.type&&"TSAbstractMethodDefinition"!==r.type&&"TSDeclareMethod"!==r.type&&"MethodDefinition"!==r.type))&&(vc(n,e),!0)}function Wc(e,t){const{precedingNode:n,enclosingNode:r,followingNode:s}=e;if(n&&"FunctionTypeParam"===n.type&&r&&"FunctionTypeAnnotation"===r.type&&s&&"FunctionTypeParam"!==s.type)return vc(n,e),!0;if(n&&("Identifier"===n.type||"AssignmentPattern"===n.type)&&r&&Jc(r)&&")"===bc(t,e,_c))return vc(n,e),!0;if(r&&"FunctionDeclaration"===r.type&&s&&"BlockStatement"===s.type){const n=(()=>{const e=Bc(r);if(0!==e.length)return Ac(t,_c(Ec(e)));const n=Ac(t,_c(r.id));return!1!==n&&Ac(t,n+1)})();if(Oc(e)>n)return Mc(s,e),!0}return!1}function zc(e){const{enclosingNode:t}=e;return!(!t||"ImportSpecifier"!==t.type||(xc(t,e),0))}function Hc(e){const{enclosingNode:t}=e;return!(!t||"LabeledStatement"!==t.type||(xc(t,e),0))}function Gc(e,t,n){const{enclosingNode:r}=e;return t&&t.body&&0===t.body.length?(n?Sc(t,e):xc(t,e),!0):!(!r||"Program"!==r.type||0!==r.body.length||!r.directives||0!==r.directives.length||(n?Sc(r,e):xc(r,e),0))}function Xc(e){const{enclosingNode:t,followingNode:n}=e;if(Pc(e)&&t&&"TSMappedType"===t.type&&n&&"TSTypeParameter"===n.type&&n.constraint)return t.prettierIgnore=!0,e.unignore=!0,!0}function Jc(e){return"ArrowFunctionExpression"===e.type||"FunctionExpression"===e.type||"FunctionDeclaration"===e.type||"ObjectMethod"===e.type||"ClassMethod"===e.type||"TSDeclareFunction"===e.type||"TSCallSignatureDeclaration"===e.type||"TSConstructSignatureDeclaration"===e.type||"TSMethodSignature"===e.type||"TSConstructorType"===e.type||"TSFunctionType"===e.type||"TSDeclareMethod"===e.type}function Kc(e){return wc(e)&&"*"===e.value[0]&&/@type\b/.test(e.value)}var Yc={handleOwnLineComment:function(e,t,n,r,s){return Xc(e)||Wc(e,t)||function(e){const{enclosingNode:t,followingNode:n}=e;return!(!t||"MemberExpression"!==t.type&&"OptionalMemberExpression"!==t.type||!n||"Identifier"!==n.type||(xc(t,e),0))}(e)||jc(e,t)||qc(e,t)||Uc(e)||$c(e)||zc(e)||function(e){const{enclosingNode:t}=e;return!(!t||"ForInStatement"!==t.type&&"ForOfStatement"!==t.type||(xc(t,e),0))}(e)||function(e){const{precedingNode:t,enclosingNode:n,followingNode:r}=e;return!n||"UnionTypeAnnotation"!==n.type&&"TSUnionType"!==n.type?(r&&("UnionTypeAnnotation"===r.type||"TSUnionType"===r.type)&&Pc(e)&&(r.types[0].prettierIgnore=!0,e.unignore=!0),!1):(Pc(e)&&(r.prettierIgnore=!0,e.unignore=!0),!!t&&(vc(t,e),!0))}(e)||Gc(e,r,s)||function(e,t){const{precedingNode:n,enclosingNode:r}=e;return!!(n&&"ImportSpecifier"===n.type&&r&&"ImportDeclaration"===r.type&&Cc(t,_c(e)))&&(vc(n,e),!0)}(e,t)||function(e){const{enclosingNode:t}=e;return!(!t||"AssignmentPattern"!==t.type||(xc(t,e),0))}(e)||Vc(e,t)||Hc(e)},handleEndOfLineComment:function(e,t,n,r,s){return function(e){const{followingNode:t}=e;return!(!t||!Kc(e)||(xc(t,e),0))}(e)||Wc(e,t)||function(e,t){const{precedingNode:n,enclosingNode:r,followingNode:s}=e,i=n&&!Fc(t,_c(n),Oc(e));return!(n&&i||!r||"ConditionalExpression"!==r.type&&"TSConditionalType"!==r.type||!s||(xc(s,e),0))}(e,t)||zc(e)||jc(e,t)||qc(e,t)||Uc(e)||$c(e)||Hc(e)||function(e){const{precedingNode:t,enclosingNode:n}=e;return!!(n&&("CallExpression"===n.type||"OptionalCallExpression"===n.type)&&t&&n.callee===t&&n.arguments.length>0)&&(xc(n.arguments[0],e),!0)}(e)||function(e){const{enclosingNode:t}=e;return!(!t||"Property"!==t.type&&"ObjectProperty"!==t.type||(xc(t,e),0))}(e)||Gc(e,r,s)||function(e){const{enclosingNode:t}=e;return!(!t||"TypeAlias"!==t.type||(xc(t,e),0))}(e)||function(e){const{enclosingNode:t,followingNode:n}=e;return!(!t||"VariableDeclarator"!==t.type&&"AssignmentExpression"!==t.type||!n||"ObjectExpression"!==n.type&&"ArrayExpression"!==n.type&&"TemplateLiteral"!==n.type&&"TaggedTemplateExpression"!==n.type&&!wc(e)||(xc(n,e),0))}(e)},handleRemainingComment:function(e,t,n,r,s){return!!(Xc(e)||jc(e,t)||qc(e,t)||function(e){const{precedingNode:t,enclosingNode:n}=e;return!(!n||"ObjectProperty"!==n.type&&"Property"!==n.type||!n.shorthand||n.key!==t||"AssignmentPattern"!==n.value.type||(vc(n.value.left,e),0))}(e)||function(e,t){if(")"!==bc(t,e,_c))return!1;const{enclosingNode:n}=e;return n&&(Jc(n)&&0===Bc(n).length||("CallExpression"===n.type||"OptionalCallExpression"===n.type||"NewExpression"===n.type)&&0===n.arguments.length)?(Sc(n,e),!0):!(!n||"MethodDefinition"!==n.type||0!==Bc(n.value).length||(Sc(n.value,e),0))}(e,t)||Vc(e,t)||Gc(e,r,s)||function(e,t){const{enclosingNode:n}=e;if(!n||"ArrowFunctionExpression"!==n.type)return!1;const r=Tc(t,e,_c);return!1!==r&&"=>"===t.slice(r,r+2)&&(Sc(n,e),!0)}(e,t)||function(e,t){if("("!==bc(t,e,_c))return!1;const{precedingNode:n,enclosingNode:r}=e;return!(!n||!r||"FunctionDeclaration"!==r.type&&"FunctionExpression"!==r.type&&"ClassMethod"!==r.type&&"MethodDefinition"!==r.type&&"ObjectMethod"!==r.type||(vc(n,e),0))}(e,t)||function(e){const{precedingNode:t,enclosingNode:n,followingNode:r}=e;return!(!n||"TSMappedType"!==n.type||(r&&"TSTypeParameter"===r.type&&r.name?(xc(r.name,e),0):!t||"TSTypeParameter"!==t.type||!t.constraint||(vc(t.constraint,e),0)))}(e)||function(e){const{enclosingNode:t}=e;return!(!t||"ContinueStatement"!==t.type&&"BreakStatement"!==t.type||t.label||(vc(t,e),0))}(e)||function(e,t){const{enclosingNode:n,followingNode:r}=e;return!(r||!n||"TSMethodSignature"!==n.type&&"TSDeclareFunction"!==n.type&&"TSAbstractMethodDefinition"!==n.type||";"!==bc(t,e,_c)||(vc(n,e),0))}(e,t))},hasLeadingComment:function(e,t=(()=>!0)){return e.leadingComments?e.leadingComments.some(t):!!e.comments&&e.comments.some((e=>e.leading&&t(e)))},isTypeCastComment:Kc,getGapRegex:function(e){if(e&&"BinaryExpression"!==e.type&&"LogicalExpression"!==e.type)return/^[\s&(|]*$/},getCommentChildNodes:function(e,t){if(("typescript"===t.parser||"flow"===t.parser||"espree"===t.parser||"meriyah"===t.parser)&&"MethodDefinition"===e.type&&e.value&&"FunctionExpression"===e.value.type&&0===Bc(e.value).length&&!e.value.returnType&&(!e.value.typeParameters||0===e.value.typeParameters.length)&&e.value.body)return[...e.decorators||[],e.key,e.value.body]},willPrintOwnComments:function(e){const t=e.getValue(),n=e.getParentNode();return(t&&(Nc(t)||kc(t)||n&&("CallExpression"===n.type||"OptionalCallExpression"===n.type)&&(Ic(t.leadingComments)||Ic(t.trailingComments)))||n&&("JSXSpreadAttribute"===n.type||"JSXSpreadChild"===n.type||"UnionTypeAnnotation"===n.type||"TSUnionType"===n.type||("ClassDeclaration"===n.type||"ClassExpression"===n.type)&&n.superClass===t))&&(!Lc(e)||"UnionTypeAnnotation"===n.type||"TSUnionType"===n.type)}};const{getStringWidth:Qc,getIndentSize:Zc}=Ot,{builders:{concat:el,join:tl,hardline:nl,softline:rl,group:sl,indent:il,align:al,lineSuffixBoundary:ol,addAlignmentToDoc:ul},printer:{printDocToString:cl},utils:{mapDoc:ll}}=cn,{isBinaryish:pl,isJestEachTemplateLiteral:hl,isSimpleTemplateLiteral:dl}=yc;function fl(e){return e.replace(/([\\`]|\${)/g,"\\$1")}var Dl={printTemplateLiteral:function(e,t,n){const r=e.getValue();if("TemplateLiteral"===r.type&&hl(r,e.getParentNode())){const r=function(e,t,n){const r=e.getNode(),s=r.quasis[0].value.raw.trim().split(/\s*\|\s*/);if(s.length>1||s.some((e=>0!==e.length))){t.__inJestEach=!0;const i=e.map(n,"expressions");t.__inJestEach=!1;const a=[],o=i.map((e=>"${"+cl(e,Object.assign({},t,{printWidth:1/0,endOfLine:"lf"})).formatted+"}")),u=[{hasLineBreak:!1,cells:[]}];for(let e=1;e<r.quasis.length;e++){const t=u[u.length-1],n=o[e-1];t.cells.push(n),n.includes("\n")&&(t.hasLineBreak=!0),r.quasis[e].value.raw.includes("\n")&&u.push({hasLineBreak:!1,cells:[]})}const c=Math.max(s.length,...u.map((e=>e.cells.length))),l=Array.from({length:c}).fill(0),p=[{cells:s},...u.filter((e=>0!==e.cells.length))];for(const{cells:e}of p.filter((e=>!e.hasLineBreak)))e.forEach(((e,t)=>{l[t]=Math.max(l[t],Qc(e))}));return a.push(ol,"`",il(el([nl,tl(nl,p.map((e=>tl(" | ",e.cells.map(((t,n)=>e.hasLineBreak?t:t+" ".repeat(l[n]-Qc(t))))))))])),nl,"`"),el(a)}}(e,n,t);if(r)return r}let s="expressions";"TSTemplateLiteralType"===r.type&&(s="types");const i=[];let a=e.map(t,s);const o=dl(r);return o&&(a=a.map((e=>cl(e,Object.assign({},n,{printWidth:1/0})).formatted))),i.push(ol,"`"),e.each((e=>{const u=e.getName();if(i.push(t(e)),u<a.length){const{tabWidth:t}=n,c=e.getValue(),l=Zc(c.value.raw,t);let p=a[u];if(!o){const e=r[s][u];(e.comments&&e.comments.length||"MemberExpression"===e.type||"OptionalMemberExpression"===e.type||"ConditionalExpression"===e.type||"SequenceExpression"===e.type||"TSAsExpression"===e.type||pl(e))&&(p=el([il(el([rl,p])),rl]))}const h=0===l&&c.value.raw.endsWith("\n")?al(-1/0,p):ul(p,l,t);i.push(sl(el(["${",h,ol,"}"])))}}),"quasis"),i.push("`"),el(i)},printTemplateExpressions:function(e,t){return e.map((e=>function(e,t){const n=e.getValue();let r=t(e);return n.comments&&n.comments.length&&(r=sl(el([il(el([rl,r])),rl]))),el(["${",r,ol,"}"])}(e,t)),"expressions")},escapeTemplateCharacters:function(e,t){return ll(e,(e=>{if(!e.parts)return e;const n=e.parts.map((e=>"string"==typeof e?t?e.replace(/(\\*)`/g,"$1$1\\`"):fl(e):e));return Object.assign({},e,{parts:n})}))},uncookTemplateElementValue:fl};const{builders:{indent:ml,softline:gl,literalline:yl,concat:El,dedentToRoot:Cl}}=cn,{escapeTemplateCharacters:Al}=Dl;const{builders:{indent:bl,hardline:Fl,softline:xl,concat:vl},utils:{mapDoc:Sl,replaceNewlinesWithLiterallines:Tl}}=cn,{printTemplateExpressions:wl}=Dl;const{builders:{indent:Bl,join:Pl,hardline:Nl,concat:kl}}=cn,{escapeTemplateCharacters:Il,printTemplateExpressions:Ll}=Dl;function Ol(e){const t=[];let n=!1;return e.map((e=>e.trim())).forEach(((e,r,s)=>{""!==e&&(""===s[r-1]&&n?t.push(kl([Nl,e])):t.push(e),n=!0)})),0===t.length?null:Pl(Nl,t)}const{builders:{indent:_l,line:Ml,hardline:Rl,concat:jl,group:ql},utils:{mapDoc:Ul}}=cn,{printTemplateExpressions:$l,uncookTemplateElementValue:Vl}=Dl;let Wl=0;const{isBlockComment:zl}=yc,{hasLeadingComment:Hl}=Yc;const Gl=[(e,t)=>"ObjectExpression"===e.type&&"properties"===t,(e,t)=>"CallExpression"===e.type&&"Identifier"===e.callee.type&&"Component"===e.callee.name&&"arguments"===t,(e,t)=>"Decorator"===e.type&&"expression"===t];function Xl(e){return"Identifier"===e.type&&"styled"===e.name}function Jl(e){return/^[A-Z]/.test(e.object.name)&&"extend"===e.property.name}function Kl(e,t){return Hl(e,(e=>zl(e)&&e.value===" ".concat(t," ")))}const{isBlockComment:Yl}=yc,Ql=new Set(["range","raw","comments","leadingComments","trailingComments","innerComments","extra","start","end","loc","flags","errors","tokens"]);function Zl(e,t,n){if("Program"===e.type&&delete t.sourceType,"BigIntLiteral"!==e.type&&"BigIntLiteralTypeAnnotation"!==e.type||t.value&&(t.value=t.value.toLowerCase()),"BigIntLiteral"!==e.type&&"Literal"!==e.type||t.bigint&&(t.bigint=t.bigint.toLowerCase()),"DecimalLiteral"===e.type&&(t.value=Number(t.value)),"EmptyStatement"===e.type)return null;if("JSXText"===e.type)return null;if("JSXExpressionContainer"===e.type&&("Literal"===e.expression.type||"StringLiteral"===e.expression.type)&&" "===e.expression.value)return null;"Property"!==e.type&&"ObjectProperty"!==e.type&&"MethodDefinition"!==e.type&&"ClassProperty"!==e.type&&"ClassMethod"!==e.type&&"FieldDefinition"!==e.type&&"TSDeclareMethod"!==e.type&&"TSPropertySignature"!==e.type&&"ObjectTypeProperty"!==e.type||"object"!=typeof e.key||!e.key||"Literal"!==e.key.type&&"NumericLiteral"!==e.key.type&&"StringLiteral"!==e.key.type&&"Identifier"!==e.key.type||delete t.key,"OptionalMemberExpression"===e.type&&!1===e.optional&&(t.type="MemberExpression",delete t.optional),"JSXElement"===e.type&&"style"===e.openingElement.name.name&&e.openingElement.attributes.some((e=>"jsx"===e.name.name))&&t.children.filter((e=>"JSXExpressionContainer"===e.type&&"TemplateLiteral"===e.expression.type)).map((e=>e.expression)).reduce(((e,t)=>e.concat(t.quasis)),[]).forEach((e=>delete e.value)),"JSXAttribute"===e.type&&"css"===e.name.name&&"JSXExpressionContainer"===e.value.type&&"TemplateLiteral"===e.value.expression.type&&t.value.expression.quasis.forEach((e=>delete e.value)),"JSXAttribute"===e.type&&e.value&&"Literal"===e.value.type&&/["']|&quot;|&apos;/.test(e.value.value)&&(t.value.value=t.value.value.replace(/["']|&quot;|&apos;/g,'"'));const r=e.expression||e.callee;if("Decorator"===e.type&&"CallExpression"===r.type&&"Component"===r.callee.name&&1===r.arguments.length){const n=e.expression.arguments[0].properties;t.expression.arguments[0].properties.forEach(((e,t)=>{let r=null;switch(n[t].key.name){case"styles":"ArrayExpression"===e.value.type&&(r=e.value.elements[0]);break;case"template":"TemplateLiteral"===e.value.type&&(r=e.value)}r&&r.quasis.forEach((e=>delete e.value))}))}"TaggedTemplateExpression"!==e.type||"MemberExpression"!==e.tag.type&&("Identifier"!==e.tag.type||"gql"!==e.tag.name&&"graphql"!==e.tag.name&&"css"!==e.tag.name&&"md"!==e.tag.name&&"markdown"!==e.tag.name&&"html"!==e.tag.name)&&"CallExpression"!==e.tag.type||t.quasi.quasis.forEach((e=>delete e.value)),"TemplateLiteral"===e.type&&((e.leadingComments&&e.leadingComments.some((e=>Yl(e)&&["GraphQL","HTML"].some((t=>e.value===" ".concat(t," ")))))||"CallExpression"===n.type&&"graphql"===n.callee.name)&&t.quasis.forEach((e=>delete e.value)),e.leadingComments||t.quasis.forEach((e=>{e.value&&delete e.value.cooked}))),"InterpreterDirective"===e.type&&(t.value=t.value.trimEnd())}Zl.ignoredProperties=Ql;var ep=Zl;const tp=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");const t=e.match(/(?:\r?\n)/g)||[];if(0===t.length)return;const n=t.filter((e=>"\r\n"===e)).length;return n>t.length-n?"\r\n":"\n"};var np=tp;np.graceful=e=>"string"==typeof e&&tp(e)||"\n";var rp=Me((function(e,t){function n(){const e=jr;return n=function(){return e},e}function r(){const e=(t=np)&&t.__esModule?t:{default:t};var t;return r=function(){return e},e}Object.defineProperty(t,"__esModule",{value:!0}),t.extract=function(e){const t=e.match(a);return t?t[0].trimLeft():""},t.strip=function(e){const t=e.match(a);return t&&t[0]?e.substring(t[0].length):e},t.parse=function(e){return d(e).pragmas},t.parseWithComments=d,t.print=function({comments:e="",pragmas:t={}}){const s=(0,r().default)(e)||n().EOL,i=Object.keys(t),a=i.map((e=>f(e,t[e]))).reduce(((e,t)=>e.concat(t)),[]).map((e=>" * "+e+s)).join("");if(!e){if(0===i.length)return"";if(1===i.length&&!Array.isArray(t[i[0]])){const e=t[i[0]];return"".concat("/**"," ").concat(f(i[0],e)[0]).concat(" */")}}const o=e.split(s).map((e=>"".concat(" *"," ").concat(e))).join(s)+s;return"/**"+s+(e?o:"")+(e&&i.length?" *"+s:"")+a+" */"};const s=/\*\/$/,i=/^\/\*\*/,a=/^\s*(\/\*\*?(.|\r?\n)*?\*\/)/,o=/(^|\s+)\/\/([^\r\n]*)/g,u=/^(\r?\n)+/,c=/(?:^|\r?\n) *(@[^\r\n]*?) *\r?\n *(?![^@\r\n]*\/\/[^]*)([^@\r\n\s][^@\r\n]+?) *\r?\n/g,l=/(?:^|\r?\n) *@(\S+) *([^\r\n]*)/g,p=/(\r?\n|^) *\* ?/g,h=[];function d(e){const t=(0,r().default)(e)||n().EOL;e=e.replace(i,"").replace(s,"").replace(p,"$1");let a="";for(;a!==e;)a=e,e=e.replace(c,"".concat(t,"$1 $2").concat(t));e=e.replace(u,"").trimRight();const d=Object.create(null),f=e.replace(l,"").replace(u,"").trimRight();let D;for(;D=l.exec(e);){const e=D[2].replace(o,"");"string"==typeof d[D[1]]||Array.isArray(d[D[1]])?d[D[1]]=h.concat(d[D[1]],e):d[D[1]]=e}return{comments:f,pragmas:d}}function f(e,t){return h.concat(t).map((t=>"@".concat(e," ").concat(t).trim()))}}));const{parseWithComments:sp,strip:ip,extract:ap,print:op}=rp,{getShebang:up}=Ot,{normalizeEndOfLine:cp}=_t;function lp(e){const t=up(e);t&&(e=e.slice(t.length+1));const n=ap(e),{pragmas:r,comments:s}=sp(n);return{shebang:t,text:e,pragmas:r,comments:s}}var pp={hasPragma:function(e){const t=Object.keys(lp(e).pragmas);return t.includes("prettier")||t.includes("format")},insertPragma:function(e){const{shebang:t,text:n,pragmas:r,comments:s}=lp(e),i=ip(n),a=op({pragmas:Object.assign({format:""},r),comments:s.trimStart()});return(t?"".concat(t,"\n"):"")+cp(a)+(i.startsWith("\n")?"\n":"\n\n")+i}};const{getFunctionParameters:hp,getLeftSidePathName:dp,hasFlowShorthandAnnotationComment:fp,hasNakedLeftSide:Dp,hasNode:mp,isBitwiseOperator:gp,startsWithNoLookaheadToken:yp,shouldFlatten:Ep,getPrecedence:Cp}=yc;function Ap(e,t){const n=e.getParentNode();if(!n)return!1;const r=e.getName(),s=e.getNode();if(t.__isInHtmlInterpolation&&!t.bracketSpacing&&function(e){return"ObjectExpression"===e.type}(s)&&bp(e))return!0;if(function(e){return"BlockStatement"===e.type||"BreakStatement"===e.type||"ClassBody"===e.type||"ClassDeclaration"===e.type||"ClassMethod"===e.type||"ClassProperty"===e.type||"FieldDefinition"===e.type||"ClassPrivateProperty"===e.type||"ContinueStatement"===e.type||"DebuggerStatement"===e.type||"DeclareClass"===e.type||"DeclareExportAllDeclaration"===e.type||"DeclareExportDeclaration"===e.type||"DeclareFunction"===e.type||"DeclareInterface"===e.type||"DeclareModule"===e.type||"DeclareModuleExports"===e.type||"DeclareVariable"===e.type||"DoWhileStatement"===e.type||"EnumDeclaration"===e.type||"ExportAllDeclaration"===e.type||"ExportDefaultDeclaration"===e.type||"ExportNamedDeclaration"===e.type||"ExpressionStatement"===e.type||"ForInStatement"===e.type||"ForOfStatement"===e.type||"ForStatement"===e.type||"FunctionDeclaration"===e.type||"IfStatement"===e.type||"ImportDeclaration"===e.type||"InterfaceDeclaration"===e.type||"LabeledStatement"===e.type||"MethodDefinition"===e.type||"ReturnStatement"===e.type||"SwitchStatement"===e.type||"ThrowStatement"===e.type||"TryStatement"===e.type||"TSDeclareFunction"===e.type||"TSEnumDeclaration"===e.type||"TSImportEqualsDeclaration"===e.type||"TSInterfaceDeclaration"===e.type||"TSModuleDeclaration"===e.type||"TSNamespaceExportDeclaration"===e.type||"TypeAlias"===e.type||"VariableDeclaration"===e.type||"WhileStatement"===e.type||"WithStatement"===e.type}(s))return!1;if("flow"!==t.parser&&fp(e.getValue()))return!0;if("Identifier"===s.type)return!!(s.extra&&s.extra.parenthesized&&/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(s.name));switch(n.type){case"ParenthesizedExpression":return!1;case"ClassDeclaration":case"ClassExpression":if("superClass"===r&&("ArrowFunctionExpression"===s.type||"AssignmentExpression"===s.type||"AwaitExpression"===s.type||"BinaryExpression"===s.type||"ConditionalExpression"===s.type||"LogicalExpression"===s.type||"NewExpression"===s.type||"ObjectExpression"===s.type||"ParenthesizedExpression"===s.type||"SequenceExpression"===s.type||"TaggedTemplateExpression"===s.type||"UnaryExpression"===s.type||"UpdateExpression"===s.type||"YieldExpression"===s.type))return!0;break;case"ExportDefaultDeclaration":return Fp(e,t)||"SequenceExpression"===s.type;case"Decorator":if("expression"===r){let e=!1,t=!1,n=s;for(;n;)switch(n.type){case"MemberExpression":t=!0,n=n.object;break;case"CallExpression":if(t||e)return!0;e=!0,n=n.callee;break;case"Identifier":return!1;default:return!0}return!0}break;case"ExpressionStatement":if(yp(s,!0))return!0;break;case"ArrowFunctionExpression":if("body"===r&&"SequenceExpression"!==s.type&&yp(s,!1))return!0}switch(s.type){case"SpreadElement":case"SpreadProperty":return"object"===r&&"MemberExpression"===n.type;case"UpdateExpression":if("UnaryExpression"===n.type)return s.prefix&&("++"===s.operator&&"+"===n.operator||"--"===s.operator&&"-"===n.operator);case"UnaryExpression":switch(n.type){case"UnaryExpression":return s.operator===n.operator&&("+"===s.operator||"-"===s.operator);case"BindExpression":case"TaggedTemplateExpression":case"TSNonNullExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===r;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===r;case"BinaryExpression":return"left"===r&&"**"===n.operator;default:return!1}case"BinaryExpression":if("UpdateExpression"===n.type||"PipelineTopicExpression"===n.type&&"|>"===s.operator)return!0;if("in"===s.operator&&function(e){let t=0,n=e.getValue();for(;n;){const r=e.getParentNode(t++);if(r&&"ForStatement"===r.type&&r.init===n)return!0;n=r}return!1}(e))return!0;if("|>"===s.operator&&s.extra&&s.extra.parenthesized){const t=e.getParentNode(1);if("BinaryExpression"===t.type&&"|>"===t.operator)return!0}case"TSTypeAssertion":case"TSAsExpression":case"LogicalExpression":switch(n.type){case"ConditionalExpression":return"TSAsExpression"===s.type;case"CallExpression":case"NewExpression":case"OptionalCallExpression":return"callee"===r;case"ClassExpression":case"ClassDeclaration":return"superClass"===r;case"TSTypeAssertion":case"TaggedTemplateExpression":case"UnaryExpression":case"JSXSpreadAttribute":case"SpreadElement":case"SpreadProperty":case"BindExpression":case"AwaitExpression":case"TSAsExpression":case"TSNonNullExpression":case"UpdateExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===r;case"AssignmentExpression":return"left"===r&&("TSTypeAssertion"===s.type||"TSAsExpression"===s.type);case"LogicalExpression":if("LogicalExpression"===s.type)return n.operator!==s.operator;case"BinaryExpression":{const{operator:e,type:t}=s;if(!e&&"TSTypeAssertion"!==t)return!0;const i=Cp(e),a=n.operator,o=Cp(a);return o>i||"right"===r&&o===i||o===i&&!Ep(a,e)||(o<i&&"%"===e?"+"===a||"-"===a:!!gp(a))}default:return!1}case"SequenceExpression":switch(n.type){case"ReturnStatement":case"ForStatement":return!1;case"ExpressionStatement":return"expression"!==r;case"ArrowFunctionExpression":return"body"!==r;default:return!0}case"YieldExpression":if("UnaryExpression"===n.type||"AwaitExpression"===n.type||"TSAsExpression"===n.type||"TSNonNullExpression"===n.type)return!0;case"AwaitExpression":switch(n.type){case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"SpreadElement":case"SpreadProperty":case"TSAsExpression":case"TSNonNullExpression":case"BindExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===r;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===r;case"ConditionalExpression":return"test"===r;case"BinaryExpression":return!(!s.argument&&"|>"===n.operator);default:return!1}case"TSJSDocFunctionType":case"TSConditionalType":if("extendsType"===r&&"TSConditionalType"===n.type)return!0;case"TSFunctionType":case"TSConstructorType":if("checkType"===r&&"TSConditionalType"===n.type)return!0;case"TSUnionType":case"TSIntersectionType":if("TSUnionType"===n.type||"TSIntersectionType"===n.type)return!0;case"TSInferType":if("TSInferType"===s.type&&"TSRestType"===n.type)return!1;case"TSTypeOperator":return"TSArrayType"===n.type||"TSOptionalType"===n.type||"TSRestType"===n.type||"objectType"===r&&"TSIndexedAccessType"===n.type||"TSTypeOperator"===n.type||"TSTypeAnnotation"===n.type&&/^TSJSDoc/.test(e.getParentNode(1).type);case"ArrayTypeAnnotation":return"NullableTypeAnnotation"===n.type;case"IntersectionTypeAnnotation":case"UnionTypeAnnotation":return"ArrayTypeAnnotation"===n.type||"NullableTypeAnnotation"===n.type||"IntersectionTypeAnnotation"===n.type||"UnionTypeAnnotation"===n.type;case"NullableTypeAnnotation":return"ArrayTypeAnnotation"===n.type;case"FunctionTypeAnnotation":{const t="NullableTypeAnnotation"===n.type?e.getParentNode(1):n;return"UnionTypeAnnotation"===t.type||"IntersectionTypeAnnotation"===t.type||"ArrayTypeAnnotation"===t.type||"NullableTypeAnnotation"===t.type||"FunctionTypeParam"===n.type&&null===n.name&&hp(s).some((e=>e.typeAnnotation&&"NullableTypeAnnotation"===e.typeAnnotation.type))}case"StringLiteral":case"NumericLiteral":case"Literal":if("string"==typeof s.value&&"ExpressionStatement"===n.type&&!n.directive){const t=e.getParentNode(1);return"Program"===t.type||"BlockStatement"===t.type}return"object"===r&&"MemberExpression"===n.type&&"number"==typeof s.value;case"AssignmentExpression":{const t=e.getParentNode(1);return"body"===r&&"ArrowFunctionExpression"===n.type||("key"!==r||"ClassProperty"!==n.type&&"FieldDefinition"!==n.type||!n.computed)&&("init"!==r&&"update"!==r||"ForStatement"!==n.type)&&("ExpressionStatement"===n.type?"ObjectPattern"===s.left.type:!("key"===r&&"TSPropertySignature"===n.type||"AssignmentExpression"===n.type||"SequenceExpression"===n.type&&t&&"ForStatement"===t.type&&(t.init===n||t.update===n)||"value"===r&&"Property"===n.type&&t&&"ObjectPattern"===t.type&&t.properties.includes(n)||"NGChainedExpression"===n.type))}case"ConditionalExpression":switch(n.type){case"TaggedTemplateExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"BinaryExpression":case"LogicalExpression":case"NGPipeExpression":case"ExportDefaultDeclaration":case"AwaitExpression":case"JSXSpreadAttribute":case"TSTypeAssertion":case"TypeCastExpression":case"TSAsExpression":case"TSNonNullExpression":return!0;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===r;case"ConditionalExpression":return"test"===r;case"MemberExpression":case"OptionalMemberExpression":return"object"===r;default:return!1}case"FunctionExpression":switch(n.type){case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===r;case"TaggedTemplateExpression":return!0;default:return!1}case"ArrowFunctionExpression":switch(n.type){case"PipelineTopicExpression":return!(!s.extra||!s.extra.parenthesized);case"BinaryExpression":return"|>"!==n.operator||s.extra&&s.extra.parenthesized;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===r;case"MemberExpression":case"OptionalMemberExpression":return"object"===r;case"TSAsExpression":case"BindExpression":case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"AwaitExpression":case"TSTypeAssertion":return!0;case"ConditionalExpression":return"test"===r;default:return!1}case"ClassExpression":return"NewExpression"===n.type&&"callee"===r;case"OptionalMemberExpression":case"OptionalCallExpression":{const t=e.getParentNode(1);if("object"===r&&"MemberExpression"===n.type||"callee"===r&&("CallExpression"===n.type||"NewExpression"===n.type)||"TSNonNullExpression"===n.type&&"MemberExpression"===t.type&&t.object===n)return!0}case"CallExpression":case"MemberExpression":case"TaggedTemplateExpression":case"TSNonNullExpression":if("callee"===r&&("BindExpression"===n.type||"NewExpression"===n.type)){let e=s;for(;e;)switch(e.type){case"CallExpression":case"OptionalCallExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":case"BindExpression":e=e.object;break;case"TaggedTemplateExpression":e=e.tag;break;case"TSNonNullExpression":e=e.expression;break;default:return!1}}return!1;case"BindExpression":return"callee"===r&&("BindExpression"===n.type||"NewExpression"===n.type)||"object"===r&&("MemberExpression"===n.type||"OptionalMemberExpression"===n.type);case"NGPipeExpression":return!("NGRoot"===n.type||"NGMicrosyntaxExpression"===n.type||!("ObjectProperty"!==n.type||s.extra&&s.extra.parenthesized)||"ArrayExpression"===n.type||("CallExpression"===n.type||"OptionalCallExpression"===n.type)&&n.arguments[r]===s||"right"===r&&"NGPipeExpression"===n.type||"property"===r&&"MemberExpression"===n.type||"AssignmentExpression"===n.type);case"JSXFragment":case"JSXElement":return"callee"===r||"left"===r&&"BinaryExpression"===n.type&&"<"===n.operator||"ArrayExpression"!==n.type&&"ArrowFunctionExpression"!==n.type&&"AssignmentExpression"!==n.type&&"AssignmentPattern"!==n.type&&"BinaryExpression"!==n.type&&"CallExpression"!==n.type&&"NewExpression"!==n.type&&"ConditionalExpression"!==n.type&&"ExpressionStatement"!==n.type&&"JsExpressionRoot"!==n.type&&"JSXAttribute"!==n.type&&"JSXElement"!==n.type&&"JSXExpressionContainer"!==n.type&&"JSXFragment"!==n.type&&"LogicalExpression"!==n.type&&"ObjectProperty"!==n.type&&"OptionalCallExpression"!==n.type&&"Property"!==n.type&&"ReturnStatement"!==n.type&&"ThrowStatement"!==n.type&&"TypeCastExpression"!==n.type&&"VariableDeclarator"!==n.type&&"YieldExpression"!==n.type;case"TypeAnnotation":return"returnType"===r&&"ArrowFunctionExpression"===n.type&&function(e){return mp(e,(e=>"ObjectTypeAnnotation"===e.type&&mp(e,(e=>"FunctionTypeAnnotation"===e.type||void 0))||void 0))}(s)}return!1}function bp(e){const t=e.getValue(),n=e.getParentNode(),r=e.getName();switch(n.type){case"NGPipeExpression":if("number"==typeof r&&n.arguments[r]===t&&n.arguments.length-1===r)return e.callParent(bp);break;case"ObjectProperty":if("value"===r){const t=e.getParentNode(1);return t.properties[t.properties.length-1]===n}break;case"BinaryExpression":case"LogicalExpression":if("right"===r)return e.callParent(bp);break;case"ConditionalExpression":if("alternate"===r)return e.callParent(bp);break;case"UnaryExpression":if(n.prefix)return e.callParent(bp)}return!1}function Fp(e,t){const n=e.getValue(),r=e.getParentNode();return"FunctionExpression"===n.type||"ClassExpression"===n.type?"ExportDefaultDeclaration"===r.type||!Ap(e,t):!(!Dp(n)||"ExportDefaultDeclaration"!==r.type&&Ap(e,t))&&e.call((e=>Fp(e,t)),...dp(e,n))}var xp=Ap;const{builders:{concat:vp,join:Sp,line:Tp,group:wp,softline:Bp,indent:Pp}}=cn;var Np={isVueEventBindingExpression:function e(t){switch(t.type){case"MemberExpression":switch(t.property.type){case"Identifier":case"NumericLiteral":case"StringLiteral":return e(t.object)}return!1;case"Identifier":return!0;default:return!1}},printHtmlBinding:function(e,t,n){const r=e.getValue();if(t.__onHtmlBindingRoot&&null===e.getName()&&t.__onHtmlBindingRoot(r,t),"File"===r.type)return t.__isVueForBindingLeft?e.call((e=>{const t=Sp(vp([",",Tp]),e.map(n,"params")),{params:r}=e.getValue();return 1===r.length?t:vp(["(",Pp(vp([Bp,wp(t)])),Bp,")"])}),"program","body",0):t.__isVueBindings?e.call((e=>Sp(vp([",",Tp]),e.map(n,"params"))),"program","body",0):void 0}},kp=function(e,t){switch(t.parser){case"json":case"json5":case"json-stringify":case"__js_expression":case"__vue_expression":return Object.assign({},e,{type:t.parser.startsWith("__")?"JsExpressionRoot":"JsonRoot",node:e,comments:[],rootMarker:t.rootMarker});default:return e}};const{builders:{concat:Ip,group:Lp,indent:Op,join:_p,line:Mp,hardline:Rp}}=cn,{hasNewlineBetweenOrAfterDecorators:jp,getParentExportDeclaration:qp}=yc;var Up={printOptionalToken:function(e){const t=e.getValue();return!t.optional||"Identifier"===t.type&&t===e.getParentNode().key?"":"OptionalCallExpression"===t.type||"OptionalMemberExpression"===t.type&&t.computed?"?.":"?"},printFunctionTypeParameters:function(e,t,n){const r=e.getValue();return r.typeArguments?e.call(n,"typeArguments"):r.typeParameters?e.call(n,"typeParameters"):""},printBindExpressionCallee:function(e,t,n){return Ip(["::",e.call(n,"callee")])},printTypeScriptModifiers:function(e,t,n){const r=e.getValue();return r.modifiers&&r.modifiers.length?Ip([_p(" ",e.map(n,"modifiers"))," "]):""},printDecorators:function(e,t,n){const r=e.getValue();return Lp(Ip([_p(Mp,e.map(n,"decorators")),jp(r,t)?Rp:Mp]))},printFlowDeclaration:function(e,t){const n=qp(e);return n?(za.strictEqual(n.type,"DeclareExportDeclaration"),t):Ip(["declare ",t])},adjustClause:function(e,t,n){return"EmptyStatement"===e.type?";":"BlockStatement"===e.type||n?Ip([" ",t]):Op(Ip([Mp,t]))}};const{builders:{concat:$p,softline:Vp,group:Wp,indent:zp,join:Hp,line:Gp,ifBreak:Xp,hardline:Jp}}=cn,{printDanglingComments:Kp}=Do,{hasDanglingComments:Yp,shouldPrintComma:Qp,needsHardlineAfterDanglingComment:Zp}=yc,{locStart:eh,hasSameLoc:th}=Yi;function nh(e,t,n){const r=e.getValue();if(!r.source)return"";const s=[];return sh(r,t)||s.push(" from"),s.push(" ",e.call(n,"source")),$p(s)}function rh(e,t,n){const r=e.getValue();if(sh(r,t))return"";const s=[" "];if(r.specifiers&&r.specifiers.length>0){const i=[],a=[];e.each((t=>{const r=e.getValue().type;if("ExportNamespaceSpecifier"===r||"ExportDefaultSpecifier"===r||"ImportNamespaceSpecifier"===r||"ImportDefaultSpecifier"===r)i.push(n(t));else{if("ExportSpecifier"!==r&&"ImportSpecifier"!==r)throw new Error("Unknown specifier type ".concat(JSON.stringify(r)));a.push(n(t))}}),"specifiers"),s.push(Hp(", ",i)),0!==a.length&&(0!==i.length&&s.push(", "),a.length>1||i.length>0||r.specifiers.some((e=>e.comments))?s.push(Wp($p(["{",zp($p([t.bracketSpacing?Gp:Vp,Hp($p([",",Gp]),a)])),Xp(Qp(t)?",":""),t.bracketSpacing?Gp:Vp,"}"]))):s.push($p(["{",t.bracketSpacing?" ":"",$p(a),t.bracketSpacing?" ":"","}"])))}else s.push("{}");return $p(s)}function sh(e,t){const{type:n,importKind:r,source:s,specifiers:i}=e;return!("ImportDeclaration"!==n||Array.isArray(i)&&i.length>0||"type"===r||/{\s*}/.test(t.originalText.slice(eh(e),eh(s))))}function ih(e,t,n){const r=e.getNode();return Array.isArray(r.assertions)&&0!==r.assertions.length?$p([" assert {",t.bracketSpacing?" ":"",Hp(", ",e.map(n,"assertions")),t.bracketSpacing?" ":"","}"]):""}var ah={printImportDeclaration:function(e,t,n){const r=e.getValue(),s=t.semi?";":"",i=[],{importKind:a}=r;return i.push("import"),a&&"value"!==a&&i.push(" ",a),i.push(rh(e,t,n),nh(e,t,n),ih(e,t,n)),i.push(s),$p(i)},printExportDeclaration:function(e,t,n){const r=e.getValue(),s=[],{type:i,exportKind:a,declaration:o}=r;return"DeclareExportDeclaration"===i&&s.push("declare "),s.push("export"),(r.default||"ExportDefaultDeclaration"===i)&&s.push(" default"),Yp(r)&&(s.push(" ",Kp(e,t,!0)),Zp(r)&&s.push(Jp)),o?s.push(" ",e.call(n,"declaration")):s.push("type"===a?" type":"",rh(e,t,n),nh(e,t,n),ih(e,t,n)),function(e,t){if(!t.semi)return!1;const{type:n,declaration:r}=e,s=e.default||"ExportDefaultDeclaration"===n;if(!r)return!0;const{type:i}=r;return!(!s||"ClassDeclaration"===i||"FunctionDeclaration"===i||"TSInterfaceDeclaration"===i||"DeclareClass"===i||"DeclareFunction"===i||"TSDeclareFunction"===i||"EnumDeclaration"===i)}(r,t)&&s.push(";"),$p(s)},printExportAllDeclaration:function(e,t,n){const r=e.getValue();let s=t.semi?";":"";const i=[],{type:a,exportKind:o,exported:u}=r;return"DeclareExportAllDeclaration"===a&&(i.push("declare "),s=""),i.push("export"),"type"===o&&i.push(" type"),i.push(" *"),u&&i.push(" as ",e.call(n,"exported")),i.push(nh(e,t,n),ih(e,t,n),s),$p(i)},printModuleSpecifier:function(e,t,n){const r=e.getNode(),{type:s,importKind:i}=r,a=[];"ImportSpecifier"===s&&i&&a.push(i," ");const o=s.startsWith("Import"),u=o?"imported":"local",c=o?"local":"exported";let l="",p="";return"ExportNamespaceSpecifier"===s||"ImportNamespaceSpecifier"===s?l="*":r[u]&&(l=e.call(n,u)),!r[c]||r[u]&&th(r[u],r[c])||(p=e.call(n,c)),a.push(l,l&&p?" as ":"",p),$p(a)}};const{hasNewlineInRange:oh}=Ot,{isJSXNode:uh,isBlockComment:ch}=yc,{locStart:lh,locEnd:ph}=Yi,{builders:{concat:hh,line:dh,softline:fh,group:Dh,indent:mh,align:gh,ifBreak:yh,dedent:Eh,breakParent:Ch}}=cn;var Ah=function(e,t,n,r){const s=e.getValue(),i=s[r.consequentNodePropertyName],a=s[r.alternateNodePropertyName],o=[];let u=!1;const c=e.getParentNode(),l=c.type===r.conditionalNodeType&&r.testNodePropertyNames.some((e=>c[e]===s));let p,h,d=c.type===r.conditionalNodeType&&!l,f=0;do{h=p||s,p=e.getParentNode(f),f++}while(p&&p.type===r.conditionalNodeType&&r.testNodePropertyNames.every((e=>p[e]!==h)));const D=p||c,m=h;if(r.shouldCheckJsx&&(uh(s[r.testNodePropertyNames[0]])||uh(i)||uh(a)||function(e){return function(e){const t=[];return function e(n){"ConditionalExpression"===n.type?(e(n.test),e(n.consequent),e(n.alternate)):t.push(n)}(e),t}(e).some(uh)}(m))){u=!0,d=!0;const t=e=>hh([yh("(",""),mh(hh([fh,e])),fh,yh(")","")]),s=e=>"NullLiteral"===e.type||"Literal"===e.type&&null===e.value||"Identifier"===e.type&&"undefined"===e.name;o.push(" ? ",s(i)?e.call(n,r.consequentNodePropertyName):t(e.call(n,r.consequentNodePropertyName))," : ",a.type===r.conditionalNodeType||s(a)?e.call(n,r.alternateNodePropertyName):t(e.call(n,r.alternateNodePropertyName)))}else{const u=hh([dh,"? ",i.type===r.conditionalNodeType?yh("","("):"",gh(2,e.call(n,r.consequentNodePropertyName)),i.type===r.conditionalNodeType?yh("",")"):"",dh,": ",a.type===r.conditionalNodeType?e.call(n,r.alternateNodePropertyName):gh(2,e.call(n,r.alternateNodePropertyName))]);o.push(c.type!==r.conditionalNodeType||c[r.alternateNodePropertyName]===s||l?u:t.useTabs?Eh(mh(u)):gh(Math.max(0,t.tabWidth-2),u))}const g=Ui([...r.testNodePropertyNames.map((e=>s[e].comments)),i.comments,a.comments]).filter(Boolean).some((e=>ch(e)&&oh(t.originalText,lh(e),ph(e)))),y=!u&&("MemberExpression"===c.type||"OptionalMemberExpression"===c.type||"NGPipeExpression"===c.type&&c.left===s)&&!c.computed,E=(e=>c===D?Dh(e,{shouldBreak:g}):g?hh([e,Ch]):e)(hh([].concat((C=hh(r.beforeParts()),c.type===r.conditionalNodeType&&c[r.alternateNodePropertyName]===s?gh(2,C):C),d?hh(o):mh(hh(o)),r.afterParts(y))));var C;return l?Dh(hh([mh(hh([fh,E])),fh])):E};const{getNextNonSpaceNonCommentCharacter:bh,isNextLineEmpty:Fh}=Ot,{printDanglingComments:xh}=Do,{builders:{concat:vh,line:Sh,hardline:Th,softline:wh,group:Bh,indent:Ph,ifBreak:Nh},utils:{removeLines:kh}}=cn,{getFunctionParameters:Ih,iterateFunctionParametersPath:Lh,isSimpleType:Oh,isTestCall:_h,isTypeAnnotationAFunction:Mh,isObjectType:Rh,isObjectTypePropertyAFunction:jh,hasRestParameter:qh,shouldPrintComma:Uh}=yc,{locEnd:$h}=Yi,{printFunctionTypeParameters:Vh}=Up;function Wh(e){if(!e)return!1;const t=Ih(e);if(1!==t.length)return!1;const[n]=t;return!n.comments&&("ObjectPattern"===n.type||"ArrayPattern"===n.type||"Identifier"===n.type&&n.typeAnnotation&&("TypeAnnotation"===n.typeAnnotation.type||"TSTypeAnnotation"===n.typeAnnotation.type)&&Rh(n.typeAnnotation.typeAnnotation)||"FunctionTypeParam"===n.type&&Rh(n.typeAnnotation)||"AssignmentPattern"===n.type&&("ObjectPattern"===n.left.type||"ArrayPattern"===n.left.type)&&("Identifier"===n.right.type||"ObjectExpression"===n.right.type&&0===n.right.properties.length||"ArrayExpression"===n.right.type&&0===n.right.elements.length))}var zh={printFunctionParameters:function(e,t,n,r,s){const i=e.getValue(),a=Ih(i),o=s?Vh(e,n,t):"";if(0===a.length)return vh([o,"(",xh(e,n,!0,(e=>")"===bh(n.originalText,e,$h))),")"]);const u=e.getParentNode(),c=_h(u),l=Wh(i),p=r&&!a.some((e=>e.comments)),h=[];if(Lh(e,((e,r)=>{const s=r===a.length-1;s&&i.rest&&h.push("..."),h.push(e.call(t)),s||(h.push(","),c||l||p?h.push(" "):Fh(n.originalText,a[r],$h)?h.push(Th,Th):h.push(Sh))})),p)return Bh(vh([kh(o),"(",vh(h.map(kh)),")"]));const d=a.every((e=>!e.decorators));return l&&d||c?vh([o,"(",vh(h),")"]):(jh(u)||Mh(u)||"TypeAlias"===u.type||"UnionTypeAnnotation"===u.type||"TSUnionType"===u.type||"IntersectionTypeAnnotation"===u.type||"FunctionTypeAnnotation"===u.type&&u.returnType===i)&&1===a.length&&null===a[0].name&&i.this!==a[0]&&a[0].typeAnnotation&&null===i.typeParameters&&Oh(a[0].typeAnnotation)&&!i.rest?"always"===n.arrowParens?vh(["(",vh(h),")"]):vh(h):vh([o,"(",Ph(vh([wh,vh(h)])),Nh(!qh(i)&&Uh(n,"all")?",":""),wh,")"])},shouldHugFunctionParameters:Wh};const{builders:{concat:Hh}}=cn,{isFlowAnnotationComment:Gh,isSimpleType:Xh,isObjectType:Jh}=yc;var Kh={printTypeAnnotation:function(e,t,n){const r=e.getValue();if(!r.typeAnnotation)return"";const s=e.getParentNode(),i=r.definite||s&&"VariableDeclarator"===s.type&&s.definite,a="DeclareFunction"===s.type&&s.id===r;return Gh(t.originalText,r.typeAnnotation)?Hh([" /*: ",e.call(n,"typeAnnotation")," */"]):Hh([a?"":i?"!: ":": ",e.call(n,"typeAnnotation")])},shouldHugType:function(e){if(Xh(e)||Jh(e))return!0;if("UnionTypeAnnotation"===e.type||"TSUnionType"===e.type){const t=e.types.filter((e=>"VoidTypeAnnotation"===e.type||"TSVoidKeyword"===e.type||"NullLiteralTypeAnnotation"===e.type||"TSNullKeyword"===e.type)).length,n=e.types.some((e=>"ObjectTypeAnnotation"===e.type||"TSTypeLiteral"===e.type||"GenericTypeAnnotation"===e.type||"TSTypeReference"===e.type));if(e.types.length-1===t&&n)return!0}return!1}};const{printDanglingComments:Yh}=Do,{builders:{concat:Qh,line:Zh,softline:ed,group:td,indent:nd,ifBreak:rd}}=cn,{getLast:sd,isNextLineEmpty:id}=Ot,{hasDanglingComments:ad,shouldPrintComma:od}=yc,{locEnd:ud}=Yi,{printOptionalToken:cd}=Up,{printTypeAnnotation:ld}=Kh;function pd(e,t,n,r){const s=[];let i=[];return e.each((e=>{s.push(Qh(i)),s.push(td(r(e))),i=[",",Zh],e.getValue()&&id(t.originalText,e.getValue(),ud)&&i.push(ed)}),n),Qh(s)}var hd={printArray:function(e,t,n){const r=e.getValue(),s=[],i="TupleExpression"===r.type?"#[":"[";if(0===r.elements.length)ad(r)?s.push(td(Qh([i,Yh(e,t),ed,"]"]))):s.push(i,"]");else{const a=sd(r.elements),o=!(a&&"RestElement"===a.type),u=o&&null===a,c=!t.__inJestEach&&r.elements.length>1&&r.elements.every(((e,t,n)=>{const r=e&&e.type;if("ArrayExpression"!==r&&"ObjectExpression"!==r)return!1;const s=n[t+1];if(s&&r!==s.type)return!1;const i="ArrayExpression"===r?"elements":"properties";return e[i]&&e[i].length>1}));s.push(td(Qh([i,nd(Qh([ed,pd(e,t,"elements",n)])),u?",":"",rd(o&&!u&&od(t)?",":""),Yh(e,t,!0),ed,"]"]),{shouldBreak:c}))}return s.push(cd(e),ld(e,t,n)),Qh(s)},printArrayItems:pd};const{printDanglingComments:dd}=Do,{builders:{concat:fd,line:Dd,softline:md,group:gd,indent:yd,ifBreak:Ed,hardline:Cd}}=cn,{getLast:Ad,isNextLineEmpty:bd,hasNewlineInRange:Fd,hasNewline:xd}=Ot,{hasDanglingComments:vd,shouldPrintComma:Sd,hasNodeIgnoreComment:Td,isBlockComment:wd}=yc,{locStart:Bd,locEnd:Pd}=Yi,{printOptionalToken:Nd}=Up,{shouldHugFunctionParameters:kd}=zh,{printTypeAnnotation:Id,shouldHugType:Ld}=Kh;var Od={printObject:function(e,t,n){const r=t.semi?";":"",s=e.getValue();let i;i="TSTypeLiteral"===s.type?"members":"TSInterfaceBody"===s.type?"body":"properties";const a="ObjectTypeAnnotation"===s.type,o=[];a&&o.push("indexers","callProperties","internalSlots"),o.push(i);const u=o.map((e=>s[e][0])).sort(((e,t)=>Bd(e)-Bd(t)))[0],c=e.getParentNode(0),l=a&&c&&("InterfaceDeclaration"===c.type||"DeclareInterface"===c.type||"DeclareClass"===c.type)&&"body"===e.getName(),p="TSInterfaceBody"===s.type||l||"ObjectPattern"===s.type&&"FunctionDeclaration"!==c.type&&"FunctionExpression"!==c.type&&"ArrowFunctionExpression"!==c.type&&"ObjectMethod"!==c.type&&"ClassMethod"!==c.type&&"ClassPrivateMethod"!==c.type&&"AssignmentPattern"!==c.type&&"CatchClause"!==c.type&&s.properties.some((e=>e.value&&("ObjectPattern"===e.value.type||"ArrayPattern"===e.value.type)))||"ObjectPattern"!==s.type&&u&&Fd(t.originalText,Bd(s),Bd(u)),h=l?";":"TSInterfaceBody"===s.type||"TSTypeLiteral"===s.type?Ed(r,";"):",",d="RecordExpression"===s.type?"#{":s.exact?"{|":"{",f=s.exact?"|}":"}",D=[];o.forEach((t=>{e.each((e=>{const t=e.getValue();D.push({node:t,printed:n(e),loc:Bd(t)})}),t)}));let m=[];const g=D.sort(((e,t)=>e.loc-t.loc)).map((e=>{const n=fd(m.concat(gd(e.printed)));return m=[h,Dd],"TSPropertySignature"!==e.node.type&&"TSMethodSignature"!==e.node.type&&"TSConstructSignatureDeclaration"!==e.node.type||!Td(e.node)||m.shift(),bd(t.originalText,e.node,Pd)&&m.push(Cd),n}));if(s.inexact){let n;if(vd(s)){const r=!s.comments.every((e=>wd(e))),i=dd(e,t,!0);n=fd([i,r||xd(t.originalText,Pd(s.comments[s.comments.length-1]))?Cd:Dd,"..."])}else n="...";g.push(fd(m.concat(n)))}const y=Ad(s[i]),E=!(s.inexact||y&&"RestElement"===y.type||y&&("TSPropertySignature"===y.type||"TSCallSignatureDeclaration"===y.type||"TSMethodSignature"===y.type||"TSConstructSignatureDeclaration"===y.type)&&Td(y));let C;if(0===g.length){if(!vd(s))return fd([d,f,Id(e,t,n)]);C=gd(fd([d,dd(e,t),md,f,Nd(e),Id(e,t,n)]))}else C=fd([d,yd(fd([t.bracketSpacing?Dd:md,fd(g)])),Ed(E&&(","!==h||Sd(t))?h:""),fd([t.bracketSpacing?Dd:md,f]),Nd(e),Id(e,t,n)]);return e.match((e=>"ObjectPattern"===e.type&&!e.decorators),((e,t,n)=>kd(e)&&("params"===t||"parameters"===t||"this"===t||"rest"===t)&&0===n))||e.match(Ld,((e,t)=>"typeAnnotation"===t),((e,t)=>"typeAnnotation"===t),((e,t,n)=>kd(e)&&("params"===t||"parameters"===t||"this"===t||"rest"===t)&&0===n))?C:gd(C,{shouldBreak:p})}};const{printComments:_d,printDanglingComments:Md}=Do,{builders:{concat:Rd,line:jd,hardline:qd,softline:Ud,group:$d,indent:Vd,conditionalGroup:Wd,fill:zd,ifBreak:Hd,lineSuffixBoundary:Gd},utils:{willBreak:Xd,isLineNext:Jd,isEmpty:Kd}}=cn,{getLast:Yd,getPreferredQuote:Qd}=Ot,{hasTrailingComment:Zd,isEmptyJSXElement:ef,isJSXWhitespaceExpression:tf,isJSXNode:nf,isMeaningfulJSXText:rf,matchJsxWhitespaceRegex:sf,rawText:af,isLiteral:of,isCallOrOptionalCallExpression:uf,isStringLiteral:cf,isBinaryish:lf,isBlockComment:pf}=yc,{willPrintOwnComments:hf}=Yc;function df(e,t,n,r){return e?"":"JSXElement"===n.type&&!n.closingElement||r&&"JSXElement"===r.type&&!r.closingElement?1===t.length?Ud:qd:Ud}function ff(e,t,n,r){return e?qd:1===t.length?"JSXElement"===n.type&&!n.closingElement||r&&"JSXElement"===r.type&&!r.closingElement?qd:Ud:qd}function Df(e,t,n){const r=e.getValue();return Rd(["{",e.call((e=>{const r=Rd(["...",n(e)]),s=e.getValue();return s.comments&&s.comments.length&&hf(e)?Rd([Vd(Rd([Ud,_d(e,(()=>r),t)])),Ud]):r}),"JSXSpreadAttribute"===r.type?"argument":"expression"),"}"])}var mf={printJsxElement:function(e,t,n){const r=_d(e,(()=>function(e,t,n){const r=e.getValue();if("JSXElement"===r.type&&ef(r))return Rd([e.call(n,"openingElement"),e.call(n,"closingElement")]);const s="JSXElement"===r.type?e.call(n,"openingElement"):e.call(n,"openingFragment"),i="JSXElement"===r.type?e.call(n,"closingElement"):e.call(n,"closingFragment");if(1===r.children.length&&"JSXExpressionContainer"===r.children[0].type&&("TemplateLiteral"===r.children[0].expression.type||"TaggedTemplateExpression"===r.children[0].expression.type))return Rd([s,Rd(e.map(n,"children")),i]);r.children=r.children.map((e=>tf(e)?{type:"JSXText",value:" ",raw:" "}:e));const a=r.children.filter(nf).length>0,o=r.children.filter((e=>"JSXExpressionContainer"===e.type)).length>1,u="JSXElement"===r.type&&r.openingElement.attributes.length>1;let c=Xd(s)||a||u||o;const l="mdx"===e.getParentNode().rootMarker,p=t.singleQuote?"{' '}":'{" "}',h=l?Rd([" "]):Hd(Rd([p,Ud])," "),d=r.openingElement&&r.openingElement.name&&"fbt"===r.openingElement.name.name,f=function(e,t,n,r,s){const i=e.getValue(),a=[];return e.each(((e,t)=>{const o=e.getValue();if(of(o)){const e=af(o);if(rf(o)){const n=e.split(sf);if(""===n[0]){if(a.push(""),n.shift(),/\n/.test(n[0])){const e=i.children[t+1];a.push(ff(s,n[1],o,e))}else a.push(r);n.shift()}let u;if(""===Yd(n)&&(n.pop(),u=n.pop()),0===n.length)return;if(n.forEach(((e,t)=>{t%2==1?a.push(jd):a.push(e)})),void 0!==u)if(/\n/.test(u)){const e=i.children[t+1];a.push(ff(s,Yd(a),o,e))}else a.push(r);else{const e=i.children[t+1];a.push(df(s,Yd(a),o,e))}}else/\n/.test(e)?e.match(/\n/g).length>1&&(a.push(""),a.push(qd)):(a.push(""),a.push(r))}else{const r=n(e);a.push(r);const u=i.children[t+1];if(u&&rf(u)){const e=af(u).trim().split(sf)[0];a.push(df(s,e,o,u))}else a.push(qd)}}),"children"),a}(e,0,n,h,d),D=r.children.some((e=>rf(e)));for(let e=f.length-2;e>=0;e--){const t=""===f[e]&&""===f[e+1],n=f[e]===qd&&""===f[e+1]&&f[e+2]===qd,r=(f[e]===Ud||f[e]===qd)&&""===f[e+1]&&f[e+2]===h,s=f[e]===h&&""===f[e+1]&&(f[e+2]===Ud||f[e+2]===qd),i=f[e]===h&&""===f[e+1]&&f[e+2]===h,a=f[e]===Ud&&""===f[e+1]&&f[e+2]===qd||f[e]===qd&&""===f[e+1]&&f[e+2]===Ud;n&&D||t||r||i||a?f.splice(e,2):s&&f.splice(e+1,2)}for(;f.length&&(Jd(Yd(f))||Kd(Yd(f)));)f.pop();for(;f.length&&(Jd(f[0])||Kd(f[0]))&&(Jd(f[1])||Kd(f[1]));)f.shift(),f.shift();const m=[];f.forEach(((e,t)=>{if(e===h){if(1===t&&""===f[t-1])return 2===f.length?void m.push(p):void m.push(Rd([p,qd]));if(t===f.length-1)return void m.push(p);if(""===f[t-1]&&f[t-2]===qd)return void m.push(p)}m.push(e),Xd(e)&&(c=!0)}));const g=D?zd(m):$d(Rd(m),{shouldBreak:!0});if(l)return g;const y=$d(Rd([s,Vd(Rd([qd,g])),qd,i]));return c?y:Wd([$d(Rd([s,Rd(f),i])),y])}(e,t,n)),t);return function(e,t,n){const r=e.getParentNode();if(!r)return t;if({ArrayExpression:!0,JSXAttribute:!0,JSXElement:!0,JSXExpressionContainer:!0,JSXFragment:!0,ExpressionStatement:!0,CallExpression:!0,OptionalCallExpression:!0,ConditionalExpression:!0,JsExpressionRoot:!0}[r.type])return t;const s=e.match(void 0,(e=>"ArrowFunctionExpression"===e.type),uf,(e=>"JSXExpressionContainer"===e.type)),i=xp(e,n);return $d(Rd([i?"":Hd("("),Vd(Rd([Ud,t])),Ud,i?"":Hd(")")]),{shouldBreak:s})}(e,r,t)},printJsxAttribute:function(e,t,n){const r=e.getValue(),s=[];if(s.push(e.call(n,"name")),r.value){let i;if(cf(r.value)){let e=af(r.value).replace(/&apos;/g,"'").replace(/&quot;/g,'"');const n=Qd(e,t.jsxSingleQuote?"'":'"'),s="'"===n?"&apos;":"&quot;";e=e.slice(1,-1).replace(new RegExp(n,"g"),s),i=Rd([n,e,n])}else i=e.call(n,"value");s.push("=",i)}return Rd(s)},printJsxOpeningElement:function(e,t,n){const r=e.getValue(),s=r.name&&r.name.comments&&r.name.comments.length>0||r.typeParameters&&r.typeParameters.comments&&r.typeParameters.comments.length>0;if(r.selfClosing&&!r.attributes.length&&!s)return Rd(["<",e.call(n,"name"),e.call(n,"typeParameters")," />"]);if(r.attributes&&1===r.attributes.length&&r.attributes[0].value&&cf(r.attributes[0].value)&&!r.attributes[0].value.value.includes("\n")&&!s&&(!r.attributes[0].comments||!r.attributes[0].comments.length))return $d(Rd(["<",e.call(n,"name"),e.call(n,"typeParameters")," ",Rd(e.map(n,"attributes")),r.selfClosing?" />":">"]));const i=r.attributes.length&&Zd(Yd(r.attributes)),a=!r.attributes.length&&!s||t.jsxBracketSameLine&&(!s||r.attributes.length)&&!i,o=r.attributes&&r.attributes.some((e=>e.value&&cf(e.value)&&e.value.value.includes("\n")));return $d(Rd(["<",e.call(n,"name"),e.call(n,"typeParameters"),Rd([Vd(Rd(e.map((e=>Rd([jd,n(e)])),"attributes"))),r.selfClosing?jd:a?">":Ud]),r.selfClosing?"/>":a?"":">"]),{shouldBreak:o})},printJsxClosingElement:function(e,t,n){return Rd(["</",e.call(n,"name"),">"])},printJsxOpeningClosingFragment:function(e,t){const n=e.getValue(),r=n.comments&&n.comments.length,s=r&&!n.comments.every((e=>pf(e))),i="JSXOpeningFragment"===n.type;return Rd([i?"<":"</",Vd(Rd([s?qd:r&&!i?" ":"",Md(e,t,!0)])),s?qd:"",">"])},printJsxExpressionContainer:function(e,t,n){const r=e.getValue(),s=e.getParentNode(0),i=r.expression.comments&&r.expression.comments.length>0,a="JSXEmptyExpression"===r.expression.type||!i&&("ArrayExpression"===r.expression.type||"ObjectExpression"===r.expression.type||"ArrowFunctionExpression"===r.expression.type||"CallExpression"===r.expression.type||"OptionalCallExpression"===r.expression.type||"FunctionExpression"===r.expression.type||"TemplateLiteral"===r.expression.type||"TaggedTemplateExpression"===r.expression.type||"DoExpression"===r.expression.type||nf(s)&&("ConditionalExpression"===r.expression.type||lf(r.expression)));return $d(Rd(a?["{",e.call(n,"expression"),Gd,"}"]:["{",Vd(Rd([Ud,e.call(n,"expression")])),Ud,Gd,"}"]))},printJsxEmptyExpression:function(e,t){const n=e.getValue(),r=n.comments&&!n.comments.every((e=>pf(e)));return Rd([Md(e,t,!r),r?qd:""])},printJsxSpreadAttribute:Df,printJsxSpreadChild:Df};const{printDanglingComments:gf}=Do,{builders:{concat:yf,join:Ef,line:Cf,hardline:Af,softline:bf,group:Ff,indent:xf,ifBreak:vf}}=cn,{hasDanglingComments:Sf,isTestCall:Tf,isBlockComment:wf,shouldPrintComma:Bf}=yc,{shouldHugType:Pf}=Kh,Nf=new WeakMap;function kf(e){return Nf.has(e)||Nf.set(e,Symbol("typeParameters")),Nf.get(e)}function If(e,t){const n=e.getValue();if(!Sf(n))return"";const r=n.comments.every((e=>wf(e))),s=gf(e,t,r);return r?s:yf([s,Af])}var Lf={printTypeParameters:function(e,t,n,r){const s=e.getValue();if(!s[r])return"";if(!Array.isArray(s[r]))return e.call(n,r);const i=e.getNode(2);return null!=i&&Tf(i)||0===s[r].length||1===s[r].length&&(Pf(s[r][0])||"GenericTypeAnnotation"===s[r][0].type&&Pf(s[r][0].id)||"TSTypeReference"===s[r][0].type&&Pf(s[r][0].typeName)||"NullableTypeAnnotation"===s[r][0].type)?yf(["<",Ef(", ",e.map(n,r)),If(e,t),">"]):Ff(yf(["<",xf(yf([bf,Ef(yf([",",Cf]),e.map(n,r))])),vf("typescript"!==t.parser&&"babel-ts"!==t.parser&&Bf(t,"all")?",":""),bf,">"]),{id:kf(s)})},getTypeParametersGroupId:kf};const{printComments:Of}=Do,{printString:_f,printNumber:Mf}=Ot,{builders:{concat:Rf}}=cn,{isNumericLiteral:jf,isSimpleNumber:qf,isStringLiteral:Uf,isStringPropSafeToUnquote:$f,rawText:Vf}=yc,Wf=new WeakMap;var zf={printPropertyKey:function(e,t,n){const r=e.getNode();if(r.computed)return Rf(["[",e.call(n,"key"),"]"]);const s=e.getParentNode(),{key:i}=r;if("ClassPrivateProperty"===r.type&&"Identifier"===i.type)return Rf(["#",e.call(n,"key")]);if("consistent"===t.quoteProps&&!Wf.has(s)){const e=(s.properties||s.body||s.members).some((e=>!e.computed&&e.key&&Uf(e.key)&&!$f(e,t)));Wf.set(s,e)}if(("Identifier"===i.type||jf(i)&&qf(Mf(Vf(i)))&&String(i.value)===Mf(Vf(i))&&"typescript"!==t.parser&&"babel-ts"!==t.parser)&&("json"===t.parser||"consistent"===t.quoteProps&&Wf.get(s))){const n=_f(JSON.stringify("Identifier"===i.type?i.name:i.value.toString()),t);return e.call((e=>Of(e,(()=>n),t)),"key")}return $f(r,t)&&("as-needed"===t.quoteProps||"consistent"===t.quoteProps&&!Wf.get(s))?e.call((e=>Of(e,(()=>/^\d/.test(i.value)?Mf(i.value):i.value),t)),"key"):e.call(n,"key")}};const{printDanglingComments:Hf}=Do,{getNextNonSpaceNonCommentCharacterIndex:Gf}=Ot,{builders:{concat:Xf,line:Jf,softline:Kf,group:Yf,indent:Qf,ifBreak:Zf,hardline:eD}}=cn,{getFunctionParameters:tD,hasDanglingComments:nD,hasLeadingOwnLineComment:rD,isFlowAnnotationComment:sD,isJSXNode:iD,isTemplateOnItsOwnLine:aD,shouldPrintComma:oD,startsWithNoLookaheadToken:uD,returnArgumentHasLeadingComment:cD,isBinaryish:lD,isLineComment:pD}=yc,{locEnd:hD}=Yi,{printFunctionParameters:dD}=zh,{printPropertyKey:fD}=zf,{printFunctionTypeParameters:DD}=Up;function mD(e,t,n){const r=[DD(e,t,n),Yf(Xf([dD(e,n,t),yD(e,n,t)]))];return e.getNode().body?r.push(" ",e.call(n,"body")):r.push(t.semi?";":""),Xf(r)}function gD(e,t){return"always"!==t.arrowParens&&"avoid"===t.arrowParens&&function(e){const t=tD(e);return!(1!==t.length||e.typeParameters||nD(e)||"Identifier"!==t[0].type||t[0].typeAnnotation||t[0].comments||t[0].optional||e.predicate||e.returnType)}(e.getValue())}function yD(e,t,n){const r=e.getValue(),s=e.call(t,"returnType");if(r.returnType&&sD(n.originalText,r.returnType))return Xf([" /*: ",s," */"]);const i=[s];return r.returnType&&r.returnType.typeAnnotation&&i.unshift(": "),r.predicate&&i.push(r.returnType?" ":": ",e.call(t,"predicate")),Xf(i)}var ED={printFunctionDeclaration:function(e,t,n,r){const s=e.getValue(),i=[];return s.async&&i.push("async "),s.generator?i.push("function* "):i.push("function "),s.id&&i.push(e.call(t,"id")),i.push(DD(e,n,t),Yf(Xf([dD(e,t,n,r),yD(e,t,n)])),s.body?" ":"",e.call(t,"body")),Xf(i)},printArrowFunctionExpression:function(e,t,n,r){const s=e.getValue(),i=[];s.async&&i.push("async "),gD(e,t)?i.push(e.call(n,"params",0)):i.push(Yf(Xf([dD(e,n,t,r&&(r.expandLastArg||r.expandFirstArg),!0),yD(e,n,t)])));const a=Hf(e,t,!0,(e=>{const n=Gf(t.originalText,e,hD);return!1!==n&&"=>"===t.originalText.slice(n,n+2)}));a&&i.push(" ",a),i.push(" =>");const o=e.call((e=>n(e,r)),"body");if(!rD(t.originalText,s.body)&&("ArrayExpression"===s.body.type||"ObjectExpression"===s.body.type||"BlockStatement"===s.body.type||iD(s.body)||aD(s.body,t.originalText)||"ArrowFunctionExpression"===s.body.type||"DoExpression"===s.body.type))return Yf(Xf([Xf(i)," ",o]));if("SequenceExpression"===s.body.type)return Yf(Xf([Xf(i),Yf(Xf([" (",Qf(Xf([Kf,o])),Kf,")"]))]));const u=(r&&r.expandLastArg||"JSXExpressionContainer"===e.getParentNode().type)&&!(s.comments&&s.comments.length),c=r&&r.expandLastArg&&oD(t,"all"),l="ConditionalExpression"===s.body.type&&!uD(s.body,!1);return Yf(Xf([Xf(i),Yf(Xf([Qf(Xf([Jf,l?Zf("","("):"",o,l?Zf("",")"):""])),u?Xf([Zf(c?",":""),Kf]):""]))]))},printMethod:function(e,t,n){const r=e.getNode(),{kind:s}=r,i=r.value||r,a=[];return s&&"init"!==s&&"method"!==s&&"constructor"!==s?(za.ok("get"===s||"set"===s),a.push(s," ")):i.async&&a.push("async "),i.generator&&a.push("*"),a.push(fD(e,t,n),r.optional||r.key.optional?"?":"",r===i?mD(e,t,n):e.call((e=>mD(e,t,n)),"value")),Xf(a)},printReturnAndThrowArgument:function(e,t,n){const r=e.getValue(),s=t.semi?";":"",i=[];r.argument&&(cD(t,r.argument)?i.push(Xf([" (",Qf(Xf([eD,e.call(n,"argument")])),eD,")"])):lD(r.argument)||"SequenceExpression"===r.argument.type?i.push(Yf(Xf([Zf(" ("," "),Qf(Xf([Kf,e.call(n,"argument")])),Kf,Zf(")")]))):i.push(" ",e.call(n,"argument")));const a=Array.isArray(r.comments)&&r.comments[r.comments.length-1],o=a&&pD(a);return o&&i.push(s),nD(r)&&i.push(" ",Hf(e,t,!0)),o||i.push(s),Xf(i)},shouldPrintParamsWithoutParens:gD};const{printComments:CD,printDanglingComments:AD}=Do,{builders:{concat:bD,join:FD,line:xD,hardline:vD,softline:SD,group:TD,indent:wD,ifBreak:BD}}=cn,{hasTrailingComment:PD,hasTrailingLineComment:ND}=yc,{getTypeParametersGroupId:kD}=Lf,{printMethod:ID}=ED,{printDecorators:LD}=Up;function OD(e){return e.typeParameters&&!ND(e.typeParameters)&&!function(e){return["superClass","extends","mixins","implements"].filter((t=>!!e[t])).length>1}(e)}function _D(e,t,n,r){const s=e.getValue();if(!s[r]||0===s[r].length)return"";const i=AD(e,t,!0,(({marker:e})=>e===r));return bD([OD(s)?BD(" ",xD,{groupId:kD(s.typeParameters)}):xD,i,i&&vD,r,TD(wD(bD([xD,FD(bD([",",xD]),e.map(n,r))])))])}function MD(e,t,n){const r=e.call(n,"superClass");return"AssignmentExpression"===e.getParentNode().type?TD(BD(bD(["(",wD(bD([SD,r])),SD,")"]),r)):r}var RD={printClass:function(e,t,n){const r=e.getValue(),s=[];r.abstract&&s.push("abstract "),s.push("class");const i=r.id&&PD(r.id)||r.superClass&&r.superClass.comments&&0!==r.superClass.comments.length||r.extends&&0!==r.extends.length||r.mixins&&0!==r.mixins.length||r.implements&&0!==r.implements.length,a=[],o=[];if(r.id&&a.push(" ",e.call(n,"id")),a.push(e.call(n,"typeParameters")),r.superClass){const r=bD(["extends ",MD(e,0,n),e.call(n,"superTypeParameters")]),s=e.call((e=>CD(e,(()=>r),t)),"superClass");i?o.push(xD,TD(s)):o.push(" ",s)}else o.push(_D(e,t,n,"extends"));if(o.push(_D(e,t,n,"mixins")),o.push(_D(e,t,n,"implements")),i){const e=bD(o);OD(r)?s.push(TD(bD(a.concat(BD(wD(e),e))))):s.push(TD(wD(bD(a.concat(e)))))}else s.push(...a,...o);return s.push(" ",e.call(n,"body")),bD(s)},printClassMethod:function(e,t,n){const r=e.getValue(),s=[];return r.decorators&&0!==r.decorators.length&&s.push(LD(e,t,n)),r.accessibility&&s.push(r.accessibility+" "),r.static&&s.push("static "),("TSAbstractMethodDefinition"===r.type||r.abstract)&&s.push("abstract "),s.push(ID(e,t,n)),bD(s)}};const{getLast:jD,getPenultimate:qD,isNextLineEmpty:UD}=Ot,{getFunctionParameters:$D,iterateFunctionParametersPath:VD,hasLeadingComment:WD,hasTrailingComment:zD,isFunctionCompositionArgs:HD,isJSXNode:GD,isLongCurriedCallExpression:XD,shouldPrintComma:JD,getCallArguments:KD,iterateCallArgumentsPath:YD}=yc,{locEnd:QD}=Yi,{builders:{concat:ZD,line:em,hardline:tm,softline:nm,group:rm,indent:sm,conditionalGroup:im,ifBreak:am,breakParent:om},utils:{willBreak:um}}=cn;function cm(e){return"ObjectExpression"===e.type&&(e.properties.length>0||e.comments)||"ArrayExpression"===e.type&&(e.elements.length>0||e.comments)||"TSTypeAssertion"===e.type&&cm(e.expression)||"TSAsExpression"===e.type&&cm(e.expression)||"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type&&(!e.returnType||!e.returnType.typeAnnotation||"TSTypeReference"!==e.returnType.typeAnnotation.type)&&("BlockStatement"===e.body.type||"ArrowFunctionExpression"===e.body.type||"ObjectExpression"===e.body.type||"ArrayExpression"===e.body.type||"CallExpression"===e.body.type||"OptionalCallExpression"===e.body.type||"ConditionalExpression"===e.body.type||GD(e.body))}var lm=function(e,t,n){const r=e.getValue(),s="ImportExpression"===r.type,i=KD(r);if(0===i.length)return ZD(["(",Do.printDanglingComments(e,t,!0),")"]);if(2===i.length&&"ArrowFunctionExpression"===i[0].type&&0===$D(i[0]).length&&"BlockStatement"===i[0].body.type&&"ArrayExpression"===i[1].type&&!i.some((e=>e.comments)))return ZD(["(",e.call(n,"arguments",0),", ",e.call(n,"arguments",1),")"]);let a=!1,o=!1,u=!1;const c=i.length-1,l=[];YD(e,((e,r)=>{const s=e.getNode(),i=[n(e)];r===c||(UD(t.originalText,s,QD)?(0===r&&(u=!0),a=!0,i.push(",",tm,tm)):i.push(",",em)),o=function(e,t){if(!e||"ArrowFunctionExpression"!==e.type||!e.body||"BlockStatement"!==e.body.type||0===$D(e).length)return!1;let r=!1;return VD(t,(e=>{r=r||um(ZD([n(e)]))})),r}(s,e),l.push(ZD(i))}));const p=s||r.callee&&"Import"===r.callee.type||!JD(t,"all")?"":",";function h(){return rm(ZD(["(",sm(ZD([em,ZD(l)])),p,em,")"]),{shouldBreak:!0})}if("Decorator"!==e.getParentNode().type&&HD(i))return h();const d=function(e){if(2!==e.length)return!1;const[t,n]=e;return!(t.comments&&t.comments.length||"FunctionExpression"!==t.type&&("ArrowFunctionExpression"!==t.type||"BlockStatement"!==t.body.type)||"FunctionExpression"===n.type||"ArrowFunctionExpression"===n.type||"ConditionalExpression"===n.type||cm(n))}(i),f=function(e){const t=jD(e),n=qD(e);return!WD(t)&&!zD(t)&&cm(t)&&(!n||n.type!==t.type)}(i);if(d||f){const t=(d?l.slice(1).some(um):l.slice(0,-1).some(um))||a||o;let s=[];YD(e,((e,t)=>{d&&0===t&&(s=[ZD([e.call((e=>n(e,{expandFirstArg:!0}))),l.length>1?",":"",u?tm:em,u?tm:""])].concat(l.slice(1))),f&&t===i.length-1&&(s=l.slice(0,-1).concat(e.call((e=>n(e,{expandLastArg:!0})))))}));const c=l.some(um),p=ZD(["(",ZD(s),")"]);return ZD([c?om:"",im([c||r.typeArguments||r.typeParameters?am(h(),p):p,ZD(d?["(",rm(s[0],{shouldBreak:!0}),ZD(s.slice(1)),")"]:["(",ZD(l.slice(0,-1)),rm(jD(s),{shouldBreak:!0}),")"]),h()],{shouldBreak:t})])}const D=ZD(["(",sm(ZD([nm,ZD(l)])),am(p),nm,")"]);return XD(e)?D:rm(D,{shouldBreak:l.some(um)||a})};const{builders:{concat:pm,softline:hm,group:dm,indent:fm}}=cn,{isNumericLiteral:Dm}=yc,{printOptionalToken:mm}=Up;function gm(e,t,n){const r=e.call(n,"property"),s=e.getValue(),i=mm(e);return s.computed?!s.property||Dm(s.property)?pm([i,"[",r,"]"]):dm(pm([i,"[",fm(pm([hm,r])),hm,"]"])):pm([i,".",r])}var ym={printMemberExpression:function(e,t,n){const r=e.getValue(),s=e.getParentNode();let i,a=0;do{i=e.getParentNode(a),a++}while(i&&("MemberExpression"===i.type||"OptionalMemberExpression"===i.type||"TSNonNullExpression"===i.type));const o=i&&("NewExpression"===i.type||"BindExpression"===i.type||"VariableDeclarator"===i.type&&"Identifier"!==i.id.type||"AssignmentExpression"===i.type&&"Identifier"!==i.left.type)||r.computed||"Identifier"===r.object.type&&"Identifier"===r.property.type&&"MemberExpression"!==s.type&&"OptionalMemberExpression"!==s.type;return pm([e.call(n,"object"),o?gm(e,0,n):dm(fm(pm([hm,gm(e,0,n)])))])},printMemberLookup:gm};const{getLast:Em,isNextLineEmpty:Cm,isNextLineEmptyAfterIndex:Am,getNextNonSpaceNonCommentCharacterIndex:bm}=Ot,{hasLeadingComment:Fm,hasTrailingComment:xm,isCallOrOptionalCallExpression:vm,isFunctionOrArrowExpression:Sm,isLongCurriedCallExpression:Tm,isMemberish:wm,isNumericLiteral:Bm,isSimpleCallArgument:Pm}=yc,{locEnd:Nm}=Yi,{builders:{concat:km,join:Im,hardline:Lm,group:Om,indent:_m,conditionalGroup:Mm,breakParent:Rm},utils:{willBreak:jm}}=cn,{printMemberLookup:qm}=ym,{printOptionalToken:Um,printFunctionTypeParameters:$m,printBindExpressionCallee:Vm}=Up;var Wm=function(e,t,n){const r=e.getParentNode(),s=!r||"ExpressionStatement"===r.type,i=[];function a(e){const{originalText:n}=t,r=bm(n,e,Nm);return")"===n.charAt(r)?!1!==r&&Am(n,r+1):Cm(n,e,Nm)}function o(e){const r=e.getValue();vm(r)&&(wm(r.callee)||vm(r.callee))?(i.unshift({node:r,printed:km([Do.printComments(e,(()=>km([Um(e),$m(e,t,n),lm(e,t,n)])),t),a(r)?Lm:""])}),e.call((e=>o(e)),"callee")):wm(r)?(i.unshift({node:r,needsParens:xp(e,t),printed:Do.printComments(e,(()=>"OptionalMemberExpression"===r.type||"MemberExpression"===r.type?qm(e,t,n):Vm(e,t,n)),t)}),e.call((e=>o(e)),"object")):"TSNonNullExpression"===r.type?(i.unshift({node:r,printed:Do.printComments(e,(()=>"!"),t)}),e.call((e=>o(e)),"expression")):i.unshift({node:r,printed:e.call(n)})}const u=e.getValue();i.unshift({node:u,printed:km([Um(e),$m(e,t,n),lm(e,t,n)])}),u.callee&&e.call((e=>o(e)),"callee");const c=[];let l=[i[0]],p=1;for(;p<i.length&&("TSNonNullExpression"===i[p].node.type||vm(i[p].node)||("MemberExpression"===i[p].node.type||"OptionalMemberExpression"===i[p].node.type)&&i[p].node.computed&&Bm(i[p].node.property));++p)l.push(i[p]);if(!vm(i[0].node))for(;p+1<i.length&&wm(i[p].node)&&wm(i[p+1].node);++p)l.push(i[p]);c.push(l),l=[];let h=!1;for(;p<i.length;++p){if(h&&wm(i[p].node)){if(i[p].node.computed&&Bm(i[p].node.property)){l.push(i[p]);continue}c.push(l),l=[],h=!1}(vm(i[p].node)||"ImportExpression"===i[p].node.type)&&(h=!0),l.push(i[p]),i[p].node.comments&&i[p].node.comments.some((e=>e.trailing))&&(c.push(l),l=[],h=!1)}function d(e){return/^[A-Z]|^[$_]+$/.test(e)}l.length>0&&c.push(l);const f=c.length>=2&&!c[1][0].node.comments&&function(e){const n=e[1].length&&e[1][0].node.computed;if(1===e[0].length){const r=e[0][0].node;return"ThisExpression"===r.type||"Identifier"===r.type&&(d(r.name)||s&&function(e){return e.length<=t.tabWidth}(r.name)||n)}const r=Em(e[0]).node;return("MemberExpression"===r.type||"OptionalMemberExpression"===r.type)&&"Identifier"===r.property.type&&(d(r.property.name)||n)}(c);function D(e){const t=e.map((e=>e.printed));return e.length>0&&e[e.length-1].needsParens?km(["(",...t,")"]):km(t)}const m=c.map(D),g=km(m),y=f?3:2,E=Ui(c),C=E.slice(1,-1).some((e=>Fm(e.node)))||E.slice(0,-1).some((e=>xm(e.node)))||c[y]&&Fm(c[y][0].node);if(c.length<=y&&!C)return Tm(e)?g:Om(g);const A=Em(c[f?1:0]).node,b=!vm(A)&&a(A),F=km([D(c[0]),f?km(c.slice(1,2).map(D)):"",b?Lm:"",function(e){return 0===e.length?"":_m(Om(km([Lm,Im(Lm,e.map(D))])))}(c.slice(f?2:1))]),x=i.map((({node:e})=>e)).filter(vm);return C||x.length>2&&x.some((e=>!e.arguments.every((e=>Pm(e,0)))))||m.slice(0,-1).some(jm)||function(){const e=Em(Em(c)).node,t=Em(m);return vm(e)&&jm(t)&&x.slice(0,-1).some((e=>e.arguments.some(Sm)))}()?Om(F):km([jm(g)||b?Rm:"",Mm([g,F])])};const{builders:{concat:zm,join:Hm,group:Gm}}=cn,{getCallArguments:Xm,hasFlowAnnotationComment:Jm,isCallOrOptionalCallExpression:Km,isMemberish:Ym,isTemplateOnItsOwnLine:Qm,isTestCall:Zm,iterateCallArgumentsPath:eg}=yc,{printOptionalToken:tg,printFunctionTypeParameters:ng}=Up;var rg={printCallExpression:function(e,t,n){const r=e.getValue(),s="NewExpression"===r.type,i="ImportExpression"===r.type,a=tg(e),o=Xm(r);if(o.length>0&&(!i&&!s&&"Identifier"===r.callee.type&&("require"===r.callee.name||"define"===r.callee.name)||1===o.length&&Qm(o[0],t.originalText)||!s&&Zm(r,e.getParentNode()))){const r=[];return eg(e,(e=>{r.push(n(e))})),zm([s?"new ":"",e.call(n,"callee"),a,ng(e,t,n),zm(["(",Hm(", ",r),")"])])}const u=("babel"===t.parser||"babel-flow"===t.parser)&&r.callee&&"Identifier"===r.callee.type&&Jm(r.callee.trailingComments);if(u&&(r.callee.trailingComments[0].printed=!0),!i&&!s&&Ym(r.callee)&&!e.call((e=>xp(e,t)),"callee"))return Wm(e,t,n);const c=zm([s?"new ":"",i?"import":e.call(n,"callee"),a,u?"/*:: ".concat(r.callee.trailingComments[0].value.slice(2).trim()," */"):"",ng(e,t,n),lm(e,t,n)]);return i||Km(r.callee)?Gm(c):c}};const{builders:{concat:sg,join:ig,line:ag,group:og,indent:ug,ifBreak:cg}}=cn,{hasTrailingComment:lg,hasTrailingLineComment:pg,identity:hg}=yc,{getTypeParametersGroupId:dg}=Lf,{printTypeScriptModifiers:fg}=Up;var Dg={printInterface:function(e,t,n){const r=e.getValue(),s=[];("DeclareInterface"===r.type||r.declare)&&s.push("declare "),"TSInterfaceDeclaration"===r.type&&s.push(r.abstract?"abstract ":"",fg(e,t,n)),s.push("interface");const i=[],a=[];"InterfaceTypeAnnotation"!==r.type&&i.push(" ",e.call(n,"id"),e.call(n,"typeParameters"));const o=r.typeParameters&&!pg(r.typeParameters);if(r.extends&&0!==r.extends.length&&a.push(o?cg(" ",ag,{groupId:dg(r.typeParameters)}):ag,"extends ",(1===r.extends.length?hg:ug)(ig(sg([",",ag]),e.map(n,"extends")))),r.id&&lg(r.id)||r.extends&&0!==r.extends.length){const e=sg(a);o?s.push(og(sg(i.concat(cg(ug(e),e))))):s.push(og(ug(sg(i.concat(e)))))}else s.push(...i,...a);return s.push(" ",e.call(n,"body")),og(sg(s))}};const{printComments:mg}=Do,{getLast:gg}=Ot,{builders:{concat:yg,join:Eg,line:Cg,softline:Ag,group:bg,indent:Fg,align:xg,ifBreak:vg},utils:{normalizeParts:Sg}}=cn,{hasLeadingOwnLineComment:Tg,hasTrailingLineComment:wg,isBinaryish:Bg,isJSXNode:Pg,shouldFlatten:Ng}=yc;let kg=0;function Ig(e,t,n,r,s){let i=[];const a=e.getValue();if(Bg(a)){Ng(a.operator,a.left.operator)?i=i.concat(e.call((e=>Ig(e,t,n,!0,s)),"left")):i.push(bg(e.call(t,"left")));const o=Lg(a),u=("|>"===a.operator||"NGPipeExpression"===a.type||"|"===a.operator&&"__vue_expression"===n.parser)&&!Tg(n.originalText,a.right),c="NGPipeExpression"===a.type?"|":a.operator,l="NGPipeExpression"===a.type&&0!==a.arguments.length?bg(Fg(yg([Ag,": ",Eg(yg([Ag,":",vg(" ")]),e.map(t,"arguments").map((e=>xg(2,bg(e)))))]))):"",p=yg(o?[c," ",e.call(t,"right"),l]:[u?Cg:"",c,u?" ":Cg,e.call(t,"right"),l]),h=e.getParentNode(),d=wg(a.left),f=d||!(s&&"LogicalExpression"===a.type)&&h.type!==a.type&&a.left.type!==a.type&&a.right.type!==a.type;i.push(u?"":" ",f?bg(p,{shouldBreak:d}):p),r&&a.comments&&(i=Sg(mg(e,(()=>yg(i)),n).parts))}else i.push(bg(e.call(t)));return i}function Lg(e){return"LogicalExpression"===e.type&&("ObjectExpression"===e.right.type&&0!==e.right.properties.length||"ArrayExpression"===e.right.type&&0!==e.right.elements.length||!!Pg(e.right))}var Og={printBinaryishExpression:function(e,t,n){const r=e.getValue(),s=e.getParentNode(),i=e.getParentNode(1),a=r!==s.body&&("IfStatement"===s.type||"WhileStatement"===s.type||"SwitchStatement"===s.type||"DoWhileStatement"===s.type),o=Ig(e,n,t,!1,a);if(a)return yg(o);if(("CallExpression"===s.type||"OptionalCallExpression"===s.type)&&s.callee===r||"UnaryExpression"===s.type||("MemberExpression"===s.type||"OptionalMemberExpression"===s.type)&&!s.computed)return bg(yg([Fg(yg([Ag,yg(o)])),Ag]));const u="ReturnStatement"===s.type||"ThrowStatement"===s.type||"JSXExpressionContainer"===s.type&&"JSXAttribute"===i.type||"|"!==r.operator&&"JsExpressionRoot"===s.type||"NGPipeExpression"!==r.type&&("NGRoot"===s.type&&"__ng_binding"===t.parser||"NGMicrosyntaxExpression"===s.type&&"NGMicrosyntax"===i.type&&1===i.body.length)||r===s.body&&"ArrowFunctionExpression"===s.type||r!==s.body&&"ForStatement"===s.type||"ConditionalExpression"===s.type&&"ReturnStatement"!==i.type&&"ThrowStatement"!==i.type&&"CallExpression"!==i.type&&"OptionalCallExpression"!==i.type||"TemplateLiteral"===s.type,c="AssignmentExpression"===s.type||"VariableDeclarator"===s.type||"ClassProperty"===s.type||"FieldDefinition"===s.type||"TSAbstractClassProperty"===s.type||"ClassPrivateProperty"===s.type||"ObjectProperty"===s.type||"Property"===s.type,l=Bg(r.left)&&Ng(r.operator,r.left.operator);if(u||Lg(r)&&!l||!Lg(r)&&c)return bg(yg(o));if(0===o.length)return"";const p=Pg(r.right),h=o.findIndex((e=>"string"!=typeof e&&"group"===e.type)),d=o.slice(0,-1===h?1:h+1),f=yg(o.slice(d.length,p?-1:void 0)),D=Symbol("logicalChain-"+ ++kg),m=bg(yg([...d,Fg(f)]),{id:D});if(!p)return m;const g=gg(o);return bg(yg([m,vg(Fg(g),g,{groupId:D})]))},shouldInlineLogicalExpression:Lg};const{builders:{concat:_g,line:Mg,group:Rg,indent:jg}}=cn,{hasLeadingOwnLineComment:qg,isBinaryish:Ug,isMemberExpressionChain:$g,isStringLiteral:Vg}=yc,{shouldInlineLogicalExpression:Wg}=Og;function zg(e,t,n,r,s,i){if(!r)return t;const a=Hg(e,r,s,i);return Rg(_g([t,n,a]))}function Hg(e,t,n,r){return qg(r.originalText,t)?jg(_g([Mg,n])):Ug(t)&&!Wg(t)||"ConditionalExpression"===t.type&&Ug(t.test)&&!Wg(t.test)||"StringLiteralTypeAnnotation"===t.type||"ClassExpression"===t.type&&t.decorators&&t.decorators.length||("Identifier"===e.type||Vg(e)||"MemberExpression"===e.type)&&(Vg(t)||$g(t))&&"json"!==r.parser&&"json5"!==r.parser||"SequenceExpression"===t.type?Rg(jg(_g([Mg,n]))):_g([" ",n])}var Gg={printVariableDeclarator:function(e,t,n){const r=e.getValue();return zg(r.id,e.call(n,"id")," =",r.init,r.init&&e.call(n,"init"),t)},printAssignmentExpression:function(e,t,n){const r=e.getValue();return zg(r.left,e.call(n,"left"),_g([" ",r.operator]),r.right,e.call(n,"right"),t)},printAssignment:zg,printAssignmentRight:Hg};const{isNextLineEmpty:Xg}=Ot,{builders:{concat:Jg,join:Kg,hardline:Yg}}=cn,{classChildNeedsASIProtection:Qg,classPropMayCauseASIProblems:Zg,getLeftSidePathName:ey,hasNakedLeftSide:ty,isJSXNode:ny,isLastStatement:ry,isTheOnlyJSXElementInMarkdown:sy}=yc,{locEnd:iy}=Yi,{shouldPrintParamsWithoutParens:ay}=ED;function oy({path:e,index:t,bodyNode:n,isClass:r},s,i){const a=e.getValue();if(!a)return;if("EmptyStatement"===a.type)return;const o=i(e),u=s.originalText,c=[];if(s.semi||r||sy(s,e)||!function(e,t){return"ExpressionStatement"===e.getNode().type&&e.call((e=>uy(e,t)),"expression")}(e,s)?c.push(o):a.comments&&a.comments.some((e=>e.leading))?c.push(i(e,{needsSemi:!0})):c.push(";",o),!s.semi&&r)if(Zg(e))c.push(";");else if("ClassProperty"===a.type||"FieldDefinition"===a.type){const e=n.body[t+1];Qg(e)&&c.push(";")}return Xg(u,a,iy)&&!ry(e)&&c.push(Yg),Jg(c)}function uy(e,t){const n=e.getValue();return!!(xp(e,t)||"ParenthesizedExpression"===n.type||"TypeCastExpression"===n.type||"ArrowFunctionExpression"===n.type&&!ay(e,t)||"ArrayExpression"===n.type||"ArrayPattern"===n.type||"UnaryExpression"===n.type&&n.prefix&&("+"===n.operator||"-"===n.operator)||"TemplateLiteral"===n.type||"TemplateElement"===n.type||ny(n)||"BindExpression"===n.type&&!n.object||"RegExpLiteral"===n.type||"Literal"===n.type&&n.pattern||"Literal"===n.type&&n.regex)||!!ty(n)&&e.call((e=>uy(e,t)),...ey(e,n))}var cy={printStatementSequence:function(e,t,n){const r=e.getNode(),s="ClassBody"===r.type,i=e.map(((i,a)=>oy({path:e,index:a,bodyNode:r,isClass:s},t,n))).filter(Boolean);return Kg(Yg,i)}};const{printDanglingComments:ly}=Do,{isNextLineEmpty:py}=Ot,{builders:{concat:hy,hardline:dy,indent:fy}}=cn,{hasDanglingComments:Dy}=yc,{locEnd:my}=Yi,{printStatementSequence:gy}=cy;var yy={printBlock:function(e,t,n){const r=e.getValue(),s=[],i=t.semi?";":"",a=e.call((e=>gy(e,t,n)),"body");"StaticBlock"===r.type&&s.push("static ");const o=r.body.some((e=>"EmptyStatement"!==e.type)),u=r.directives&&r.directives.length>0,c=e.getParentNode(),l=e.getParentNode(1);return o||u||Dy(r)||"ArrowFunctionExpression"!==c.type&&"FunctionExpression"!==c.type&&"FunctionDeclaration"!==c.type&&"ObjectMethod"!==c.type&&"ClassMethod"!==c.type&&"ClassPrivateMethod"!==c.type&&"ForStatement"!==c.type&&"WhileStatement"!==c.type&&"DoWhileStatement"!==c.type&&"DoExpression"!==c.type&&("CatchClause"!==c.type||l.finalizer)&&"TSModuleDeclaration"!==c.type&&"TSDeclareFunction"!==c.type&&"StaticBlock"!==r.type?(s.push("{"),u&&e.each((e=>{s.push(fy(hy([dy,n(e),i]))),py(t.originalText,e.getValue(),my)&&s.push(dy)}),"directives"),o&&s.push(fy(hy([dy,a]))),s.push(ly(e,t)),s.push(dy,"}"),hy(s)):hy([...s,"{}"])}};const{hasNewline:Ey}=Ot,{builders:{concat:Cy,join:Ay,hardline:by}}=cn,{isLineComment:Fy,isBlockComment:xy}=yc,{locStart:vy,locEnd:Sy}=Yi;var Ty={printComment:function(e,t){const n=e.getValue();if(Fy(n))return t.originalText.slice(vy(n),Sy(n)).trimEnd();if(xy(n)){if(function(e){const t="*".concat(e.value,"*").split("\n");return t.length>1&&t.every((e=>"*"===e.trim()[0]))}(n)){const e=function(e){const t=e.value.split("\n");return Cy(["/*",Ay(by,t.map(((e,n)=>0===n?e.trimEnd():" "+(n<t.length-1?e.trim():e.trimStart())))),"*/"])}(n);return n.trailing&&!Ey(t.originalText,vy(n),{backwards:!0})?Cy([by,e]):e}const e=Sy(n),r="*-/"===t.originalText.slice(e-3,e);return"/*"+n.value+(r?"*-/":"*/")}throw new Error("Not a comment: "+JSON.stringify(n))}};const{hasNewline:wy,hasNewlineInRange:By,getLast:Py,printString:Ny,printNumber:ky,isNextLineEmpty:Iy}=Ot,{builders:{concat:Ly,join:Oy,line:_y,hardline:My,softline:Ry,literalline:jy,group:qy,indent:Uy,align:$y,conditionalGroup:Vy,ifBreak:Wy},utils:{isEmpty:zy}}=cn,{insertPragma:Hy}=pp,{printHtmlBinding:Gy,isVueEventBindingExpression:Xy}=Np,{getFunctionParameters:Jy,getCallArguments:Ky,getParentExportDeclaration:Yy,getTypeScriptMappedTypeModifier:Qy,hasDanglingComments:Zy,hasFlowShorthandAnnotationComment:eE,hasLeadingOwnLineComment:tE,hasNewlineBetweenOrAfterDecorators:nE,hasNgSideEffect:rE,hasPrettierIgnore:sE,hasTrailingComment:iE,isExportDeclaration:aE,isFunctionNotation:oE,isGetterOrSetter:uE,isLiteral:cE,isNgForOf:lE,isObjectType:pE,isObjectTypePropertyAFunction:hE,isTheOnlyJSXElementInMarkdown:dE,isTSXFile:fE,isBlockComment:DE,needsHardlineAfterDanglingComment:mE,rawText:gE,shouldPrintComma:yE}=yc,{locStart:EE,locEnd:CE}=Yi,{printOptionalToken:AE,printBindExpressionCallee:bE,printTypeScriptModifiers:FE,printDecorators:xE,printFlowDeclaration:vE,adjustClause:SE}=Up,{printImportDeclaration:TE,printExportDeclaration:wE,printExportAllDeclaration:BE,printModuleSpecifier:PE}=ah,{printFunctionParameters:NE}=zh,{printTemplateLiteral:kE}=Dl,{printArray:IE,printArrayItems:LE}=hd,{printObject:OE}=Od,{printTypeAnnotation:_E,shouldHugType:ME}=Kh,{printJsxElement:RE,printJsxAttribute:jE,printJsxOpeningElement:qE,printJsxClosingElement:UE,printJsxOpeningClosingFragment:$E,printJsxExpressionContainer:VE,printJsxEmptyExpression:WE,printJsxSpreadAttribute:zE,printJsxSpreadChild:HE}=mf,{printClass:GE,printClassMethod:XE}=RD,{printTypeParameters:JE}=Lf,{printPropertyKey:KE}=zf,{printFunctionDeclaration:YE,printArrowFunctionExpression:QE,printMethod:ZE,printReturnAndThrowArgument:eC}=ED,{printCallExpression:tC}=rg,{printInterface:nC}=Dg,{printVariableDeclarator:rC,printAssignmentExpression:sC,printAssignment:iC,printAssignmentRight:aC}=Gg,{printBinaryishExpression:oC}=Og,{printStatementSequence:uC}=cy,{printMemberExpression:cC}=ym,{printBlock:lC}=yy,{printComment:pC}=Ty;function hC(e,t,n){const r=gE(e),s=n||"DirectiveLiteral"===e.type;return Ny(r,t,s)}function dC(e){const t=e.flags.split("").sort().join("");return"/".concat(e.pattern,"/").concat(t)}var fC={preprocess:kp,print:function(e,t,n,r){const s=e.getValue();let i=!1;const a=function(e,t,n,r){const s=e.getValue(),i=t.semi?";":"";if(!s)return"";if("string"==typeof s)return s;const a=Gy(e,t,n);if(a)return a;let o=[];switch(s.type){case"JsExpressionRoot":return e.call(n,"node");case"JsonRoot":return Ly([e.call(n,"node"),My]);case"File":return s.program&&s.program.interpreter&&o.push(e.call((e=>e.call(n,"interpreter")),"program")),o.push(e.call(n,"program")),Ly(o);case"Program":{const r=!s.body.every((({type:e})=>"EmptyStatement"===e))||s.comments;if(s.directives){const a=s.directives.length;e.each(((e,s)=>{o.push(n(e),i,My),(s<a-1||r)&&Iy(t.originalText,e.getValue(),CE)&&o.push(My)}),"directives")}return o.push(e.call((e=>uC(e,t,n)),"body")),o.push(Do.printDanglingComments(e,t,!0)),r&&o.push(My),Ly(o)}case"EmptyStatement":return"";case"ExpressionStatement":if(s.directive)return Ly([hC(s.expression,t,!0),i]);if("__vue_event_binding"===t.parser){const t=e.getParentNode();if("Program"===t.type&&1===t.body.length&&t.body[0]===s)return Ly([e.call(n,"expression"),Xy(s.expression)?";":""])}return Ly([e.call(n,"expression"),dE(t,e)?"":i]);case"ParenthesizedExpression":return s.expression.comments?qy(Ly(["(",Uy(Ly([Ry,e.call(n,"expression")])),Ry,")"])):Ly(["(",e.call(n,"expression"),")"]);case"AssignmentExpression":return sC(e,t,n);case"VariableDeclarator":return rC(e,t,n);case"BinaryExpression":case"LogicalExpression":case"NGPipeExpression":return oC(e,t,n);case"AssignmentPattern":return Ly([e.call(n,"left")," = ",e.call(n,"right")]);case"TSTypeAssertion":{const t=!("ArrayExpression"===s.expression.type||"ObjectExpression"===s.expression.type),r=qy(Ly(["<",Uy(Ly([Ry,e.call(n,"typeAnnotation")])),Ry,">"])),i=Ly([Wy("("),Uy(Ly([Ry,e.call(n,"expression")])),Ry,Wy(")")]);return t?Vy([Ly([r,e.call(n,"expression")]),Ly([r,qy(i,{shouldBreak:!0})]),Ly([r,e.call(n,"expression")])]):qy(Ly([r,e.call(n,"expression")]))}case"OptionalMemberExpression":case"MemberExpression":return cC(e,t,n);case"MetaProperty":return Ly([e.call(n,"meta"),".",e.call(n,"property")]);case"BindExpression":return s.object&&o.push(e.call(n,"object")),o.push(qy(Uy(Ly([Ry,bE(e,t,n)])))),Ly(o);case"Identifier":return Ly([s.name,AE(e),_E(e,t,n)]);case"V8IntrinsicIdentifier":return Ly(["%",s.name]);case"SpreadElement":case"SpreadElementPattern":case"SpreadProperty":case"SpreadPropertyPattern":case"RestElement":case"ObjectTypeSpreadProperty":return Ly(["...",e.call(n,"argument"),_E(e,t,n)]);case"FunctionDeclaration":case"FunctionExpression":return o.push(YE(e,n,t,r&&r.expandLastArg&&Ky(e.getParentNode()).length>1)),s.body||o.push(i),Ly(o);case"ArrowFunctionExpression":return QE(e,t,n,r);case"YieldExpression":return o.push("yield"),s.delegate&&o.push("*"),s.argument&&o.push(" ",e.call(n,"argument")),Ly(o);case"AwaitExpression":{o.push("await"),s.argument&&o.push(" ",e.call(n,"argument"));const t=e.getParentNode();return("CallExpression"===t.type||"OptionalCallExpression"===t.type)&&t.callee===s||("MemberExpression"===t.type||"OptionalMemberExpression"===t.type)&&t.object===s?qy(Ly([Uy(Ly([Ry,Ly(o)])),Ry])):Ly(o)}case"TSExportAssignment":return Ly(["export = ",e.call(n,"expression"),i]);case"ExportDefaultDeclaration":case"ExportNamedDeclaration":case"DeclareExportDeclaration":return wE(e,t,n);case"ExportAllDeclaration":case"DeclareExportAllDeclaration":return BE(e,t,n);case"ImportDeclaration":return TE(e,t,n);case"ImportSpecifier":case"ExportSpecifier":case"ImportNamespaceSpecifier":case"ExportNamespaceSpecifier":case"ImportDefaultSpecifier":case"ExportDefaultSpecifier":return PE(e,t,n);case"ImportAttribute":return Ly([e.call(n,"key"),": ",e.call(n,"value")]);case"Import":return"import";case"TSModuleBlock":case"BlockStatement":case"StaticBlock":return lC(e,t,n);case"ThrowStatement":case"ReturnStatement":return Ly(["ReturnStatement"===s.type?"return":"throw",eC(e,t,n)]);case"NewExpression":case"ImportExpression":case"OptionalCallExpression":case"CallExpression":return tC(e,t,n);case"ObjectTypeInternalSlot":return Ly([s.static?"static ":"","[[",e.call(n,"id"),"]]",AE(e),s.method?"":": ",e.call(n,"value")]);case"ObjectExpression":case"ObjectPattern":case"ObjectTypeAnnotation":case"TSInterfaceBody":case"TSTypeLiteral":case"RecordExpression":return OE(e,t,n);case"ObjectProperty":case"Property":return s.method||"get"===s.kind||"set"===s.kind?ZE(e,t,n):(s.shorthand?o.push(e.call(n,"value")):o.push(iC(s.key,KE(e,t,n),":",s.value,e.call(n,"value"),t)),Ly(o));case"ClassMethod":case"ClassPrivateMethod":case"MethodDefinition":case"TSAbstractMethodDefinition":case"TSDeclareMethod":return XE(e,t,n);case"ObjectMethod":return ZE(e,t,n);case"Decorator":return Ly(["@",e.call(n,"expression"),e.call(n,"callee")]);case"ArrayExpression":case"ArrayPattern":case"TupleExpression":return IE(e,t,n);case"SequenceExpression":{const t=e.getParentNode(0);if("ExpressionStatement"===t.type||"ForStatement"===t.type){const t=[];return e.each((e=>{0===e.getName()?t.push(n(e)):t.push(",",Uy(Ly([_y,n(e)])))}),"expressions"),qy(Ly(t))}return qy(Ly([Oy(Ly([",",_y]),e.map(n,"expressions"))]))}case"ThisExpression":return"this";case"Super":return"super";case"NullLiteral":return"null";case"RegExpLiteral":return dC(s);case"NumericLiteral":return ky(s.extra.raw);case"DecimalLiteral":return ky(s.value)+"m";case"BigIntLiteral":return(s.bigint||s.extra.raw).toLowerCase();case"BooleanLiteral":case"StringLiteral":case"Literal":return s.regex?dC(s.regex):s.bigint?s.raw.toLowerCase():"number"==typeof s.value?ky(s.raw):"string"!=typeof s.value?""+s.value:hC(s,t);case"Directive":return e.call(n,"value");case"DirectiveLiteral":return hC(s,t);case"UnaryExpression":return o.push(s.operator),/[a-z]$/.test(s.operator)&&o.push(" "),s.argument.comments&&s.argument.comments.length>0?o.push(qy(Ly(["(",Uy(Ly([Ry,e.call(n,"argument")])),Ry,")"]))):o.push(e.call(n,"argument")),Ly(o);case"UpdateExpression":return o.push(e.call(n,"argument"),s.operator),s.prefix&&o.reverse(),Ly(o);case"ConditionalExpression":return Ah(e,t,n,{beforeParts:()=>[e.call(n,"test")],afterParts:e=>[e?Ry:""],shouldCheckJsx:!0,conditionalNodeType:"ConditionalExpression",consequentNodePropertyName:"consequent",alternateNodePropertyName:"alternate",testNodePropertyNames:["test"]});case"VariableDeclaration":{const t=e.map((e=>n(e)),"declarations"),r=e.getParentNode(),a="ForStatement"===r.type||"ForInStatement"===r.type||"ForOfStatement"===r.type,u=s.declarations.some((e=>e.init));let c;return 1!==t.length||s.declarations[0].comments?t.length>0&&(c=Uy(t[0])):c=t[0],o=[s.declare?"declare ":"",s.kind,c?Ly([" ",c]):"",Uy(Ly(t.slice(1).map((e=>Ly([",",u&&!a?My:_y,e])))))],a&&r.body!==s||o.push(i),qy(Ly(o))}case"TSTypeAliasDeclaration":{s.declare&&o.push("declare ");const r=aC(s.id,s.typeAnnotation,s.typeAnnotation&&e.call(n,"typeAnnotation"),t);return o.push("type ",e.call(n,"id"),e.call(n,"typeParameters")," =",r,i),qy(Ly(o))}case"WithStatement":return qy(Ly(["with (",e.call(n,"object"),")",SE(s.body,e.call(n,"body"))]));case"IfStatement":{const r=SE(s.consequent,e.call(n,"consequent")),i=qy(Ly(["if (",qy(Ly([Uy(Ly([Ry,e.call(n,"test")])),Ry])),")",r]));if(o.push(i),s.alternate){const r=iE(s.consequent)&&s.consequent.comments.some((e=>e.trailing&&!DE(e)))||mE(s),i="BlockStatement"===s.consequent.type&&!r;o.push(i?" ":My),Zy(s)&&o.push(Do.printDanglingComments(e,t,!0),r?My:" "),o.push("else",qy(SE(s.alternate,e.call(n,"alternate"),"IfStatement"===s.alternate.type)))}return Ly(o)}case"ForStatement":{const r=SE(s.body,e.call(n,"body")),i=Do.printDanglingComments(e,t,!0),a=i?Ly([i,Ry]):"";return s.init||s.test||s.update?Ly([a,qy(Ly(["for (",qy(Ly([Uy(Ly([Ry,e.call(n,"init"),";",_y,e.call(n,"test"),";",_y,e.call(n,"update")])),Ry])),")",r]))]):Ly([a,qy(Ly(["for (;;)",r]))])}case"WhileStatement":return qy(Ly(["while (",qy(Ly([Uy(Ly([Ry,e.call(n,"test")])),Ry])),")",SE(s.body,e.call(n,"body"))]));case"ForInStatement":return qy(Ly(["for (",e.call(n,"left")," in ",e.call(n,"right"),")",SE(s.body,e.call(n,"body"))]));case"ForOfStatement":return qy(Ly(["for",s.await?" await":""," (",e.call(n,"left")," of ",e.call(n,"right"),")",SE(s.body,e.call(n,"body"))]));case"DoWhileStatement":{const t=SE(s.body,e.call(n,"body")),r=qy(Ly(["do",t]));return o=[r],"BlockStatement"===s.body.type?o.push(" "):o.push(My),o.push("while ("),o.push(qy(Ly([Uy(Ly([Ry,e.call(n,"test")])),Ry])),")",i),Ly(o)}case"DoExpression":return Ly(["do ",e.call(n,"body")]);case"BreakStatement":return o.push("break"),s.label&&o.push(" ",e.call(n,"label")),o.push(i),Ly(o);case"ContinueStatement":return o.push("continue"),s.label&&o.push(" ",e.call(n,"label")),o.push(i),Ly(o);case"LabeledStatement":return"EmptyStatement"===s.body.type?Ly([e.call(n,"label"),":;"]):Ly([e.call(n,"label"),": ",e.call(n,"body")]);case"TryStatement":return Ly(["try ",e.call(n,"block"),s.handler?Ly([" ",e.call(n,"handler")]):"",s.finalizer?Ly([" finally ",e.call(n,"finalizer")]):""]);case"CatchClause":if(s.param){const r=s.param.comments&&s.param.comments.some((e=>!DE(e)||e.leading&&wy(t.originalText,CE(e))||e.trailing&&wy(t.originalText,EE(e),{backwards:!0}))),i=e.call(n,"param");return Ly(["catch ",Ly(r?["(",Uy(Ly([Ry,i])),Ry,") "]:["(",i,") "]),e.call(n,"body")])}return Ly(["catch ",e.call(n,"body")]);case"SwitchStatement":return Ly([qy(Ly(["switch (",Uy(Ly([Ry,e.call(n,"discriminant")])),Ry,")"]))," {",s.cases.length>0?Uy(Ly([My,Oy(My,e.map((e=>{const r=e.getValue();return Ly([e.call(n),s.cases.indexOf(r)!==s.cases.length-1&&Iy(t.originalText,r,CE)?My:""])}),"cases"))])):"",My,"}"]);case"SwitchCase":{s.test?o.push("case ",e.call(n,"test"),":"):o.push("default:");const r=s.consequent.filter((e=>"EmptyStatement"!==e.type));if(r.length>0){const s=e.call((e=>uC(e,t,n)),"consequent");o.push(1===r.length&&"BlockStatement"===r[0].type?Ly([" ",s]):Uy(Ly([My,s])))}return Ly(o)}case"DebuggerStatement":return Ly(["debugger",i]);case"JSXAttribute":return jE(e,t,n);case"JSXIdentifier":return""+s.name;case"JSXNamespacedName":return Oy(":",[e.call(n,"namespace"),e.call(n,"name")]);case"JSXMemberExpression":return Oy(".",[e.call(n,"object"),e.call(n,"property")]);case"TSQualifiedName":return Oy(".",[e.call(n,"left"),e.call(n,"right")]);case"JSXSpreadAttribute":return zE(e,t,n);case"JSXSpreadChild":return HE(e,t,n);case"JSXExpressionContainer":return VE(e,t,n);case"JSXFragment":case"JSXElement":return RE(e,t,n);case"JSXOpeningElement":return qE(e,t,n);case"JSXClosingElement":return UE(e,t,n);case"JSXOpeningFragment":case"JSXClosingFragment":return $E(e,t);case"JSXText":throw new Error("JSXTest should be handled by JSXElement");case"JSXEmptyExpression":return WE(e,t);case"ClassBody":return s.comments||0!==s.body.length?Ly(["{",s.body.length>0?Uy(Ly([My,e.call((e=>uC(e,t,n)),"body")])):Do.printDanglingComments(e,t),My,"}"]):"{}";case"ClassProperty":case"FieldDefinition":case"TSAbstractClassProperty":case"ClassPrivateProperty":return s.decorators&&0!==s.decorators.length&&o.push(xE(e,t,n)),s.accessibility&&o.push(s.accessibility+" "),s.declare&&o.push("declare "),s.static&&o.push("static "),("TSAbstractClassProperty"===s.type||s.abstract)&&o.push("abstract "),s.readonly&&o.push("readonly "),s.variance&&o.push(e.call(n,"variance")),o.push(KE(e,t,n),AE(e),_E(e,t,n)),s.value&&o.push(" =",aC(s.key,s.value,e.call(n,"value"),t)),o.push(i),qy(Ly(o));case"ClassDeclaration":case"ClassExpression":return s.declare&&o.push("declare "),o.push(GE(e,t,n)),Ly(o);case"TSInterfaceHeritage":case"TSExpressionWithTypeArguments":return o.push(e.call(n,"expression")),s.typeParameters&&o.push(e.call(n,"typeParameters")),Ly(o);case"TemplateElement":return Oy(jy,s.value.raw.split(/\r?\n/g));case"TSTemplateLiteralType":case"TemplateLiteral":return kE(e,n,t);case"TaggedTemplateExpression":return Ly([e.call(n,"tag"),e.call(n,"typeParameters"),e.call(n,"quasi")]);case"Node":case"Printable":case"SourceLocation":case"Position":case"Statement":case"Function":case"Pattern":case"Expression":case"Declaration":case"Specifier":case"NamedSpecifier":case"Comment":case"MemberTypeAnnotation":case"Type":throw new Error("unprintable type: "+JSON.stringify(s.type));case"TypeAnnotation":case"TSTypeAnnotation":return s.typeAnnotation?e.call(n,"typeAnnotation"):"";case"TSNamedTupleMember":return Ly([e.call(n,"label"),s.optional?"?":"",": ",e.call(n,"elementType")]);case"TSTupleType":case"TupleTypeAnnotation":{const r="TSTupleType"===s.type?"elementTypes":"types",i=s[r].length>0&&"TSRestType"===Py(s[r]).type;return qy(Ly(["[",Uy(Ly([Ry,LE(e,t,r,n)])),Wy(yE(t,"all")&&!i?",":""),Do.printDanglingComments(e,t,!0),Ry,"]"]))}case"ExistsTypeAnnotation":return"*";case"EmptyTypeAnnotation":return"empty";case"MixedTypeAnnotation":return"mixed";case"ArrayTypeAnnotation":return Ly([e.call(n,"elementType"),"[]"]);case"BooleanLiteralTypeAnnotation":return""+s.value;case"DeclareClass":return vE(e,GE(e,t,n));case"TSDeclareFunction":return Ly([s.declare?"declare ":"",YE(e,n,t),i]);case"DeclareFunction":return vE(e,Ly(["function ",e.call(n,"id"),s.predicate?" ":"",e.call(n,"predicate"),i]));case"DeclareModule":return vE(e,Ly(["module ",e.call(n,"id")," ",e.call(n,"body")]));case"DeclareModuleExports":return vE(e,Ly(["module.exports",": ",e.call(n,"typeAnnotation"),i]));case"DeclareVariable":return vE(e,Ly(["var ",e.call(n,"id"),i]));case"DeclareOpaqueType":case"OpaqueType":return o.push("opaque type ",e.call(n,"id"),e.call(n,"typeParameters")),s.supertype&&o.push(": ",e.call(n,"supertype")),s.impltype&&o.push(" = ",e.call(n,"impltype")),o.push(i),"DeclareOpaqueType"===s.type?vE(e,Ly(o)):Ly(o);case"EnumDeclaration":return Ly(["enum ",e.call(n,"id")," ",e.call(n,"body")]);case"EnumBooleanBody":case"EnumNumberBody":case"EnumStringBody":case"EnumSymbolBody":if("EnumSymbolBody"===s.type||s.explicitType){let e=null;switch(s.type){case"EnumBooleanBody":e="boolean";break;case"EnumNumberBody":e="number";break;case"EnumStringBody":e="string";break;case"EnumSymbolBody":e="symbol"}o.push("of ",e," ")}if(0!==s.members.length||s.hasUnknownMembers){const r=s.members.length?[My,LE(e,t,"members",n),s.hasUnknownMembers||yE(t)?",":""]:[];o.push(qy(Ly(["{",Uy(Ly([...r,...s.hasUnknownMembers?[My,"..."]:[]])),Do.printDanglingComments(e,t,!0),My,"}"])))}else o.push(qy(Ly(["{",Do.printDanglingComments(e,t),Ry,"}"])));return Ly(o);case"EnumBooleanMember":case"EnumNumberMember":case"EnumStringMember":return Ly([e.call(n,"id")," = ","object"==typeof s.init?e.call(n,"init"):String(s.init)]);case"EnumDefaultedMember":return e.call(n,"id");case"FunctionTypeAnnotation":case"TSFunctionType":{const r=e.getParentNode(0),i=e.getParentNode(1),a=e.getParentNode(2);let u="TSFunctionType"===s.type||!(("ObjectTypeProperty"===r.type||"ObjectTypeInternalSlot"===r.type)&&!r.variance&&!r.optional&&EE(r)===EE(s)||"ObjectTypeCallProperty"===r.type||a&&"DeclareFunction"===a.type),c=u&&("TypeAnnotation"===r.type||"TSTypeAnnotation"===r.type);const l=c&&u&&("TypeAnnotation"===r.type||"TSTypeAnnotation"===r.type)&&"ArrowFunctionExpression"===i.type;return hE(r)&&(u=!0,c=!0),l&&o.push("("),o.push(NE(e,n,t,!1,!0)),(s.returnType||s.predicate||s.typeAnnotation)&&o.push(u?" => ":": ",e.call(n,"returnType"),e.call(n,"predicate"),e.call(n,"typeAnnotation")),l&&o.push(")"),qy(Ly(o))}case"TSRestType":return Ly(["...",e.call(n,"typeAnnotation")]);case"TSOptionalType":return Ly([e.call(n,"typeAnnotation"),"?"]);case"FunctionTypeParam":{const t=s.name?e.call(n,"name"):e.getParentNode().this===s?"this":"";return Ly([t,AE(e),t?": ":"",e.call(n,"typeAnnotation")])}case"DeclareInterface":case"InterfaceDeclaration":case"InterfaceTypeAnnotation":case"TSInterfaceDeclaration":return nC(e,t,n);case"ClassImplements":case"InterfaceExtends":return Ly([e.call(n,"id"),e.call(n,"typeParameters")]);case"TSClassImplements":return Ly([e.call(n,"expression"),e.call(n,"typeParameters")]);case"TSIntersectionType":case"IntersectionTypeAnnotation":{const t=e.map(n,"types"),r=[];let i=!1;for(let e=0;e<t.length;++e)0===e?r.push(t[e]):pE(s.types[e-1])&&pE(s.types[e])?r.push(Ly([" & ",i?Uy(t[e]):t[e]])):pE(s.types[e-1])||pE(s.types[e])?(e>1&&(i=!0),r.push(" & ",e>1?Uy(t[e]):t[e])):r.push(Uy(Ly([" &",_y,t[e]])));return qy(Ly(r))}case"TSUnionType":case"UnionTypeAnnotation":{const r=e.getParentNode(),i=!("TypeParameterInstantiation"===r.type||"TSTypeParameterInstantiation"===r.type||"GenericTypeAnnotation"===r.type||"TSTypeReference"===r.type||"TSTypeAssertion"===r.type||"TupleTypeAnnotation"===r.type||"TSTupleType"===r.type||"FunctionTypeParam"===r.type&&!r.name&&e.getParentNode(1).this!==r||("TypeAlias"===r.type||"VariableDeclarator"===r.type||"TSTypeAliasDeclaration"===r.type)&&tE(t.originalText,s)),a=ME(s),o=e.map((e=>{let r=e.call(n);return a||(r=$y(2,r)),Do.printComments(e,(()=>r),t)}),"types");if(a)return Oy(" | ",o);const u=i&&!tE(t.originalText,s),c=Ly([Wy(Ly([u?_y:"","| "])),Oy(Ly([_y,"| "]),o)]);return xp(e,t)?qy(Ly([Uy(c),Ry])):"TupleTypeAnnotation"===r.type&&r.types.length>1||"TSTupleType"===r.type&&r.elementTypes.length>1?qy(Ly([Uy(Ly([Wy(Ly(["(",Ry])),c])),Ry,Wy(")")])):qy(i?Uy(c):c)}case"NullableTypeAnnotation":return Ly(["?",e.call(n,"typeAnnotation")]);case"Variance":{const{kind:e}=s;return za.ok("plus"===e||"minus"===e),"plus"===e?"+":"-"}case"ObjectTypeCallProperty":return s.static&&o.push("static "),o.push(e.call(n,"value")),Ly(o);case"ObjectTypeIndexer":return Ly([s.variance?e.call(n,"variance"):"","[",e.call(n,"id"),s.id?": ":"",e.call(n,"key"),"]: ",e.call(n,"value")]);case"ObjectTypeProperty":{let r="";return s.proto?r="proto ":s.static&&(r="static "),Ly([r,uE(s)?s.kind+" ":"",s.variance?e.call(n,"variance"):"",KE(e,t,n),AE(e),oE(s)?"":": ",e.call(n,"value")])}case"QualifiedTypeIdentifier":return Ly([e.call(n,"qualification"),".",e.call(n,"id")]);case"StringLiteralTypeAnnotation":return hC(s,t);case"NumberLiteralTypeAnnotation":za.strictEqual(typeof s.value,"number");case"BigIntLiteralTypeAnnotation":return null!=s.extra?ky(s.extra.raw):ky(s.raw);case"DeclareTypeAlias":case"TypeAlias":{("DeclareTypeAlias"===s.type||s.declare)&&o.push("declare ");const r=aC(s.id,s.right,e.call(n,"right"),t);return o.push("type ",e.call(n,"id"),e.call(n,"typeParameters")," =",r,i),qy(Ly(o))}case"TypeCastExpression":return Ly(["(",e.call(n,"expression"),_E(e,t,n),")"]);case"TypeParameterDeclaration":case"TypeParameterInstantiation":{const r=JE(e,t,n,"params");if("flow"===t.parser){const e=EE(s),n=CE(s),i=t.originalText.lastIndexOf("/*",e),a=t.originalText.indexOf("*/",n);if(-1!==i&&-1!==a){const e=t.originalText.slice(i+2,a).trim();if(e.startsWith("::")&&!e.includes("/*")&&!e.includes("*/"))return Ly(["/*:: ",r," */"])}}return r}case"TSTypeParameterDeclaration":case"TSTypeParameterInstantiation":return JE(e,t,n,"params");case"TSTypeParameter":case"TypeParameter":{const r=e.getParentNode();if("TSMappedType"===r.type)return o.push("[",e.call(n,"name")),s.constraint&&o.push(" in ",e.call(n,"constraint")),r.nameType&&o.push(" as ",e.callParent((e=>e.call(n,"nameType")))),o.push("]"),Ly(o);s.variance&&o.push(e.call(n,"variance")),o.push(e.call(n,"name")),s.bound&&(o.push(": "),o.push(e.call(n,"bound"))),s.constraint&&o.push(" extends ",e.call(n,"constraint")),s.default&&o.push(" = ",e.call(n,"default"));const i=e.getNode(2);return 1===Jy(r).length&&fE(t)&&!s.constraint&&"ArrowFunctionExpression"===i.type&&o.push(","),Ly(o)}case"TypeofTypeAnnotation":return Ly(["typeof ",e.call(n,"argument")]);case"InferredPredicate":return"%checks";case"DeclaredPredicate":return Ly(["%checks(",e.call(n,"value"),")"]);case"TSAbstractKeyword":return"abstract";case"AnyTypeAnnotation":case"TSAnyKeyword":return"any";case"TSAsyncKeyword":return"async";case"BooleanTypeAnnotation":case"TSBooleanKeyword":return"boolean";case"BigIntTypeAnnotation":case"TSBigIntKeyword":return"bigint";case"TSConstKeyword":return"const";case"TSDeclareKeyword":return"declare";case"TSExportKeyword":return"export";case"NullLiteralTypeAnnotation":case"TSNullKeyword":return"null";case"TSNeverKeyword":return"never";case"NumberTypeAnnotation":case"TSNumberKeyword":return"number";case"TSObjectKeyword":return"object";case"TSProtectedKeyword":return"protected";case"TSPrivateKeyword":return"private";case"TSPublicKeyword":return"public";case"TSReadonlyKeyword":return"readonly";case"SymbolTypeAnnotation":case"TSSymbolKeyword":return"symbol";case"TSStaticKeyword":return"static";case"StringTypeAnnotation":case"TSStringKeyword":return"string";case"TSUndefinedKeyword":return"undefined";case"TSUnknownKeyword":return"unknown";case"VoidTypeAnnotation":case"TSVoidKeyword":return"void";case"TSAsExpression":return Ly([e.call(n,"expression")," as ",e.call(n,"typeAnnotation")]);case"TSArrayType":return Ly([e.call(n,"elementType"),"[]"]);case"TSPropertySignature":return s.export&&o.push("export "),s.accessibility&&o.push(s.accessibility+" "),s.static&&o.push("static "),s.readonly&&o.push("readonly "),o.push(KE(e,t,n),AE(e)),s.typeAnnotation&&(o.push(": "),o.push(e.call(n,"typeAnnotation"))),s.initializer&&o.push(" = ",e.call(n,"initializer")),Ly(o);case"TSParameterProperty":return s.accessibility&&o.push(s.accessibility+" "),s.export&&o.push("export "),s.static&&o.push("static "),s.readonly&&o.push("readonly "),o.push(e.call(n,"parameter")),Ly(o);case"GenericTypeAnnotation":case"TSTypeReference":return Ly([e.call(n,"TSTypeReference"===s.type?"typeName":"id"),JE(e,t,n,"typeParameters")]);case"TSTypeQuery":return Ly(["typeof ",e.call(n,"exprName")]);case"TSIndexSignature":{const r=e.getParentNode(),a=s.parameters.length>1?Wy(yE(t)?",":""):"",o=qy(Ly([Uy(Ly([Ry,Oy(Ly([", ",Ry]),e.map(n,"parameters"))])),a,Ry]));return Ly([s.export?"export ":"",s.accessibility?Ly([s.accessibility," "]):"",s.static?"static ":"",s.readonly?"readonly ":"",s.declare?"declare ":"","[",s.parameters?o:"",s.typeAnnotation?"]: ":"]",s.typeAnnotation?e.call(n,"typeAnnotation"):"","ClassBody"===r.type?i:""])}case"TSTypePredicate":return Ly([s.asserts?"asserts ":"",e.call(n,"parameterName"),s.typeAnnotation?Ly([" is ",e.call(n,"typeAnnotation")]):""]);case"TSNonNullExpression":return Ly([e.call(n,"expression"),"!"]);case"ThisTypeAnnotation":case"TSThisType":return"this";case"TSImportType":return Ly([s.isTypeOf?"typeof ":"","import(",e.call(n,s.parameter?"parameter":"argument"),")",s.qualifier?Ly([".",e.call(n,"qualifier")]):"",JE(e,t,n,"typeParameters")]);case"TSLiteralType":return e.call(n,"literal");case"TSIndexedAccessType":return Ly([e.call(n,"objectType"),"[",e.call(n,"indexType"),"]"]);case"TSConstructSignatureDeclaration":case"TSCallSignatureDeclaration":case"TSConstructorType":if("TSCallSignatureDeclaration"!==s.type&&o.push("new "),o.push(qy(NE(e,n,t,!1,!0))),s.returnType||s.typeAnnotation){const t="TSConstructorType"===s.type;o.push(t?" => ":": ",e.call(n,"returnType"),e.call(n,"typeAnnotation"))}return Ly(o);case"TSTypeOperator":return Ly([s.operator," ",e.call(n,"typeAnnotation")]);case"TSMappedType":{const r=By(t.originalText,EE(s),CE(s));return qy(Ly(["{",Uy(Ly([t.bracketSpacing?_y:Ry,s.readonly?Ly([Qy(s.readonly,"readonly")," "]):"",FE(e,t,n),e.call(n,"typeParameter"),s.optional?Qy(s.optional,"?"):"",s.typeAnnotation?": ":"",e.call(n,"typeAnnotation"),Wy(i,"")])),Do.printDanglingComments(e,t,!0),t.bracketSpacing?_y:Ry,"}"]),{shouldBreak:r})}case"TSMethodSignature":return o.push(s.accessibility?Ly([s.accessibility," "]):"",s.export?"export ":"",s.static?"static ":"",s.readonly?"readonly ":"",s.computed?"[":"",e.call(n,"key"),s.computed?"]":"",AE(e),NE(e,n,t,!1,!0)),(s.returnType||s.typeAnnotation)&&o.push(": ",e.call(n,"returnType"),e.call(n,"typeAnnotation")),qy(Ly(o));case"TSNamespaceExportDeclaration":return o.push("export as namespace ",e.call(n,"id")),t.semi&&o.push(";"),qy(Ly(o));case"TSEnumDeclaration":return s.declare&&o.push("declare "),s.modifiers&&o.push(FE(e,t,n)),s.const&&o.push("const "),o.push("enum ",e.call(n,"id")," "),0===s.members.length?o.push(qy(Ly(["{",Do.printDanglingComments(e,t),Ry,"}"]))):o.push(qy(Ly(["{",Uy(Ly([My,LE(e,t,"members",n),yE(t,"es5")?",":""])),Do.printDanglingComments(e,t,!0),My,"}"]))),Ly(o);case"TSEnumMember":return o.push(e.call(n,"id")),s.initializer&&o.push(" = ",e.call(n,"initializer")),Ly(o);case"TSImportEqualsDeclaration":return s.isExport&&o.push("export "),o.push("import ",e.call(n,"id")," = ",e.call(n,"moduleReference")),t.semi&&o.push(";"),qy(Ly(o));case"TSExternalModuleReference":return Ly(["require(",e.call(n,"expression"),")"]);case"TSModuleDeclaration":{const r=e.getParentNode(),a=cE(s.id),u="TSModuleDeclaration"===r.type,c=s.body&&"TSModuleDeclaration"===s.body.type;if(u)o.push(".");else{s.declare&&o.push("declare "),o.push(FE(e,t,n));const r=t.originalText.slice(EE(s),EE(s.id));"Identifier"===s.id.type&&"global"===s.id.name&&!/namespace|module/.test(r)||o.push(a||/(^|\s)module(\s|$)/.test(r)?"module ":"namespace ")}return o.push(e.call(n,"id")),c?o.push(e.call(n,"body")):s.body?o.push(" ",qy(e.call(n,"body"))):o.push(i),Ly(o)}case"PrivateName":return Ly(["#",e.call(n,s.id?"id":"name")]);case"TSPrivateIdentifier":return s.escapedText;case"TSConditionalType":return Ah(e,t,n,{beforeParts:()=>[e.call(n,"checkType")," ","extends"," ",e.call(n,"extendsType")],afterParts:()=>[],shouldCheckJsx:!1,conditionalNodeType:"TSConditionalType",consequentNodePropertyName:"trueType",alternateNodePropertyName:"falseType",testNodePropertyNames:["checkType","extendsType"]});case"TSInferType":return Ly(["infer"," ",e.call(n,"typeParameter")]);case"InterpreterDirective":return o.push("#!",s.value,My),Iy(t.originalText,s,CE)&&o.push(My),Ly(o);case"NGRoot":return Ly([].concat(e.call(n,"node"),s.node.comments&&0!==s.node.comments.length?Ly([" //",s.node.comments[0].value.trimEnd()]):[]));case"NGChainedExpression":return qy(Oy(Ly([";",_y]),e.map((e=>rE(e)?n(e):Ly(["(",n(e),")"])),"expressions")));case"NGEmptyExpression":return"";case"NGQuotedExpression":return Ly([s.prefix,": ",s.value.trim()]);case"NGMicrosyntax":return Ly(e.map(((e,t)=>Ly([0===t?"":lE(e.getValue(),t,s)?" ":Ly([";",_y]),n(e)])),"body"));case"NGMicrosyntaxKey":return/^[$_a-z][\w$]*(-[$_a-z][\w$])*$/i.test(s.name)?s.name:JSON.stringify(s.name);case"NGMicrosyntaxExpression":return Ly([e.call(n,"expression"),null===s.alias?"":Ly([" as ",e.call(n,"alias")])]);case"NGMicrosyntaxKeyedExpression":{const t=e.getName(),r=e.getParentNode(),i=lE(s,t,r)||(1===t&&("then"===s.key.name||"else"===s.key.name)||2===t&&"else"===s.key.name&&"NGMicrosyntaxKeyedExpression"===r.body[t-1].type&&"then"===r.body[t-1].key.name)&&"NGMicrosyntaxExpression"===r.body[0].type;return Ly([e.call(n,"key"),i?" ":": ",e.call(n,"expression")])}case"NGMicrosyntaxLet":return Ly(["let ",e.call(n,"key"),null===s.value?"":Ly([" = ",e.call(n,"value")])]);case"NGMicrosyntaxAs":return Ly([e.call(n,"key")," as ",e.call(n,"alias")]);case"PipelineBareFunction":return e.call(n,"callee");case"PipelineTopicExpression":return e.call(n,"expression");case"PipelinePrimaryTopicReference":return o.push("#"),Ly(o);case"ArgumentPlaceholder":return"?";case"TSJSDocAllType":return"*";case"TSJSDocUnknownType":return"?";case"TSJSDocNullableType":return Ly(["?",e.call(n,"typeAnnotation")]);case"TSJSDocNonNullableType":return Ly(["!",e.call(n,"typeAnnotation")]);case"TSJSDocFunctionType":return Ly(["function(","): ",e.call(n,"typeAnnotation")]);default:throw new Error("unknown type: "+JSON.stringify(s.type))}}(e,t,n,r);if(!s||zy(a))return a;const o=Yy(e),u=[];if("ClassMethod"===s.type||"ClassPrivateMethod"===s.type||"ClassProperty"===s.type||"FieldDefinition"===s.type||"TSAbstractClassProperty"===s.type||"ClassPrivateProperty"===s.type||"MethodDefinition"===s.type||"TSAbstractMethodDefinition"===s.type||"TSDeclareMethod"===s.type);else if(s.decorators&&s.decorators.length>0&&!(o&&EE(o,{ignoreDecorators:!0})>EE(s.decorators[0]))){const r="ClassExpression"===s.type||"ClassDeclaration"===s.type||nE(s,t)?My:_y;e.each((e=>{let t=e.getValue();t=t.expression?t.expression:t.callee,u.push(n(e),r)}),"decorators"),o&&u.unshift(My)}else aE(s)&&s.declaration&&s.declaration.decorators&&s.declaration.decorators.length>0&&EE(s,{ignoreDecorators:!0})>EE(s.declaration.decorators[0])?e.each((e=>{const t="Decorator"===e.getValue().type?"":"@";u.push(t,n(e),My)}),"declaration","decorators"):i=xp(e,t);const c=[];if(i&&c.unshift("("),c.push(a),i){const t=e.getValue();eE(t)&&(c.push(" /*"),c.push(t.trailingComments[0].value.trimStart()),c.push("*/"),t.trailingComments[0].printed=!0),c.push(")")}return u.length>0?qy(Ly(u.concat(c))):Ly(c)},embed:function(e,t,n,r){const s=e.getValue();if("TemplateLiteral"!==s.type||function({quasis:e}){return e.some((({value:{cooked:e}})=>null===e))}(s))return;const i=function(e){return function(e){const t=e.getValue(),n=e.getParentNode(),r=e.getParentNode(1);return r&&t.quasis&&"JSXExpressionContainer"===n.type&&"JSXElement"===r.type&&"style"===r.openingElement.name.name&&r.openingElement.attributes.some((e=>"jsx"===e.name.name))||n&&"TaggedTemplateExpression"===n.type&&"Identifier"===n.tag.type&&"css"===n.tag.name||n&&"TaggedTemplateExpression"===n.type&&"MemberExpression"===n.tag.type&&"css"===n.tag.object.name&&("global"===n.tag.property.name||"resolve"===n.tag.property.name)}(e)||function(e){const t=e.getParentNode();if(!t||"TaggedTemplateExpression"!==t.type)return!1;const{tag:n}=t;switch(n.type){case"MemberExpression":return Xl(n.object)||Jl(n);case"CallExpression":return Xl(n.callee)||"MemberExpression"===n.callee.type&&("MemberExpression"===n.callee.object.type&&(Xl(n.callee.object.object)||Jl(n.callee.object))||"CallExpression"===n.callee.object.type&&Xl(n.callee.object.callee));case"Identifier":return"css"===n.name;default:return!1}}(e)||function(e){const t=e.getParentNode(),n=e.getParentNode(1);return n&&"JSXExpressionContainer"===t.type&&"JSXAttribute"===n.type&&"JSXIdentifier"===n.name.type&&"css"===n.name.name}(e)||function(e){return e.match((e=>"TemplateLiteral"===e.type),((e,t)=>"ArrayExpression"===e.type&&"elements"===t),((e,t)=>("Property"===e.type||"ObjectProperty"===e.type)&&"Identifier"===e.key.type&&"styles"===e.key.name&&"value"===t),...Gl)}(e)?"css":function(e){const t=e.getValue(),n=e.getParentNode();return Kl(t,"GraphQL")||n&&("TaggedTemplateExpression"===n.type&&("MemberExpression"===n.tag.type&&"graphql"===n.tag.object.name&&"experimental"===n.tag.property.name||"Identifier"===n.tag.type&&("gql"===n.tag.name||"graphql"===n.tag.name))||"CallExpression"===n.type&&"Identifier"===n.callee.type&&"graphql"===n.callee.name)}(e)?"graphql":function(e){return Kl(e.getValue(),"HTML")||e.match((e=>"TemplateLiteral"===e.type),((e,t)=>"TaggedTemplateExpression"===e.type&&"Identifier"===e.tag.type&&"html"===e.tag.name&&"quasi"===t))}(e)?"html":function(e){return e.match((e=>"TemplateLiteral"===e.type),((e,t)=>("Property"===e.type||"ObjectProperty"===e.type)&&"Identifier"===e.key.type&&"template"===e.key.name&&"value"===t),...Gl)}(e)?"angular":function(e){const t=e.getValue(),n=e.getParentNode();return n&&"TaggedTemplateExpression"===n.type&&1===t.quasis.length&&"Identifier"===n.tag.type&&("md"===n.tag.name||"markdown"===n.tag.name)}(e)?"markdown":void 0}(e);return i?"markdown"===i?function(e,t,n){let r=e.getValue().quasis[0].value.raw.replace(/((?:\\\\)*)\\`/g,((e,t)=>"\\".repeat(t.length/2)+"`"));const s=function(e){const t=e.match(/^([^\S\n]*)\S/m);return null===t?"":t[1]}(r),i=""!==s;i&&(r=r.replace(new RegExp("^".concat(s),"gm"),""));const a=Al(n(r,{parser:"markdown",__inJsTemplate:!0},{stripTrailingHardline:!0}),!0);return El(["`",i?ml(El([gl,a])):El([yl,Cl(a)]),gl,"`"])}(e,0,n):"css"===i?function(e,t,n){const r=e.getValue(),s=r.quasis.map((e=>e.value.raw));let i=0;return function(e,t,n){if(1===t.quasis.length&&!t.quasis[0].value.raw.trim())return"``";const r=function(e,t){if(!t||!t.length)return e;let n=0;const r=Sl(e,(e=>{if(!e||!e.parts||!e.parts.length)return e;let{parts:r}=e;const s=r.indexOf("@"),i=s+1;if(s>-1&&"string"==typeof r[i]&&r[i].startsWith("prettier-placeholder")){const e=r[s],t=r[i],n=r.slice(i+1);r=r.slice(0,s).concat([e+t]).concat(n)}const a=[];return r.forEach((e=>{"string"==typeof e&&e.includes("@prettier-placeholder")?e.split(/@prettier-placeholder-(\d+)-id/).forEach(((e,r)=>{r%2!=0?(a.push(t[e]),n++):a.push(Tl(e))})):a.push(e)})),Object.assign({},e,{parts:a})}));return t.length===n?r:null}(e,n);if(!r)throw new Error("Couldn't insert all the expressions");return vl(["`",bl(vl([Fl,r])),xl,"`"])}(n(s.reduce(((e,t,n)=>0===n?t:e+"@prettier-placeholder-"+i+++"-id"+t),""),{parser:"scss"},{stripTrailingHardline:!0}),r,wl(e,t))}(e,t,n):"graphql"===i?function(e,t,n){const r=e.getValue(),s=r.quasis.length;if(1===s&&""===r.quasis[0].value.raw.trim())return"``";const i=Ll(e,t),a=[];for(let e=0;e<s;e++){const t=0===e,o=e===s-1,u=r.quasis[e].value.cooked,c=u.split("\n"),l=c.length,p=i[e],h=l>2&&""===c[0].trim()&&""===c[1].trim(),d=l>2&&""===c[l-1].trim()&&""===c[l-2].trim(),f=c.every((e=>/^\s*(?:#[^\n\r]*)?$/.test(e)));if(!o&&/#[^\n\r]*$/.test(c[l-1]))return null;let D=null;D=f?Ol(c):n(u,{parser:"graphql"},{stripTrailingHardline:!0}),D?(D=Il(D,!1),!t&&h&&a.push(""),a.push(D),!o&&d&&a.push("")):t||o||!h||a.push(""),p&&a.push(p)}return kl(["`",Bl(kl([Nl,Pl(Nl,a)])),Nl,"`"])}(e,t,n):"html"===i||"angular"===i?function(e,t,n,r,{parser:s}){const i=e.getValue(),a=Wl;Wl=Wl+1>>>0;const o=e=>"PRETTIER_HTML_PLACEHOLDER_".concat(e,"_").concat(a,"_IN_JS"),u=i.quasis.map(((e,t,n)=>t===n.length-1?e.value.cooked:e.value.cooked+o(t))).join(""),c=$l(e,t);if(0===c.length&&0===u.trim().length)return"``";const l=new RegExp(o("(\\d+)"),"g");let p=0;const h=n(u,{parser:s,__onHtmlRoot(e){p=e.children.length}},{stripTrailingHardline:!0}),d=Ul(h,(e=>{if("string"!=typeof e)return e;const t=[],n=e.split(l);for(let e=0;e<n.length;e++){let s=n[e];if(e%2==0){s&&(s=Vl(s),r.embeddedInHtml&&(s=s.replace(/<\/(script)\b/gi,"<\\/$1")),t.push(s));continue}const i=+s;t.push(c[i])}return jl(t)})),f=/^\s/.test(u)?" ":"",D=/\s$/.test(u)?" ":"",m="ignore"===r.htmlWhitespaceSensitivity?Rl:f&&D?Ml:null;return ql(jl(m?["`",_l(jl([m,ql(d)])),m,"`"]:["`",f,p>1?_l(ql(d)):ql(d),D,"`"]))}(e,t,n,r,{parser:i}):void 0:void 0},insertPragma:Hy,massageAstNode:ep,hasPrettierIgnore:sE,willPrintOwnComments:Yc.willPrintOwnComments,canAttachComment:function(e){return e.type&&"CommentBlock"!==e.type&&"CommentLine"!==e.type&&"Line"!==e.type&&"Block"!==e.type&&"EmptyStatement"!==e.type&&"TemplateElement"!==e.type&&"Import"!==e.type},printComment:pC,isBlockComment:DE,handleComments:{ownLine:Yc.handleOwnLineComment,endOfLine:Yc.handleEndOfLineComment,remaining:Yc.handleRemainingComment},getGapRegex:Yc.getGapRegex,getCommentChildNodes:Yc.getCommentChildNodes};const{builders:{concat:DC,hardline:mC,indent:gC,join:yC}}=cn,EC=new Set(["start","end","extra","loc","comments","errors","range"]);function CC(e,t){const{type:n}=e;return"Identifier"===n?{type:"StringLiteral",value:e.name}:"UnaryExpression"===n&&"+"===e.operator?t.argument:void 0}CC.ignoredProperties=EC;var AC={preprocess:kp,print:function(e,t,n){const r=e.getValue();switch(r.type){case"JsonRoot":return DC([e.call(n,"node"),mC]);case"ArrayExpression":return 0===r.elements.length?"[]":DC(["[",gC(DC([mC,yC(DC([",",mC]),e.map(n,"elements"))])),mC,"]"]);case"ObjectExpression":return 0===r.properties.length?"{}":DC(["{",gC(DC([mC,yC(DC([",",mC]),e.map(n,"properties"))])),mC,"}"]);case"ObjectProperty":return DC([e.call(n,"key"),": ",e.call(n,"value")]);case"UnaryExpression":return DC(["+"===r.operator?"":r.operator,e.call(n,"argument")]);case"NullLiteral":return"null";case"BooleanLiteral":return r.value?"true":"false";case"StringLiteral":case"NumericLiteral":return JSON.stringify(r.value);case"Identifier":return JSON.stringify(r.name);default:throw new Error("unknown type: "+JSON.stringify(r.type))}},massageAstNode:CC};const bC="Common";var FC={bracketSpacing:{since:"0.0.0",category:bC,type:"boolean",default:!0,description:"Print spaces between brackets.",oppositeDescription:"Do not print spaces between brackets."},singleQuote:{since:"0.0.0",category:bC,type:"boolean",default:!1,description:"Use single quotes instead of double quotes."},proseWrap:{since:"1.8.2",category:bC,type:"choice",default:[{since:"1.8.2",value:!0},{since:"1.9.0",value:"preserve"}],description:"How to wrap prose.",choices:[{since:"1.9.0",value:"always",description:"Wrap prose if it exceeds the print width."},{since:"1.9.0",value:"never",description:"Do not wrap prose."},{since:"1.9.0",value:"preserve",description:"Wrap prose as-is."}]}};const xC="JavaScript";var vC={arrowParens:{since:"1.9.0",category:xC,type:"choice",default:[{since:"1.9.0",value:"avoid"},{since:"2.0.0",value:"always"}],description:"Include parentheses around a sole arrow function parameter.",choices:[{value:"always",description:"Always include parens. Example: `(x) => x`"},{value:"avoid",description:"Omit parens when possible. Example: `x => x`"}]},bracketSpacing:FC.bracketSpacing,jsxBracketSameLine:{since:"0.17.0",category:xC,type:"boolean",default:!1,description:"Put > on the last line instead of at a new line."},semi:{since:"1.0.0",category:xC,type:"boolean",default:!0,description:"Print semicolons.",oppositeDescription:"Do not print semicolons, except at the beginning of lines which may need them."},singleQuote:FC.singleQuote,jsxSingleQuote:{since:"1.15.0",category:xC,type:"boolean",default:!1,description:"Use single quotes in JSX."},quoteProps:{since:"1.17.0",category:xC,type:"choice",default:"as-needed",description:"Change when properties in objects are quoted.",choices:[{value:"as-needed",description:"Only add quotes around object properties where required."},{value:"consistent",description:"If at least one property in an object requires quotes, quote all properties."},{value:"preserve",description:"Respect the input use of quotes in object properties."}]},trailingComma:{since:"0.0.0",category:xC,type:"choice",default:[{since:"0.0.0",value:!1},{since:"0.19.0",value:"none"},{since:"2.0.0",value:"es5"}],description:"Print trailing commas wherever possible when multi-line.",choices:[{value:"es5",description:"Trailing commas where valid in ES5 (objects, arrays, etc.)"},{value:"none",description:"No trailing commas."},{value:"all",description:"Trailing commas wherever possible (including function arguments)."}]}},SC={name:"JavaScript",type:"programming",tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"text/javascript",color:"#f1e05a",aliases:["js","node"],extensions:[".js","._js",".bones",".cjs",".es",".es6",".frag",".gs",".jake",".jsb",".jscad",".jsfl",".jsm",".jss",".mjs",".njs",".pac",".sjs",".ssjs",".xsjs",".xsjslib"],filenames:["Jakefile"],interpreters:["chakra","d8","gjs","js","node","nodejs","qjs","rhino","v8","v8-shell"],languageId:183},TC={name:"JSON",type:"data",tmScope:"source.json",aceMode:"json",codemirrorMode:"javascript",codemirrorMimeType:"application/json",searchable:!1,extensions:[".json",".avsc",".geojson",".gltf",".har",".ice",".JSON-tmLanguage",".jsonl",".mcmeta",".tfstate",".tfstate.backup",".topojson",".webapp",".webmanifest",".yy",".yyp"],filenames:[".arcconfig",".htmlhintrc",".tern-config",".tern-project",".watchmanconfig","composer.lock","mcmod.info"],languageId:174},wC={languages:[bu(SC,(e=>({since:"0.0.0",parsers:["babel","espree","meriyah","babel-flow","babel-ts","flow","typescript"],vscodeLanguageIds:["javascript","mongo"],extensions:[...e.extensions,".wxs"]}))),bu(SC,(()=>({name:"Flow",since:"0.0.0",parsers:["flow","babel-flow"],vscodeLanguageIds:["javascript"],aliases:[],filenames:[],extensions:[".js.flow"]}))),bu({name:"JSX",type:"programming",group:"JavaScript",extensions:[".jsx"],tmScope:"source.js.jsx",aceMode:"javascript",codemirrorMode:"jsx",codemirrorMimeType:"text/jsx",languageId:178},(()=>({since:"0.0.0",parsers:["babel","babel-flow","babel-ts","flow","typescript","espree","meriyah"],vscodeLanguageIds:["javascriptreact"]}))),bu({name:"TypeScript",type:"programming",color:"#2b7489",aliases:["ts"],interpreters:["deno","ts-node"],extensions:[".ts"],tmScope:"source.ts",aceMode:"typescript",codemirrorMode:"javascript",codemirrorMimeType:"application/typescript",languageId:378},(()=>({since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescript"]}))),bu({name:"TSX",type:"programming",group:"TypeScript",extensions:[".tsx"],tmScope:"source.tsx",aceMode:"javascript",codemirrorMode:"jsx",codemirrorMimeType:"text/jsx",languageId:94901924},(()=>({since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescriptreact"]}))),bu(TC,(()=>({name:"JSON.stringify",since:"1.13.0",parsers:["json-stringify"],vscodeLanguageIds:["json"],extensions:[],filenames:["package.json","package-lock.json","composer.json"]}))),bu(TC,(e=>({since:"1.5.0",parsers:["json"],vscodeLanguageIds:["json"],filenames:[...e.filenames,".prettierrc"],extensions:e.extensions.filter((e=>".jsonl"!==e))}))),bu({name:"JSON with Comments",type:"data",group:"JSON",tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"text/javascript",aliases:["jsonc"],extensions:[".jsonc",".sublime-build",".sublime-commands",".sublime-completions",".sublime-keymap",".sublime-macro",".sublime-menu",".sublime-mousemap",".sublime-project",".sublime-settings",".sublime-theme",".sublime-workspace",".sublime_metrics",".sublime_session"],filenames:[".babelrc",".eslintrc.json",".jscsrc",".jshintrc",".jslintrc","devcontainer.json","jsconfig.json","language-configuration.json","tsconfig.json","tslint.json"],languageId:423},(e=>({since:"1.5.0",parsers:["json"],vscodeLanguageIds:["jsonc"],filenames:[...e.filenames,".eslintrc"]}))),bu({name:"JSON5",type:"data",extensions:[".json5"],tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"application/json",languageId:175},(()=>({since:"1.13.0",parsers:["json5"],vscodeLanguageIds:["json5"]})))],options:vC,printers:{estree:fC,"estree-json":AC},parsers:{get babel(){return{}.parsers.babel},get"babel-flow"(){return{}.parsers["babel-flow"]},get"babel-ts"(){return{}.parsers["babel-ts"]},get json(){return{}.parsers.json},get json5(){return{}.parsers.json5},get"json-stringify"(){return{}.parsers["json-stringify"]},get __js_expression(){return{}.parsers.__js_expression},get __vue_expression(){return{}.parsers.__vue_expression},get __vue_event_binding(){return{}.parsers.__vue_event_binding},get flow(){return{}.parsers.flow},get typescript(){return{}.parsers.typescript},get __ng_action(){return{}.parsers.__ng_action},get __ng_binding(){return{}.parsers.__ng_binding},get __ng_interpolation(){return{}.parsers.__ng_interpolation},get __ng_directive(){return{}.parsers.__ng_directive},get espree(){return{}.parsers.espree},get meriyah(){return{}.parsers.meriyah}}};const{isFrontMatterNode:BC}=Ot,PC=new Set(["raw","raws","sourceIndex","source","before","after","trailingComma"]);function NC(e,t,n){if(BC(e)&&"yaml"===e.lang&&delete t.value,"css-comment"===e.type&&"css-root"===n.type&&0!==n.nodes.length){if((n.nodes[0]===e||BC(n.nodes[0])&&n.nodes[1]===e)&&(delete t.text,/^\*\s*@(format|prettier)\s*$/.test(e.text)))return null;if("css-root"===n.type&&ue(n.nodes)===e)return null}if("value-root"===e.type&&delete t.text,"media-query"!==e.type&&"media-query-list"!==e.type&&"media-feature-expression"!==e.type||delete t.value,"css-rule"===e.type&&delete t.params,"selector-combinator"===e.type&&(t.value=t.value.replace(/\s+/g," ")),"media-feature"===e.type&&(t.value=t.value.replace(/ /g,"")),("value-word"===e.type&&(e.isColor&&e.isHex||["initial","inherit","unset","revert"].includes(t.value.replace().toLowerCase()))||"media-feature"===e.type||"selector-root-invalid"===e.type||"selector-pseudo"===e.type)&&(t.value=t.value.toLowerCase()),"css-decl"===e.type&&(t.prop=t.prop.toLowerCase()),"css-atrule"!==e.type&&"css-import"!==e.type||(t.name=t.name.toLowerCase()),"value-number"===e.type&&(t.unit=t.unit.toLowerCase()),"media-feature"!==e.type&&"media-keyword"!==e.type&&"media-type"!==e.type&&"media-unknown"!==e.type&&"media-url"!==e.type&&"media-value"!==e.type&&"selector-attribute"!==e.type&&"selector-string"!==e.type&&"selector-class"!==e.type&&"selector-combinator"!==e.type&&"value-string"!==e.type||!t.value||(t.value=t.value.replace(/'/g,'"').replace(/\\([^\dA-Fa-f])/g,"$1")),"selector-attribute"===e.type&&(t.attribute=t.attribute.trim(),t.namespace&&"string"==typeof t.namespace&&(t.namespace=t.namespace.trim(),0===t.namespace.length&&(t.namespace=!0)),t.value&&(t.value=t.value.trim().replace(/^["']|["']$/g,""),delete t.quoted)),"media-value"!==e.type&&"media-type"!==e.type&&"value-number"!==e.type&&"selector-root-invalid"!==e.type&&"selector-class"!==e.type&&"selector-combinator"!==e.type&&"selector-tag"!==e.type||!t.value||(t.value=t.value.replace(/([\d+.Ee-]+)([A-Za-z]*)/g,((e,t,n)=>{const r=Number(t);return isNaN(r)?e:r+n.toLowerCase()}))),"selector-tag"===e.type){const n=e.value.toLowerCase();["from","to"].includes(n)&&(t.value=n)}"css-atrule"===e.type&&"supports"===e.name.toLowerCase()&&delete t.value,"selector-unknown"===e.type&&delete t.value}NC.ignoredProperties=PC;var kC=NC;const{builders:{hardline:IC,concat:LC,markAsRoot:OC}}=cn,_C={"---":"yaml","+++":"toml"};var MC={parse:function(e){const t=Object.keys(_C).map(oe).join("|"),n=e.match(new RegExp("^(".concat(t,")([^\\n]*)\\n(?:([\\s\\S]*?)\\n)?\\1[^\\n\\S]*(\\n|$)")));if(null===n)return{frontMatter:null,content:e};const[r,s,i,a]=n;let o=_C[s];return"toml"!==o&&i&&i.trim()&&(o=i.trim()),{frontMatter:{type:"front-matter",lang:o,value:a,raw:r.replace(/\n$/,"")},content:r.replace(/[^\n]/g," ")+e.slice(r.length)}},print:function(e,t){if("yaml"===e.lang){const n=e.value.trim(),r=n?t(n,{parser:"yaml"},{stripTrailingHardline:!0}):"";return OC(LC(["---",IC,r,r?IC:"","---"]))}}};const{builders:{hardline:RC,concat:jC}}=cn,{print:qC}=MC;const{parse:UC}=MC;var $C={hasPragma:function(e){return pp.hasPragma(UC(e).content)},insertPragma:function(e){const{frontMatter:t,content:n}=UC(e);return(t?t.raw+"\n\n":"")+pp.insertPragma(n)}};const VC=new Set(["red","green","blue","alpha","a","rgb","hue","h","saturation","s","lightness","l","whiteness","w","blackness","b","tint","shade","blend","blenda","contrast","hsl","hsla","hwb","hwba"]);function WC(e,t){const n=[].concat(t);let r,s=-1;for(;r=e.getParentNode(++s);)if(n.includes(r.type))return s;return-1}function zC(e,t){const n=WC(e,t);return-1===n?null:e.getParentNode(n)}function HC(e){return"value-operator"===e.type&&"*"===e.value}function GC(e){return"value-operator"===e.type&&"/"===e.value}function XC(e){return"value-operator"===e.type&&"+"===e.value}function JC(e){return"value-operator"===e.type&&"-"===e.value}function KC(e){return"value-operator"===e.type&&"%"===e.value}function YC(e){return"value-comma_group"===e.type&&e.groups&&e.groups[1]&&"value-colon"===e.groups[1].type}function QC(e){return"value-paren_group"===e.type&&e.groups&&e.groups[0]&&YC(e.groups[0])}var ZC={getAncestorCounter:WC,getAncestorNode:zC,getPropOfDeclNode:function(e){const t=zC(e,"css-decl");return t&&t.prop&&t.prop.toLowerCase()},hasSCSSInterpolation:function(e){if(e&&e.length)for(let t=e.length-1;t>0;t--)if("word"===e[t].type&&"{"===e[t].value&&"word"===e[t-1].type&&e[t-1].value.endsWith("#"))return!0;return!1},hasStringOrFunction:function(e){if(e&&e.length)for(let t=0;t<e.length;t++)if("string"===e[t].type||"func"===e[t].type)return!0;return!1},maybeToLowerCase:function(e){return e.includes("$")||e.includes("@")||e.includes("#")||e.startsWith("%")||e.startsWith("--")||e.startsWith(":--")||e.includes("(")&&e.includes(")")?e:e.toLowerCase()},insideValueFunctionNode:function(e,t){const n=zC(e,"value-func");return n&&n.value&&n.value.toLowerCase()===t},insideICSSRuleNode:function(e){const t=zC(e,"css-rule");return t&&t.raws&&t.raws.selector&&(t.raws.selector.startsWith(":import")||t.raws.selector.startsWith(":export"))},insideAtRuleNode:function(e,t){const n=[].concat(t),r=zC(e,"css-atrule");return r&&n.includes(r.name.toLowerCase())},insideURLFunctionInImportAtRuleNode:function(e){const t=e.getValue(),n=zC(e,"css-atrule");return n&&"import"===n.name&&"url"===t.groups[0].value&&2===t.groups.length},isKeyframeAtRuleKeywords:function(e,t){const n=zC(e,"css-atrule");return n&&n.name&&n.name.toLowerCase().endsWith("keyframes")&&["from","to"].includes(t.toLowerCase())},isWideKeywords:function(e){return["initial","inherit","unset","revert"].includes(e.toLowerCase())},isSCSS:function(e,t){return"less"===e||"scss"===e?"scss"===e:/(\w\s*:\s*[^:}]+|#){|@import[^\n]+(?:url|,)/.test(t)},isSCSSVariable:function(e){return!(!e||"word"!==e.type||!e.value.startsWith("$"))},isLastNode:function(e,t){const n=e.getParentNode();if(!n)return!1;const{nodes:r}=n;return r&&r.indexOf(t)===r.length-1},isLessParser:function(e){return"css"===e.parser||"less"===e.parser},isSCSSControlDirectiveNode:function(e){return"css-atrule"===e.type&&["if","else","for","each","while"].includes(e.name)},isDetachedRulesetDeclarationNode:function(e){return!!e.selector&&("string"==typeof e.selector&&/^@.+:.*$/.test(e.selector)||e.selector.value&&/^@.+:.*$/.test(e.selector.value))},isRelationalOperatorNode:function(e){return"value-word"===e.type&&["<",">","<=",">="].includes(e.value)},isEqualityOperatorNode:function(e){return"value-word"===e.type&&["==","!="].includes(e.value)},isMultiplicationNode:HC,isDivisionNode:GC,isAdditionNode:XC,isSubtractionNode:JC,isModuloNode:KC,isMathOperatorNode:function(e){return HC(e)||GC(e)||XC(e)||JC(e)||KC(e)},isEachKeywordNode:function(e){return"value-word"===e.type&&"in"===e.value},isForKeywordNode:function(e){return"value-word"===e.type&&["from","through","end"].includes(e.value)},isURLFunctionNode:function(e){return"value-func"===e.type&&"url"===e.value.toLowerCase()},isIfElseKeywordNode:function(e){return"value-word"===e.type&&["and","or","not"].includes(e.value)},hasComposesNode:function(e){return e.value&&"value-root"===e.value.type&&e.value.group&&"value-value"===e.value.group.type&&"composes"===e.prop.toLowerCase()},hasParensAroundNode:function(e){return e.value&&e.value.group&&e.value.group.group&&"value-paren_group"===e.value.group.group.type&&null!==e.value.group.group.open&&null!==e.value.group.group.close},hasEmptyRawBefore:function(e){return e.raws&&""===e.raws.before},isSCSSNestedPropertyNode:function(e){return!!e.selector&&e.selector.replace(/\/\*.*?\*\//,"").replace(/\/\/.*?\n/,"").trim().endsWith(":")},isDetachedRulesetCallNode:function(e){return e.raws&&e.raws.params&&/^\(\s*\)$/.test(e.raws.params)},isTemplatePlaceholderNode:function(e){return e.name.startsWith("prettier-placeholder")},isTemplatePropNode:function(e){return e.prop.startsWith("@prettier-placeholder")},isPostcssSimpleVarNode:function(e,t){return"$$"===e.value&&"value-func"===e.type&&t&&"value-word"===t.type&&!t.raws.before},isKeyValuePairNode:YC,isKeyValuePairInParenGroupNode:QC,isSCSSMapItemNode:function(e){const t=e.getValue();if(0===t.groups.length)return!1;const n=e.getParentNode(1);if(!(QC(t)||n&&QC(n)))return!1;const r=zC(e,"css-decl");return!!(r&&r.prop&&r.prop.startsWith("$"))||!!QC(n)||"value-func"===n.type},isInlineValueCommentNode:function(e){return"value-comment"===e.type&&e.inline},isHashNode:function(e){return"value-word"===e.type&&"#"===e.value},isLeftCurlyBraceNode:function(e){return"value-word"===e.type&&"{"===e.value},isRightCurlyBraceNode:function(e){return"value-word"===e.type&&"}"===e.value},isWordNode:function(e){return["value-word","value-atword"].includes(e.type)},isColonNode:function(e){return"value-colon"===e.type},isMediaAndSupportsKeywords:function(e){return e.value&&["not","and","or"].includes(e.value.toLowerCase())},isColorAdjusterFuncNode:function(e){return"value-func"===e.type&&VC.has(e.value.toLowerCase())},lastLineHasInlineComment:function(e){return/\/\//.test(e.split(/[\n\r]/).pop())},stringifyNode:function e(t){if(t.groups)return(t.open&&t.open.value?t.open.value:"")+t.groups.reduce(((n,r,s)=>n+e(r)+("comma_group"===t.groups[0].type&&s!==t.groups.length-1?",":"")),"")+(t.close&&t.close.value?t.close.value:"");const n=t.raws&&t.raws.before?t.raws.before:"",r=t.raws&&t.raws.quote?t.raws.quote:"";return n+r+("atword"===t.type?"@":"")+(t.value?t.value:"")+r+(t.unit?t.unit:"")+(t.group?e(t.group):"")+(t.raws&&t.raws.after?t.raws.after:"")},isAtWordPlaceholderNode:function(e){return e&&"value-atword"===e.type&&e.value.startsWith("prettier-placeholder-")}},eA=function(e,t){let n=0;for(let r=0;r<e.line-1;++r)n=t.indexOf("\n",n)+1;return n+e.column};const{getLast:tA,skipEverythingButNewLine:nA}=Ot;function rA(e,t){return"number"==typeof e.sourceIndex?e.sourceIndex:e.source?eA(e.source.start,t)-1:null}function sA(e,t){if("css-comment"===e.type&&e.inline)return nA(t,e.source.startOffset);const n=e.nodes&&tA(e.nodes);return n&&e.source&&!e.source.end&&(e=n),e.source&&e.source.end?eA(e.source.end,t):null}function iA(e,t,n){e.source&&(e.source.startOffset=rA(e,n)+t,e.source.endOffset=sA(e,n)+t);for(const r in e){const s=e[r];"source"!==r&&s&&"object"==typeof s&&iA(s,t,n)}}function aA(e){let t=e.source.startOffset;return"string"==typeof e.prop&&(t+=e.prop.length),"css-atrule"===e.type&&"string"==typeof e.name&&(t+=1+e.name.length+e.raws.afterName.match(/^\s*:?\s*/)[0].length),"css-atrule"!==e.type&&e.raws&&"string"==typeof e.raws.between&&(t+=e.raws.between.length),t}var oA={locStart:function(e){return e.source.startOffset},locEnd:function(e){return e.source.endOffset},calculateLoc:function e(t,n){t.source&&(t.source.startOffset=rA(t,n),t.source.endOffset=sA(t,n));for(const r in t){const s=t[r];"source"!==r&&s&&"object"==typeof s&&("value-root"===s.type||"value-unknown"===s.type?iA(s,aA(t),s.text||s.value):e(s,n))}},replaceQuotesInInlineComments:function(e){let t,n="initial",r="initial",s=!1;const i=[];for(let a=0;a<e.length;a++){const o=e[a];switch(n){case"initial":if("'"===o){n="single-quotes";continue}if('"'===o){n="double-quotes";continue}if(("u"===o||"U"===o)&&"url("===e.slice(a,a+4).toLowerCase()){n="url",a+=3;continue}if("*"===o&&"/"===e[a-1]){n="comment-block";continue}if("/"===o&&"/"===e[a-1]){n="comment-inline",t=a-1;continue}continue;case"single-quotes":if("'"===o&&"\\"!==e[a-1]&&(n=r,r="initial"),"\n"===o||"\r"===o)return e;continue;case"double-quotes":if('"'===o&&"\\"!==e[a-1]&&(n=r,r="initial"),"\n"===o||"\r"===o)return e;continue;case"url":if(")"===o&&(n="initial"),"\n"===o||"\r"===o)return e;if("'"===o){n="single-quotes",r="url";continue}if('"'===o){n="double-quotes",r="url";continue}continue;case"comment-block":"/"===o&&"*"===e[a-1]&&(n="initial");continue;case"comment-inline":'"'!==o&&"'"!==o&&"*"!==o||(s=!0),"\n"!==o&&"\r"!==o||(s&&i.push([t,a]),n="initial",s=!1);continue}}for(const[t,n]of i)e=e.slice(0,t)+e.slice(t,n).replace(/["'*]/g," ")+e.slice(n);return e}};const{printNumber:uA,printString:cA,hasNewline:lA,isFrontMatterNode:pA,isNextLineEmpty:hA}=Ot,{builders:{concat:dA,join:fA,line:DA,hardline:mA,softline:gA,group:yA,fill:EA,indent:CA,dedent:AA,ifBreak:bA,breakParent:FA},utils:{removeLines:xA}}=cn,{insertPragma:vA}=$C,{getAncestorNode:SA,getPropOfDeclNode:TA,maybeToLowerCase:wA,insideValueFunctionNode:BA,insideICSSRuleNode:PA,insideAtRuleNode:NA,insideURLFunctionInImportAtRuleNode:kA,isKeyframeAtRuleKeywords:IA,isWideKeywords:LA,isSCSS:OA,isLastNode:_A,isLessParser:MA,isSCSSControlDirectiveNode:RA,isDetachedRulesetDeclarationNode:jA,isRelationalOperatorNode:qA,isEqualityOperatorNode:UA,isMultiplicationNode:$A,isDivisionNode:VA,isAdditionNode:WA,isSubtractionNode:zA,isMathOperatorNode:HA,isEachKeywordNode:GA,isForKeywordNode:XA,isURLFunctionNode:JA,isIfElseKeywordNode:KA,hasComposesNode:YA,hasParensAroundNode:QA,hasEmptyRawBefore:ZA,isKeyValuePairNode:eb,isDetachedRulesetCallNode:tb,isTemplatePlaceholderNode:nb,isTemplatePropNode:rb,isPostcssSimpleVarNode:sb,isSCSSMapItemNode:ib,isInlineValueCommentNode:ab,isHashNode:ob,isLeftCurlyBraceNode:ub,isRightCurlyBraceNode:cb,isWordNode:lb,isColonNode:pb,isMediaAndSupportsKeywords:hb,isColorAdjusterFuncNode:db,lastLineHasInlineComment:fb,isAtWordPlaceholderNode:Db}=ZC,{locStart:mb,locEnd:gb}=oA;function yb(e){return"es5"===e.trailingComma||"all"===e.trailingComma}function Eb(e,t,n){const r=e.getValue(),s=[];return e.each(((e,i)=>{const a=r.nodes[i-1];if(a&&"css-comment"===a.type&&"prettier-ignore"===a.text.trim()){const n=e.getValue();s.push(t.originalText.slice(mb(n),gb(n)))}else s.push(e.call(n));i!==r.nodes.length-1&&("css-comment"===r.nodes[i+1].type&&!lA(t.originalText,mb(r.nodes[i+1]),{backwards:!0})&&!pA(r.nodes[i])||"css-atrule"===r.nodes[i+1].type&&"else"===r.nodes[i+1].name&&"css-comment"!==r.nodes[i].type?s.push(" "):(s.push(t.__isHTMLStyleAttribute?DA:mA),hA(t.originalText,e.getValue(),gb)&&!pA(r.nodes[i])&&s.push(mA)))}),"nodes"),dA(s)}const Cb=/(["'])(?:(?!\1)[^\\]|\\[\S\s])*\1/g,Ab=new RegExp(Cb.source+"|"+"(".concat(/[$@]?[A-Z_a-z\u0080-\uFFFF][\w\u0080-\uFFFF-]*/g.source,")?")+"(".concat(/(?:\d*\.\d+|\d+\.?)(?:[Ee][+-]?\d+)?/g.source,")")+"(".concat(/[A-Za-z]+/g.source,")?"),"g");function bb(e,t){return e.replace(Cb,(e=>cA(e,t)))}function Fb(e,t){const n=t.singleQuote?"'":'"';return e.includes('"')||e.includes("'")?e:n+e+n}function xb(e){return e.replace(Ab,((e,t,n,r,s)=>!n&&r?vb(r)+wA(s||""):e))}function vb(e){return uA(e).replace(/\.0(?=$|e)/,"")}var Sb={print:function(e,t,n){const r=e.getValue();if(!r)return"";if("string"==typeof r)return r;switch(r.type){case"front-matter":return dA([r.raw,mA]);case"css-root":{const s=Eb(e,t,n),i=r.raws.after.trim();return dA([s,i?" ".concat(i):"",s.parts.length?mA:""])}case"css-comment":{const e=r.inline||r.raws.inline,n=t.originalText.slice(mb(r),gb(r));return e?n.trimEnd():n}case"css-rule":return dA([e.call(n,"selector"),r.important?" !important":"",r.nodes?dA([r.selector&&"selector-unknown"===r.selector.type&&fb(r.selector.value)?DA:" ","{",r.nodes.length>0?CA(dA([mA,Eb(e,t,n)])):"",mA,"}",jA(r)?";":""]):";"]);case"css-decl":{const s=e.getParentNode(),{between:i}=r.raws,a=i.trim(),o=":"===a;let u=YA(r)?xA(e.call(n,"value")):e.call(n,"value");return!o&&fb(a)&&(u=CA(dA([mA,AA(u)]))),dA([r.raws.before.replace(/[\s;]/g,""),PA(e)?r.prop:wA(r.prop),a.startsWith("//")?" ":"",a,r.extend?"":" ",MA(t)&&r.extend&&r.selector?dA(["extend(",e.call(n,"selector"),")"]):"",u,r.raws.important?r.raws.important.replace(/\s*!\s*important/i," !important"):r.important?" !important":"",r.raws.scssDefault?r.raws.scssDefault.replace(/\s*!default/i," !default"):r.scssDefault?" !default":"",r.raws.scssGlobal?r.raws.scssGlobal.replace(/\s*!global/i," !global"):r.scssGlobal?" !global":"",r.nodes?dA([" {",CA(dA([gA,Eb(e,t,n)])),gA,"}"]):rb(r)&&!s.raws.semicolon&&";"!==t.originalText[gb(r)-1]?"":t.__isHTMLStyleAttribute&&_A(e,r)?bA(";",""):";"])}case"css-atrule":{const s=e.getParentNode(),i=nb(r)&&!s.raws.semicolon&&";"!==t.originalText[gb(r)-1];if(MA(t)){if(r.mixin)return dA([e.call(n,"selector"),r.important?" !important":"",i?"":";"]);if(r.function)return dA([r.name,dA([e.call(n,"params")]),i?"":";"]);if(r.variable)return dA(["@",r.name,": ",r.value?dA([e.call(n,"value")]):"",r.raws.between.trim()?r.raws.between.trim()+" ":"",r.nodes?dA(["{",CA(dA([r.nodes.length>0?gA:"",Eb(e,t,n)])),gA,"}"]):"",i?"":";"])}return dA(["@",tb(r)||r.name.endsWith(":")?r.name:wA(r.name),r.params?dA([tb(r)?"":nb(r)?""===r.raws.afterName?"":r.name.endsWith(":")?" ":/^\s*\n\s*\n/.test(r.raws.afterName)?dA([mA,mA]):/^\s*\n/.test(r.raws.afterName)?mA:" ":" ",e.call(n,"params")]):"",r.selector?CA(dA([" ",e.call(n,"selector")])):"",r.value?yA(dA([" ",e.call(n,"value"),RA(r)?QA(r)?" ":DA:""])):"else"===r.name?" ":"",r.nodes?dA([RA(r)?"":r.selector&&!r.selector.nodes&&"string"==typeof r.selector.value&&fb(r.selector.value)||!r.selector&&"string"==typeof r.params&&fb(r.params)?DA:" ","{",CA(dA([r.nodes.length>0?gA:"",Eb(e,t,n)])),gA,"}"]):i?"":";"])}case"media-query-list":{const t=[];return e.each((e=>{const r=e.getValue();"media-query"===r.type&&""===r.value||t.push(e.call(n))}),"nodes"),yA(CA(fA(DA,t)))}case"media-query":return dA([fA(" ",e.map(n,"nodes")),_A(e,r)?"":","]);case"media-type":case"media-value":return xb(bb(r.value,t));case"media-feature-expression":return r.nodes?dA(["(",dA(e.map(n,"nodes")),")"]):r.value;case"media-feature":return wA(bb(r.value.replace(/ +/g," "),t));case"media-colon":case"value-comma":return dA([r.value," "]);case"media-keyword":case"selector-string":return bb(r.value,t);case"media-url":return bb(r.value.replace(/^url\(\s+/gi,"url(").replace(/\s+\)$/gi,")"),t);case"media-unknown":case"selector-comment":case"selector-nesting":case"value-paren":case"value-operator":case"value-unicode-range":case"value-unknown":return r.value;case"selector-root":return yA(dA([NA(e,"custom-selector")?dA([SA(e,"css-atrule").customSelector,DA]):"",fA(dA([",",NA(e,["extend","custom-selector","nest"])?DA:mA]),e.map(n,"nodes"))]));case"selector-selector":return yA(CA(dA(e.map(n,"nodes"))));case"selector-tag":{const t=e.getParentNode(),n=t&&t.nodes.indexOf(r),s=n&&t.nodes[n-1];return dA([r.namespace?dA([!0===r.namespace?"":r.namespace.trim(),"|"]):"","selector-nesting"===s.type?r.value:xb(IA(e,r.value)?r.value.toLowerCase():r.value)])}case"selector-id":return dA(["#",r.value]);case"selector-class":return dA([".",xb(bb(r.value,t))]);case"selector-attribute":return dA(["[",r.namespace?dA([!0===r.namespace?"":r.namespace.trim(),"|"]):"",r.attribute.trim(),r.operator?r.operator:"",r.value?Fb(bb(r.value.trim(),t),t):"",r.insensitive?" i":"","]"]);case"selector-combinator":{if("+"===r.value||">"===r.value||"~"===r.value||">>>"===r.value){const t=e.getParentNode(),n="selector-selector"===t.type&&t.nodes[0]===r?"":DA;return dA([n,r.value,_A(e,r)?"":" "])}const n=r.value.trim().startsWith("(")?DA:"",s=xb(bb(r.value.trim(),t))||DA;return dA([n,s])}case"selector-universal":return dA([r.namespace?dA([!0===r.namespace?"":r.namespace.trim(),"|"]):"",r.value]);case"selector-pseudo":return dA([wA(r.value),r.nodes&&r.nodes.length>0?dA(["(",fA(", ",e.map(n,"nodes")),")"]):""]);case"selector-unknown":{const n=SA(e,"css-rule");if(n&&n.isSCSSNesterProperty)return xb(bb(wA(r.value),t));const s=e.getParentNode();if(s.raws&&s.raws.selector){const e=mb(s),n=e+s.raws.selector.length;return t.originalText.slice(e,n).trim()}const i=e.getParentNode(1);if("value-paren_group"===s.type&&i&&"value-func"===i.type&&"selector"===i.value){const e=mb(s.open)+1,n=gb(s.close)-1,r=t.originalText.slice(e,n).trim();return fb(r)?dA([FA,r]):r}return r.value}case"value-value":case"value-root":return e.call(n,"group");case"value-comment":return t.originalText.slice(mb(r),gb(r));case"value-comma_group":{const t=e.getParentNode(),s=e.getParentNode(1),i=TA(e),a=i&&"value-value"===t.type&&("grid"===i||i.startsWith("grid-template")),o=SA(e,"css-atrule"),u=o&&RA(o),c=e.map(n,"groups"),l=[],p=BA(e,"url");let h=!1,d=!1;for(let n=0;n<r.groups.length;++n){l.push(c[n]);const i=r.groups[n-1],f=r.groups[n],D=r.groups[n+1],m=r.groups[n+2];if(p){(D&&WA(D)||WA(f))&&l.push(" ");continue}if(!D)continue;if("value-word"===f.type&&f.value.endsWith("-")&&Db(D))continue;const g="value-string"===f.type&&f.value.startsWith("#{"),y=h&&"value-string"===D.type&&D.value.endsWith("}");if(g||y){h=!h;continue}if(h)continue;if(pb(f)||pb(D))continue;if("value-atword"===f.type&&""===f.value)continue;if("~"===f.value)continue;if(f.value&&f.value.includes("\\")&&D&&"value-comment"!==D.type)continue;if(i&&i.value&&i.value.indexOf("\\")===i.value.length-1&&"value-operator"===f.type&&"/"===f.value)continue;if("\\"===f.value)continue;if(sb(f,D))continue;if(ob(f)||ub(f)||cb(D)||ub(D)&&ZA(D)||cb(f)&&ZA(D))continue;if("--"===f.value&&ob(D))continue;const E=HA(f),C=HA(D);if((E&&ob(D)||C&&cb(f))&&ZA(D))continue;if(BA(e,"calc")&&(WA(f)||WA(D)||zA(f)||zA(D))&&ZA(D))continue;const A=(WA(f)||zA(f))&&0===n&&("value-number"===D.type||D.isHex)&&s&&db(s)&&!ZA(D),b=m&&"value-func"===m.type||m&&lb(m)||"value-func"===f.type||lb(f),F="value-func"===D.type||lb(D)||i&&"value-func"===i.type||i&&lb(i);if($A(D)||$A(f)||BA(e,"calc")||A||!(VA(D)&&!b||VA(f)&&!F||WA(D)&&!b||WA(f)&&!F||zA(D)||zA(f))||!(ZA(D)||E&&(!i||i&&HA(i))))if(ab(f)){if("value-paren_group"===t.type){l.push(AA(mA));continue}l.push(mA)}else u&&(UA(D)||qA(D)||KA(D)||GA(f)||XA(f))||o&&"namespace"===o.name.toLowerCase()?l.push(" "):a?f.source&&D.source&&f.source.start.line!==D.source.start.line?(l.push(mA),d=!0):l.push(" "):C?l.push(" "):D&&"..."===D.value||Db(f)&&Db(D)&&gb(f)===mb(D)||l.push(DA)}return d&&l.unshift(mA),u?yA(CA(dA(l))):kA(e)?yA(EA(l)):yA(CA(EA(l)))}case"value-paren_group":{const s=e.getParentNode();if(s&&JA(s)&&(1===r.groups.length||r.groups.length>0&&"value-comma_group"===r.groups[0].type&&r.groups[0].groups.length>0&&"value-word"===r.groups[0].groups[0].type&&r.groups[0].groups[0].value.startsWith("data:")))return dA([r.open?e.call(n,"open"):"",fA(",",e.map(n,"groups")),r.close?e.call(n,"close"):""]);if(!r.open){const t=e.map(n,"groups"),r=[];for(let e=0;e<t.length;e++)0!==e&&r.push(dA([",",DA])),r.push(t[e]);return yA(CA(EA(r)))}const i=ib(e),a=r.groups[r.groups.length-1],o=a&&"value-comment"===a.type;return yA(dA([r.open?e.call(n,"open"):"",CA(dA([gA,fA(dA([",",DA]),e.map((e=>{const t=e.getValue(),r=n(e);return eb(t)&&"value-comma_group"===t.type&&t.groups&&t.groups[2]&&"value-paren_group"===t.groups[2].type?(r.contents.contents.parts[1]=yA(r.contents.contents.parts[1]),yA(AA(r))):r}),"groups"))])),bA(!o&&OA(t.parser,t.originalText)&&i&&yb(t)?",":""),gA,r.close?e.call(n,"close"):""]),{shouldBreak:i})}case"value-func":return dA([r.value,NA(e,"supports")&&hb(r)?" ":"",e.call(n,"group")]);case"value-number":return dA([vb(r.value),wA(r.unit)]);case"value-word":return r.isColor&&r.isHex||LA(r.value)?r.value.toLowerCase():r.value;case"value-colon":{const t=e.getParentNode(),n=t&&t.groups.indexOf(r),s=n&&t.groups[n-1];return dA([r.value,s&&"\\"===s.value[s.value.length-1]||BA(e,"url")?"":DA])}case"value-string":return cA(r.raws.quote+r.value+r.raws.quote,t);case"value-atword":return dA(["@",r.value]);default:throw new Error("Unknown postcss type ".concat(JSON.stringify(r.type)))}},embed:function(e,t,n){const r=e.getValue();if("front-matter"===r.type){const e=qC(r,n);return e?jC([e,RC]):""}},insertPragma:vA,massageAstNode:kC},Tb={singleQuote:FC.singleQuote},wb={languages:[bu({name:"CSS",type:"markup",tmScope:"source.css",aceMode:"css",codemirrorMode:"css",codemirrorMimeType:"text/css",color:"#563d7c",extensions:[".css"],languageId:50},(e=>({since:"1.4.0",parsers:["css"],vscodeLanguageIds:["css"],extensions:[...e.extensions,".wxss"]}))),bu({name:"PostCSS",type:"markup",tmScope:"source.postcss",group:"CSS",extensions:[".pcss",".postcss"],aceMode:"text",languageId:262764437},(()=>({since:"1.4.0",parsers:["css"],vscodeLanguageIds:["postcss"]}))),bu({name:"Less",type:"markup",color:"#1d365d",extensions:[".less"],tmScope:"source.css.less",aceMode:"less",codemirrorMode:"css",codemirrorMimeType:"text/css",languageId:198},(()=>({since:"1.4.0",parsers:["less"],vscodeLanguageIds:["less"]}))),bu({name:"SCSS",type:"markup",color:"#c6538c",tmScope:"source.css.scss",aceMode:"scss",codemirrorMode:"css",codemirrorMimeType:"text/x-scss",extensions:[".scss"],languageId:329},(()=>({since:"1.4.0",parsers:["scss"],vscodeLanguageIds:["scss"]})))],options:Tb,printers:{postcss:Sb},parsers:{get css(){return{}.parsers.css},get less(){return{}.parsers.less},get scss(){return{}.parsers.scss}}};function Bb(e,t){if("TextNode"===e.type){const n=e.chars.trim();if(!n)return null;t.chars=n}}Bb.ignoredProperties=new Set(["loc","selfClosing"]);var Pb=Bb;const Nb=new Set(["area","base","basefont","bgsound","br","col","command","embed","frame","hr","image","img","input","isindex","keygen","link","menuitem","meta","nextid","param","source","track","wbr"]);function kb(e){return Ib(e,["TextNode"])&&!/\S/.test(e.chars)}function Ib(e,t){return e&&t.some((t=>e.type===t))}function Lb(e,t){const n=e.getValue(),r=e.getParentNode(0)||{},s=r.children||r.body||r.parts||[],i=s.indexOf(n);return-1!==i&&s[i+t]}function Ob(e,t=1){return Lb(e,-t)}function _b(e){return Lb(e,1)}function Mb(e){return Ib(e,["MustacheCommentStatement"])&&"string"==typeof e.value&&"prettier-ignore"===e.value.trim()}var Rb={getNextNode:_b,getPreviousNode:Ob,hasPrettierIgnore:function(e){const t=e.getValue(),n=Ob(e,2);return Mb(t)||Mb(n)},isNextNodeOfSomeType:function(e,t){return Ib(_b(e),t)},isNodeOfSomeType:Ib,isParentOfSomeType:function(e,t){return Ib(e.getParentNode(0),t)},isPreviousNodeOfSomeType:function(e,t){return Ib(Ob(e),t)},isVoid:function(e){return function(e){return Ib(e,["ElementNode"])&&"string"==typeof e.tag&&(function(e){return e.toUpperCase()===e}(e.tag[0])||e.tag.includes("."))}(e)&&e.children.every((e=>kb(e)))||Nb.has(e.tag)},isWhitespaceNode:kb};const{builders:{concat:jb,group:qb,hardline:Ub,ifBreak:$b,indent:Vb,join:Wb,line:zb,softline:Hb}}=cn,{locStart:Gb,locEnd:Xb}={locStart:function(e){return e.loc.start.offset},locEnd:function(e){return e.loc.end.offset}},{getNextNode:Jb,getPreviousNode:Kb,hasPrettierIgnore:Yb,isNextNodeOfSomeType:Qb,isNodeOfSomeType:Zb,isParentOfSomeType:eF,isPreviousNodeOfSomeType:tF,isVoid:nF,isWhitespaceNode:rF}=Rb;function sF(e,t){const n=e.getValue();return jb(["<",n.tag,iF(e,t),NF(n),oF(n)])}function iF(e,t){const n=e.getValue();return Vb(jb([n.attributes.length?zb:"",Wb(zb,e.map(t,"attributes")),n.modifiers.length?zb:"",Wb(zb,e.map(t,"modifiers")),n.comments.length?zb:"",Wb(zb,e.map(t,"comments"))]))}function aF(e,t,n){return jb(e.map(((e,r)=>0===r?jb([Hb,n(e,t,n)]):n(e,t,n)),"children"))}function oF(e){return nF(e)?$b(jb([Hb,"/>"]),jb([" />",Hb])):$b(jb([Hb,">"]),">")}function uF(e){const t=!1===e.escaped?"{{{":"{{",n=e.strip&&e.strip.open?"~":"";return jb([t,n])}function cF(e){const t=!1===e.escaped?"}}}":"}}",n=e.strip&&e.strip.close?"~":"";return jb([n,t])}function lF(e){const t=uF(e),n=e.openStrip.open?"~":"";return jb([t,n,"#"])}function pF(e){const t=cF(e),n=e.openStrip.close?"~":"";return jb([n,t])}function hF(e){const t=uF(e),n=e.closeStrip.open?"~":"";return jb([t,n,"/"])}function dF(e){const t=cF(e),n=e.closeStrip.close?"~":"";return jb([n,t])}function fF(e){const t=uF(e),n=e.inverseStrip.open?"~":"";return jb([t,n])}function DF(e){const t=cF(e),n=e.inverseStrip.close?"~":"";return jb([n,t])}function mF(e,t){const n=e.getValue();return qb(jb([lF(n),wF(e,t),NF(n.program),Hb,pF(n)]))}function gF(e){return jb([Ub,fF(e),"else",DF(e)])}function yF(e,t){const n=e.getParentNode(1);return jb([fF(n),"else ",wF(e,t),DF(n)])}function EF(e,t){const n=e.getValue();return jb([CF(n)?Hb:Ub,hF(n),e.call(t,"path"),dF(n)])}function CF(e){return Zb(e,["BlockStatement"])&&e.program.body.every((e=>rF(e)))}function AF(e){return Zb(e,["BlockStatement"])&&e.inverse}function bF(e,t){if(CF(e.getValue()))return"";const n=e.call(t,"program");return Vb(jb([Ub,n]))}function FF(e,t){const n=e.getValue(),r=e.call(t,"inverse"),s=jb([Ub,r]);return function(e){return AF(e)&&1===e.inverse.body.length&&Zb(e.inverse.body[0],["BlockStatement"])&&"if"===e.inverse.body[0].path.parts[0]}(n)?s:AF(n)?jb([gF(n),Vb(s)]):""}function xF(e){return(e="string"==typeof e?e:"").split("\n").length-1}function vF(e=0,t=0){return new Array(Math.min(e,t)).fill(Ub)}function SF(e,t){const n={quote:'"',regex:/"/g},r={quote:"'",regex:/'/g},s=t.singleQuote?r:n,i=s===r?n:r;let a=!1;(e.includes(s.quote)||e.includes(i.quote))&&(a=(e.match(s.regex)||[]).length>(e.match(i.regex)||[]).length);const o=a?i:s,u=e.replace(o.regex,"\\".concat(o.quote));return jb([o.quote,u,o.quote])}function TF(e,t){const n=BF(e,t),r=PF(e,t);return r?Vb(jb([n,zb,qb(r)])):n}function wF(e,t){const n=BF(e,t),r=PF(e,t);return r?Vb(qb(jb([n,zb,r]))):n}function BF(e,t){return e.call(t,"path")}function PF(e,t){const n=e.getValue(),r=[];if(n.params.length){const n=e.map(t,"params");r.push(...n)}if(n.hash&&n.hash.pairs.length>0){const n=e.call(t,"hash");r.push(n)}return r.length?Wb(zb,r):""}function NF(e){return e&&e.blockParams.length?jb([" as |",e.blockParams.join(" "),"|"]):""}var kF={print:function(e,t,n){const r=e.getValue();if(!r)return"";if(Yb(e))return t.originalText.slice(Gb(r),Xb(r));switch(r.type){case"Block":case"Program":case"Template":return qb(jb(e.map(n,"body")));case"ElementNode":{const s=Qb(e,["ElementNode"])?Ub:"";if(nF(r))return jb([qb(sF(e,n)),s]);const i=r.children.every((e=>rF(e)));return jb([qb(sF(e,n)),qb(jb([i?"":Vb(aF(e,t,n)),r.children.length?Ub:"",jb(["</",r.tag,">"])])),s])}case"BlockStatement":{const t=e.getParentNode(1),s=t&&t.inverse&&1===t.inverse.body.length&&t.inverse.body[0]===r&&"if"===t.inverse.body[0].path.parts[0];return jb(s?[yF(e,n),bF(e,n),FF(e,n)]:[mF(e,n),qb(jb([bF(e,n),FF(e,n),EF(e,n)]))])}case"ElementModifierStatement":return qb(jb(["{{",wF(e,n),Hb,"}}"]));case"MustacheStatement":{const t=eF(e,["AttrNode","ConcatStatement"]),s=eF(e,["ElementNode"])&&0===r.hash.pairs.length&&function(e){return 0===e.params.length}(r),i=t||s;return qb(jb([uF(r),i?Vb(Hb):"",wF(e,n),Hb,cF(r)]))}case"SubExpression":return qb(jb(["(",TF(e,n),Hb,")"]));case"AttrNode":{const s="TextNode"===r.value.type;if(s&&""===r.value.chars&&Gb(r.value)===Xb(r.value))return jb([r.name]);const i=e.call(n,"value"),a=s?SF(i.parts.join(),t):i;return jb([r.name,"=",a])}case"ConcatStatement":{const r=t.singleQuote?"'":'"';return jb([r,...e.map((e=>n(e)),"parts"),r])}case"Hash":return jb([Wb(zb,e.map(n,"pairs"))]);case"HashPair":return jb([r.key,"=",e.call(n,"value")]);case"TextNode":{const t=2,n=!Kb(e),s=!Jb(e),i=!/\S/.test(r.chars),a=xF(r.chars);let o=function(e){return xF(((e="string"==typeof e?e:"").match(/^([^\S\n\r]*[\n\r])+/g)||[])[0]||"")}(r.chars),u=function(e){return xF(((e="string"==typeof e?e:"").match(/([\n\r][^\S\n\r]*)+$/g)||[])[0]||"")}(r.chars);if((n||s)&&i&&eF(e,["Block","ElementNode","Template"]))return"";if(i&&a?(o=Math.min(a,t),u=0):(Qb(e,["BlockStatement","ElementNode"])&&(u=Math.max(u,1)),tF(e,["BlockStatement","ElementNode"])&&(o=Math.max(o,1))),e.stack.includes("attributes")){if(!function(e,t){return eF(e,["AttrNode"])&&e.getParentNode().name.toLowerCase()===t||eF(e,["ConcatStatement"])&&e.getParentNode(1).name.toLowerCase()===t}(e,"class"))return jb([r.chars]);let n="",s="";return eF(e,["ConcatStatement"])&&(tF(e,["MustacheStatement"])&&(n=" "),Qb(e,["MustacheStatement"])&&(s=" ")),jb([...vF(o,t),r.chars.replace(/^\s+/g,n).replace(/\s+$/,s),...vF(u,t)])}let c="",l="";0===u&&Qb(e,["MustacheStatement"])&&(l=" "),0===o&&tF(e,["MustacheStatement"])&&(c=" "),n&&(o=0,c=""),s&&(u=0,l="");let p=r.chars;return p.startsWith("{{")&&p.includes("}}")&&(p="\\"+p),jb([...vF(o,t),p.replace(/^\s+/g,c).replace(/\s+$/,l),...vF(u,t)])}case"MustacheCommentStatement":{const e=r.value.includes("}}")?"--":"";return jb(["{{!",e,r.value,e,"}}"])}case"PathExpression":return r.original;case"BooleanLiteral":case"NumberLiteral":return String(r.value);case"CommentStatement":return jb(["\x3c!--",r.value,"--\x3e"]);case"StringLiteral":return SF(r.value,t);case"UndefinedLiteral":return"undefined";case"NullLiteral":return"null";default:throw new Error("unknown glimmer type: "+JSON.stringify(r.type))}},massageAstNode:Pb},IF={languages:[bu({name:"Handlebars",type:"markup",color:"#f7931e",aliases:["hbs","htmlbars"],extensions:[".handlebars",".hbs"],tmScope:"text.html.handlebars",aceMode:"handlebars",languageId:155},(()=>({since:null,parsers:["glimmer"],vscodeLanguageIds:["handlebars"]})))],printers:{glimmer:kF},parsers:{get glimmer(){return{}.parsers.glimmer}}};const{builders:{concat:LF,join:OF,hardline:_F,line:MF,softline:RF,group:jF,indent:qF,ifBreak:UF}}=cn,{isNextLineEmpty:$F}=Ot,{insertPragma:VF}={hasPragma:function(e){return/^\s*#[^\S\n]*@(format|prettier)\s*(\n|$)/.test(e)},insertPragma:function(e){return"# @format\n\n"+e}},{locStart:WF,locEnd:zF}={locStart:function(e){return"number"==typeof e.start?e.start:e.loc&&e.loc.start},locEnd:function(e){return"number"==typeof e.end?e.end:e.loc&&e.loc.end}};function HF(e,t,n){if(0===n.directives.length)return"";const r=OF(MF,e.map(t,"directives"));return"FragmentDefinition"===n.kind||"OperationDefinition"===n.kind?jF(LF([MF,r])):LF([" ",jF(qF(LF([RF,r])))])}function GF(e,t,n){const r=e.getValue().length;return e.map(((e,s)=>{const i=n(e);return $F(t.originalText,e.getValue(),zF)&&s<r-1?LF([i,_F]):i}))}function XF(e,t,n){const r=e.getNode(),s=[],{interfaces:i}=r,a=e.map((e=>n(e)),"interfaces");for(let e=0;e<i.length;e++){const n=i[e];s.push(a[e]);const r=i[e+1];if(r){const e=t.originalText.slice(n.loc.end,r.loc.start),i=e.includes("#"),a=e.replace(/#.*/g,"").trim();s.push(","===a?",":" &"),s.push(i?MF:" ")}}return s}function JF(){}JF.ignoredProperties=new Set(["loc","comments"]);var KF={print:function(e,t,n){const r=e.getValue();if(!r)return"";if("string"==typeof r)return r;switch(r.kind){case"Document":{const s=[];return e.each(((e,i)=>{s.push(LF([e.call(n)])),i!==r.definitions.length-1&&(s.push(_F),$F(t.originalText,e.getValue(),zF)&&s.push(_F))}),"definitions"),LF([LF(s),_F])}case"OperationDefinition":{const s="{"!==t.originalText[WF(r)],i=!!r.name;return LF([s?r.operation:"",s&&i?LF([" ",e.call(n,"name")]):"",r.variableDefinitions&&r.variableDefinitions.length?jF(LF(["(",qF(LF([RF,OF(LF([UF("",", "),RF]),e.map(n,"variableDefinitions"))])),RF,")"])):"",HF(e,n,r),r.selectionSet&&(s||i)?" ":"",e.call(n,"selectionSet")])}case"FragmentDefinition":return LF(["fragment ",e.call(n,"name"),r.variableDefinitions&&r.variableDefinitions.length?jF(LF(["(",qF(LF([RF,OF(LF([UF("",", "),RF]),e.map(n,"variableDefinitions"))])),RF,")"])):""," on ",e.call(n,"typeCondition"),HF(e,n,r)," ",e.call(n,"selectionSet")]);case"SelectionSet":return LF(["{",qF(LF([_F,OF(_F,e.call((e=>GF(e,t,n)),"selections"))])),_F,"}"]);case"Field":return jF(LF([r.alias?LF([e.call(n,"alias"),": "]):"",e.call(n,"name"),r.arguments.length>0?jF(LF(["(",qF(LF([RF,OF(LF([UF("",", "),RF]),e.call((e=>GF(e,t,n)),"arguments"))])),RF,")"])):"",HF(e,n,r),r.selectionSet?" ":"",e.call(n,"selectionSet")]));case"Name":case"IntValue":case"FloatValue":case"EnumValue":return r.value;case"StringValue":return r.block?LF(['"""',_F,OF(_F,r.value.replace(/"""/g,"\\$&").split("\n")),_F,'"""']):LF(['"',r.value.replace(/["\\]/g,"\\$&").replace(/\n/g,"\\n"),'"']);case"BooleanValue":return r.value?"true":"false";case"NullValue":return"null";case"Variable":return LF(["$",e.call(n,"name")]);case"ListValue":return jF(LF(["[",qF(LF([RF,OF(LF([UF("",", "),RF]),e.map(n,"values"))])),RF,"]"]));case"ObjectValue":return jF(LF(["{",t.bracketSpacing&&r.fields.length>0?" ":"",qF(LF([RF,OF(LF([UF("",", "),RF]),e.map(n,"fields"))])),RF,UF("",t.bracketSpacing&&r.fields.length>0?" ":""),"}"]));case"ObjectField":case"Argument":return LF([e.call(n,"name"),": ",e.call(n,"value")]);case"Directive":return LF(["@",e.call(n,"name"),r.arguments.length>0?jF(LF(["(",qF(LF([RF,OF(LF([UF("",", "),RF]),e.call((e=>GF(e,t,n)),"arguments"))])),RF,")"])):""]);case"NamedType":return e.call(n,"name");case"VariableDefinition":return LF([e.call(n,"variable"),": ",e.call(n,"type"),r.defaultValue?LF([" = ",e.call(n,"defaultValue")]):"",HF(e,n,r)]);case"ObjectTypeExtension":case"ObjectTypeDefinition":return LF([e.call(n,"description"),r.description?_F:"","ObjectTypeExtension"===r.kind?"extend ":"","type ",e.call(n,"name"),r.interfaces.length>0?LF([" implements ",LF(XF(e,t,n))]):"",HF(e,n,r),r.fields.length>0?LF([" {",qF(LF([_F,OF(_F,e.call((e=>GF(e,t,n)),"fields"))])),_F,"}"]):""]);case"FieldDefinition":return LF([e.call(n,"description"),r.description?_F:"",e.call(n,"name"),r.arguments.length>0?jF(LF(["(",qF(LF([RF,OF(LF([UF("",", "),RF]),e.call((e=>GF(e,t,n)),"arguments"))])),RF,")"])):"",": ",e.call(n,"type"),HF(e,n,r)]);case"DirectiveDefinition":return LF([e.call(n,"description"),r.description?_F:"","directive ","@",e.call(n,"name"),r.arguments.length>0?jF(LF(["(",qF(LF([RF,OF(LF([UF("",", "),RF]),e.call((e=>GF(e,t,n)),"arguments"))])),RF,")"])):"",r.repeatable?" repeatable":"",LF([" on ",OF(" | ",e.map(n,"locations"))])]);case"EnumTypeExtension":case"EnumTypeDefinition":return LF([e.call(n,"description"),r.description?_F:"","EnumTypeExtension"===r.kind?"extend ":"","enum ",e.call(n,"name"),HF(e,n,r),r.values.length>0?LF([" {",qF(LF([_F,OF(_F,e.call((e=>GF(e,t,n)),"values"))])),_F,"}"]):""]);case"EnumValueDefinition":return LF([e.call(n,"description"),r.description?_F:"",e.call(n,"name"),HF(e,n,r)]);case"InputValueDefinition":return LF([e.call(n,"description"),r.description?r.description.block?_F:MF:"",e.call(n,"name"),": ",e.call(n,"type"),r.defaultValue?LF([" = ",e.call(n,"defaultValue")]):"",HF(e,n,r)]);case"InputObjectTypeExtension":case"InputObjectTypeDefinition":return LF([e.call(n,"description"),r.description?_F:"","InputObjectTypeExtension"===r.kind?"extend ":"","input ",e.call(n,"name"),HF(e,n,r),r.fields.length>0?LF([" {",qF(LF([_F,OF(_F,e.call((e=>GF(e,t,n)),"fields"))])),_F,"}"]):""]);case"SchemaDefinition":return LF(["schema",HF(e,n,r)," {",r.operationTypes.length>0?qF(LF([_F,OF(_F,e.call((e=>GF(e,t,n)),"operationTypes"))])):"",_F,"}"]);case"OperationTypeDefinition":return LF([e.call(n,"operation"),": ",e.call(n,"type")]);case"InterfaceTypeExtension":case"InterfaceTypeDefinition":return LF([e.call(n,"description"),r.description?_F:"","InterfaceTypeExtension"===r.kind?"extend ":"","interface ",e.call(n,"name"),r.interfaces.length>0?LF([" implements ",LF(XF(e,t,n))]):"",HF(e,n,r),r.fields.length>0?LF([" {",qF(LF([_F,OF(_F,e.call((e=>GF(e,t,n)),"fields"))])),_F,"}"]):""]);case"FragmentSpread":return LF(["...",e.call(n,"name"),HF(e,n,r)]);case"InlineFragment":return LF(["...",r.typeCondition?LF([" on ",e.call(n,"typeCondition")]):"",HF(e,n,r)," ",e.call(n,"selectionSet")]);case"UnionTypeExtension":case"UnionTypeDefinition":return jF(LF([e.call(n,"description"),r.description?_F:"",jF(LF(["UnionTypeExtension"===r.kind?"extend ":"","union ",e.call(n,"name"),HF(e,n,r),r.types.length>0?LF([" =",UF(""," "),qF(LF([UF(LF([MF,"  "])),OF(LF([MF,"| "]),e.map(n,"types"))]))]):""]))]));case"ScalarTypeExtension":case"ScalarTypeDefinition":return LF([e.call(n,"description"),r.description?_F:"","ScalarTypeExtension"===r.kind?"extend ":"","scalar ",e.call(n,"name"),HF(e,n,r)]);case"NonNullType":return LF([e.call(n,"type"),"!"]);case"ListType":return LF(["[",e.call(n,"type"),"]"]);default:throw new Error("unknown graphql type: "+JSON.stringify(r.kind))}},massageAstNode:JF,hasPrettierIgnore:function(e){const t=e.getValue();return t&&Array.isArray(t.comments)&&t.comments.some((e=>"prettier-ignore"===e.value.trim()))},insertPragma:VF,printComment:function(e){const t=e.getValue();if("Comment"===t.kind)return"#"+t.value.trimEnd();throw new Error("Not a comment: "+JSON.stringify(t))},canAttachComment:function(e){return e.kind&&"Comment"!==e.kind}},YF={bracketSpacing:FC.bracketSpacing},QF={languages:[bu({name:"GraphQL",type:"data",color:"#e10098",extensions:[".graphql",".gql",".graphqls"],tmScope:"source.graphql",aceMode:"text",languageId:139},(()=>({since:"1.5.0",parsers:["graphql"],vscodeLanguageIds:["graphql"]})))],options:YF,printers:{graphql:KF},parsers:{get graphql(){return{}.parsers.graphql}}},ZF={locStart:function(e){return e.position.start.offset},locEnd:function(e){return e.position.end.offset}};const{getLast:ex}=Ot,{locStart:tx,locEnd:nx}=ZF,{cjkPattern:rx,kPattern:sx,punctuationPattern:ix}={cjkPattern:"(?:[\\u02ea-\\u02eb\\u1100-\\u11ff\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u3000-\\u303f\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u3190-\\u3191\\u3196-\\u31ba\\u31c0-\\u31e3\\u31f0-\\u321e\\u322a-\\u3247\\u3260-\\u327e\\u328a-\\u32b0\\u32c0-\\u32cb\\u32d0-\\u3370\\u337b-\\u337f\\u33e0-\\u33fe\\u3400-\\u4db5\\u4e00-\\u9fef\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufe10-\\ufe1f\\ufe30-\\ufe6f\\uff00-\\uffef]|[\\ud840-\\ud868\\ud86a-\\ud86c\\ud86f-\\ud872\\ud874-\\ud879][\\udc00-\\udfff]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67]|\\ud83c[\\ude00\\ude50-\\ude51]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d])(?:[\\ufe00-\\ufe0f]|\\udb40[\\udd00-\\uddef])?",kPattern:"[\\u1100-\\u11ff\\u3001-\\u3003\\u3008-\\u3011\\u3013-\\u301f\\u302e-\\u3030\\u3037\\u30fb\\u3131-\\u318e\\u3200-\\u321e\\u3260-\\u327e\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\ufe45-\\ufe46\\uff61-\\uff65\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]",punctuationPattern:"[\\u0021-\\u002f\\u003a-\\u0040\\u005b-\\u0060\\u007b-\\u007e\\u00a1\\u00a7\\u00ab\\u00b6-\\u00b7\\u00bb\\u00bf\\u037e\\u0387\\u055a-\\u055f\\u0589-\\u058a\\u05be\\u05c0\\u05c3\\u05c6\\u05f3-\\u05f4\\u0609-\\u060a\\u060c-\\u060d\\u061b\\u061e-\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964-\\u0965\\u0970\\u09fd\\u0a76\\u0af0\\u0c77\\u0c84\\u0df4\\u0e4f\\u0e5a-\\u0e5b\\u0f04-\\u0f12\\u0f14\\u0f3a-\\u0f3d\\u0f85\\u0fd0-\\u0fd4\\u0fd9-\\u0fda\\u104a-\\u104f\\u10fb\\u1360-\\u1368\\u1400\\u166e\\u169b-\\u169c\\u16eb-\\u16ed\\u1735-\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u180a\\u1944-\\u1945\\u1a1e-\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e-\\u1c7f\\u1cc0-\\u1cc7\\u1cd3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205e\\u207d-\\u207e\\u208d-\\u208e\\u2308-\\u230b\\u2329-\\u232a\\u2768-\\u2775\\u27c5-\\u27c6\\u27e6-\\u27ef\\u2983-\\u2998\\u29d8-\\u29db\\u29fc-\\u29fd\\u2cf9-\\u2cfc\\u2cfe-\\u2cff\\u2d70\\u2e00-\\u2e2e\\u2e30-\\u2e4f\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301f\\u3030\\u303d\\u30a0\\u30fb\\ua4fe-\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce-\\ua8cf\\ua8f8-\\ua8fa\\ua8fc\\ua92e-\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de-\\ua9df\\uaa5c-\\uaa5f\\uaade-\\uaadf\\uaaf0-\\uaaf1\\uabeb\\ufd3e-\\ufd3f\\ufe10-\\ufe19\\ufe30-\\ufe52\\ufe54-\\ufe61\\ufe63\\ufe68\\ufe6a-\\ufe6b\\uff01-\\uff03\\uff05-\\uff0a\\uff0c-\\uff0f\\uff1a-\\uff1b\\uff1f-\\uff20\\uff3b-\\uff3d\\uff3f\\uff5b\\uff5d\\uff5f-\\uff65]|\\ud800[\\udd00-\\udd02\\udf9f\\udfd0]|\\ud801[\\udd6f]|\\ud802[\\udc57\\udd1f\\udd3f\\ude50-\\ude58\\ude7f\\udef0-\\udef6\\udf39-\\udf3f\\udf99-\\udf9c]|\\ud803[\\udf55-\\udf59]|\\ud804[\\udc47-\\udc4d\\udcbb-\\udcbc\\udcbe-\\udcc1\\udd40-\\udd43\\udd74-\\udd75\\uddc5-\\uddc8\\uddcd\\udddb\\udddd-\\udddf\\ude38-\\ude3d\\udea9]|\\ud805[\\udc4b-\\udc4f\\udc5b\\udc5d\\udcc6\\uddc1-\\uddd7\\ude41-\\ude43\\ude60-\\ude6c\\udf3c-\\udf3e]|\\ud806[\\udc3b\\udde2\\ude3f-\\ude46\\ude9a-\\ude9c\\ude9e-\\udea2]|\\ud807[\\udc41-\\udc45\\udc70-\\udc71\\udef7-\\udef8\\udfff]|\\ud809[\\udc70-\\udc74]|\\ud81a[\\ude6e-\\ude6f\\udef5\\udf37-\\udf3b\\udf44]|\\ud81b[\\ude97-\\ude9a\\udfe2]|\\ud82f[\\udc9f]|\\ud836[\\ude87-\\ude8b]|\\ud83a[\\udd5e-\\udd5f]"},ax=["liquidNode","inlineCode","emphasis","strong","delete","wikiLink","link","linkReference","image","imageReference","footnote","footnoteReference","sentence","whitespace","word","break","inlineMath"],ox=ax.concat(["tableCell","paragraph","heading"]),ux=new RegExp(sx),cx=new RegExp(ix);function lx(e,t){const[,n,r,s]=t.slice(e.position.start.offset,e.position.end.offset).match(/^\s*(\d+)(\.|\))(\s*)/);return{numberText:n,marker:r,leadingSpaces:s}}var px={mapAst:function(e,t){return function e(n,r,s){s=s||[];const i=Object.assign({},t(n,r,s));return i.children&&(i.children=i.children.map(((t,n)=>e(t,n,[i].concat(s))))),i}(e,null,null)},splitText:function(e,t){const n="non-cjk",r="cj-letter",s="cjk-punctuation",i=[];return("preserve"===t.proseWrap?e:e.replace(new RegExp("(".concat(rx,")\n(").concat(rx,")"),"g"),"$1$2")).split(/([\t\n ]+)/).forEach(((e,t,o)=>{t%2!=1?(0!==t&&t!==o.length-1||""!==e)&&e.split(new RegExp("(".concat(rx,")"))).forEach(((e,t,i)=>{(0!==t&&t!==i.length-1||""!==e)&&(t%2!=0?a(cx.test(e)?{type:"word",value:e,kind:s,hasLeadingPunctuation:!0,hasTrailingPunctuation:!0}:{type:"word",value:e,kind:ux.test(e)?"k-letter":r,hasLeadingPunctuation:!1,hasTrailingPunctuation:!1}):""!==e&&a({type:"word",value:e,kind:n,hasLeadingPunctuation:cx.test(e[0]),hasTrailingPunctuation:cx.test(ex(e))}))})):i.push({type:"whitespace",value:/\n/.test(e)?"\n":" "})})),i;function a(e){const t=ex(i);var a,o;t&&"word"===t.type&&(t.kind===n&&e.kind===r&&!t.hasTrailingPunctuation||t.kind===r&&e.kind===n&&!e.hasLeadingPunctuation?i.push({type:"whitespace",value:" "}):(a=n,o=s,t.kind===a&&e.kind===o||t.kind===o&&e.kind===a||[t.value,e.value].some((e=>/\u3000/.test(e)))||i.push({type:"whitespace",value:""}))),i.push(e)}},punctuationPattern:ix,getFencedCodeBlockValue:function(e,t){const{value:n}=e;return e.position.end.offset===t.length&&n.endsWith("\n")&&t.endsWith("\n")?n.slice(0,-1):n},getOrderedListItemInfo:lx,hasGitDiffFriendlyOrderedList:function(e,t){if(!e.ordered)return!1;if(e.children.length<2)return!1;const n=Number(lx(e.children[0],t.originalText).numberText),r=Number(lx(e.children[1],t.originalText).numberText);if(0===n&&e.children.length>2){const n=Number(lx(e.children[2],t.originalText).numberText);return 1===r&&1===n}return 1===r},INLINE_NODE_TYPES:ax,INLINE_NODE_WRAPPER_TYPES:ox,isAutolink:function(e){if(!e||"link"!==e.type||1!==e.children.length)return!1;const t=e.children[0];return t&&tx(e)===tx(t)&&nx(e)===nx(t)}};const{inferParserByLanguage:hx,getMaxContinuousCount:dx}=Ot,{builders:{hardline:fx,concat:Dx,markAsRoot:mx},utils:{replaceNewlinesWithLiterallines:gx}}=cn,{print:yx}=MC,{getFencedCodeBlockValue:Ex}=px;const{parse:Cx}=MC,Ax=["format","prettier"];function bx(e){const t="@(".concat(Ax.join("|"),")"),n=new RegExp(["\x3c!--\\s*".concat(t,"\\s*--\x3e"),"\x3c!--.*\r?\n[\\s\\S]*(^|\n)[^\\S\n]*".concat(t,"[^\\S\n]*($|\n)[\\s\\S]*\n.*--\x3e")].join("|"),"m"),r=e.match(n);return r&&0===r.index}var Fx={startWithPragma:bx,hasPragma:e=>bx(Cx(e).content.trimStart()),insertPragma:e=>{const t=Cx(e),n="\x3c!-- @".concat(Ax[0]," --\x3e");return t.frontMatter?"".concat(t.frontMatter.raw,"\n\n").concat(n,"\n\n").concat(t.content):"".concat(n,"\n\n").concat(t.content)}};const{getOrderedListItemInfo:xx,mapAst:vx,splitText:Sx}=px,Tx=/^([\u0000-\uffff]|[\ud800-\udbff][\udc00-\udfff])$/;function wx(e,t,n){return vx(e,(e=>{if(!e.children)return e;const r=e.children.reduce(((e,r)=>{const s=e[e.length-1];return s&&t(s,r)?e.splice(-1,1,n(s,r)):e.push(r),e}),[]);return Object.assign({},e,{children:r})}))}const{isFrontMatterNode:Bx}=Ot,{startWithPragma:Px}=Fx,Nx=new Set(["position","raw"]);function kx(e,t,n){return"front-matter"!==e.type&&"code"!==e.type&&"yaml"!==e.type&&"import"!==e.type&&"export"!==e.type&&"jsx"!==e.type||delete t.value,"list"===e.type&&delete t.isAligned,"list"!==e.type&&"listItem"!==e.type||(delete t.spread,delete t.loose),"text"===e.type?null:("inlineCode"===e.type&&(t.value=e.value.replace(/[\t\n ]+/g," ")),"wikiLink"===e.type&&(t.value=e.value.trim().replace(/[\t\n]+/g," ")),"definition"!==e.type&&"linkReference"!==e.type||(t.label=e.label.trim().replace(/[\t\n ]+/g," ").toLowerCase()),"definition"!==e.type&&"link"!==e.type&&"image"!==e.type||!e.title||(t.title=e.title.replace(/\\(["')])/g,"$1")),n&&"root"===n.type&&n.children.length>0&&(n.children[0]===e||Bx(n.children[0])&&n.children[1]===e)&&"html"===e.type&&Px(e.value)?null:void 0)}kx.ignoredProperties=Nx;var Ix=kx;const{getLast:Lx,getMinNotPresentContinuousCount:Ox,getMaxContinuousCount:_x,getStringWidth:Mx}=Ot,{builders:{breakParent:Rx,concat:jx,join:qx,line:Ux,literalline:$x,markAsRoot:Vx,hardline:Wx,softline:zx,ifBreak:Hx,fill:Gx,align:Xx,indent:Jx,group:Kx},utils:{normalizeDoc:Yx},printer:{printDocToString:Qx}}=cn,{replaceEndOfLineWith:Zx}=Ot,{insertPragma:ev}=Fx,{locStart:tv,locEnd:nv}=ZF,{getFencedCodeBlockValue:rv,hasGitDiffFriendlyOrderedList:sv,splitText:iv,punctuationPattern:av,INLINE_NODE_TYPES:ov,INLINE_NODE_WRAPPER_TYPES:uv,isAutolink:cv}=px,lv=new Set(["importExport"]),pv=["heading","tableCell","link","wikiLink"],hv=new Set(["listItem","definition","footnoteDefinition"]);function dv(e,t,n,r){const s=e.getValue(),i=null===s.checked?"":s.checked?"[x] ":"[ ] ";return jx([i,Ev(e,t,n,{processor:(e,s)=>{if(0===s&&"list"!==e.getValue().type)return Xx(" ".repeat(i.length),e.call(n));const a=" ".repeat((3,(o=t.tabWidth-r.length)<0?0:o>3?3:o));var o;return jx([a,Xx(a,e.call(n))])}})])}function fv(e,t){return function(e,t,n){n=n||(()=>!0);let r=-1;for(const s of t.children)if(s.type===e.type&&n(s)?r++:r=-1,s===e)return r}(e,t,(t=>t.ordered===e.ordered))}function Dv(e,t){const n=[].concat(t);let r,s=-1;for(;r=e.getParentNode(++s);)if(n.includes(r.type))return s;return-1}function mv(e,t){const n=Dv(e,t);return-1===n?null:e.getParentNode(n)}function gv(e,t,n){if("preserve"===n.proseWrap&&"\n"===t)return Wx;const r="always"===n.proseWrap&&!mv(e,pv);return""!==t?r?Ux:" ":r?zx:""}function yv(e,t,n){const r=[];let s=null;const{children:i}=e.getValue();return i.forEach(((e,t)=>{switch(Av(e)){case"start":null===s&&(s={index:t,offset:e.position.end.offset});break;case"end":null!==s&&(r.push({start:s,end:{index:t,offset:e.position.start.offset}}),s=null)}})),Ev(e,t,n,{processor:(e,s)=>{if(0!==r.length){const e=r[0];if(s===e.start.index)return jx([i[e.start.index].value,t.originalText.slice(e.start.offset,e.end.offset),i[e.end.index].value]);if(e.start.index<s&&s<e.end.index)return!1;if(s===e.end.index)return r.shift(),!1}return e.call(n)}})}function Ev(e,t,n,r){const s=(r=r||{}).postprocessor||jx,i=r.processor||(e=>e.call(n)),a=e.getValue(),o=[];let u;return e.each(((e,n)=>{const r=e.getValue(),s=i(e,n);if(!1!==s){const e={parts:o,prevNode:u,parentNode:a,options:t};(function(e,t){const n=0===t.parts.length,r=ov.includes(e.type),s="html"===e.type&&uv.includes(t.parentNode.type);return n||r||s})(r,e)||(o.push(Wx),u&&lv.has(u.type)||(function(e,t){const n=(t.prevNode&&t.prevNode.type)===e.type&&hv.has(e.type),r="listItem"===t.parentNode.type&&!t.parentNode.loose,s=t.prevNode&&"listItem"===t.prevNode.type&&t.prevNode.loose,i="next"===Av(t.prevNode),a="html"===e.type&&t.prevNode&&"html"===t.prevNode.type&&t.prevNode.position.end.line+1===e.position.start.line,o="html"===e.type&&"listItem"===t.parentNode.type&&t.prevNode&&"paragraph"===t.prevNode.type&&t.prevNode.position.end.line+1===e.position.start.line;return s||!(n||r||i||a||o)}(r,e)||bv(r,e))&&o.push(Wx),bv(r,e)&&o.push(Wx)),o.push(s),u=r}}),"children"),s(o)}function Cv(e){let t=e;for(;t.children&&0!==t.children.length;)t=t.children[t.children.length-1];return t}function Av(e){if("html"!==e.type)return!1;const t=e.value.match(/^<!--\s*prettier-ignore(?:-(start|end))?\s*-->$/);return null!==t&&(t[1]?t[1]:"next")}function bv(e,t){const n=t.prevNode&&"list"===t.prevNode.type,r="code"===e.type&&e.isIndented;return n&&r}function Fv(e,t){const n=[" "].concat(t||[]);return new RegExp(n.map((e=>"\\".concat(e))).join("|")).test(e)?"<".concat(e,">"):e}function xv(e,t,n){if(null==n&&(n=!0),!e)return"";if(n)return" "+xv(e,t,!1);if((e=e.replace(/\\(["')])/g,"$1")).includes('"')&&e.includes("'")&&!e.includes(")"))return"(".concat(e,")");const r=e.split("'").length-1,s=e.split('"').length-1,i=r>s?'"':s>r||t.singleQuote?"'":'"';return e=(e=e.replace(/\\/,"\\\\")).replace(new RegExp("(".concat(i,")"),"g"),"\\$1"),"".concat(i).concat(e).concat(i)}var vv={preprocess:function(e,t){return function(e){return wx(e,((e,t)=>"importExport"===e.type&&"importExport"===t.type),((e,t)=>({type:"importExport",value:e.value+"\n\n"+t.value,position:{start:e.position.start,end:t.position.end}})))}(e=function(e){return vx(e,(e=>"import"!==e.type&&"export"!==e.type?e:Object.assign({},e,{type:"importExport"})))}(e=function(e,t){return vx(e,((e,n,[r])=>{if("text"!==e.type)return e;let{value:s}=e;return"paragraph"===r.type&&(0===n&&(s=s.trimStart()),n===r.children.length-1&&(s=s.trimEnd())),{type:"sentence",position:e.position,children:Sx(s,t)}}))}(e=function(e,t){return vx(e,((e,t,n)=>{if("list"===e.type&&0!==e.children.length){for(let t=0;t<n.length;t++){const r=n[t];if("list"===r.type&&!r.isAligned)return e.isAligned=!1,e}e.isAligned=r(e)}return e}));function n(e){return 0===e.children.length?-1:e.children[0].position.start.column-1}function r(e){if(!e.ordered)return!0;const[r,s]=e.children;if(xx(r,t.originalText).leadingSpaces.length>1)return!0;const i=n(r);return-1!==i&&(1===e.children.length?i%t.tabWidth==0:i===n(s)&&(i%t.tabWidth==0||xx(s,t.originalText).leadingSpaces.length>1))}}(e=function(e,t){return vx(e,((e,n,r)=>{if("code"===e.type){const n=/^\n?( {4,}|\t)/.test(t.originalText.slice(e.position.start.offset,e.position.end.offset));if(e.isIndented=n,n)for(let e=0;e<r.length;e++){const t=r[e];if(t.hasIndentedCodeblock)break;"list"===t.type&&(t.hasIndentedCodeblock=!0)}}return e}))}(e=function(e){return vx(e,(e=>"inlineCode"!==e.type?e:Object.assign({},e,{value:e.value.replace(/\s+/g," ")})))}(e=function(e){return wx(e,((e,t)=>"text"===e.type&&"text"===t.type),((e,t)=>({type:"text",value:e.value+t.value,position:{start:e.position.start,end:t.position.end}})))}(e=function(e,t){return vx(e,(e=>"text"===e.type&&"*"!==e.value&&"_"!==e.value&&Tx.test(e.value)&&e.position.end.offset-e.position.start.offset!==e.value.length?Object.assign({},e,{value:t.originalText.slice(e.position.start.offset,e.position.end.offset)}):e))}(e,t))),t),t),t)))},print:function(e,t,n){const r=e.getValue();if(function(e){const t=mv(e,["linkReference","imageReference"]);return t&&("linkReference"!==t.type||"full"!==t.referenceType)}(e))return jx(iv(t.originalText.slice(r.position.start.offset,r.position.end.offset),t).map((n=>"word"===n.type?n.value:""===n.value?"":gv(e,n.value,t))));switch(r.type){case"front-matter":return t.originalText.slice(r.position.start.offset,r.position.end.offset);case"root":return 0===r.children.length?"":jx([Yx(yv(e,t,n)),lv.has(Cv(r).type)?"":Wx]);case"paragraph":return Ev(e,t,n,{postprocessor:Gx});case"sentence":return Ev(e,t,n);case"word":{let t=r.value.replace(/\*/g,"\\$&").replace(new RegExp(["(^|".concat(av,")(_+)"),"(_+)(".concat(av,"|$)")].join("|"),"g"),((e,t,n,r,s)=>(n?"".concat(t).concat(n):"".concat(r).concat(s)).replace(/_/g,"\\_")));const n=(e,t,n)=>"sentence"===e.type&&0===n,s=(e,t,n)=>cv(e.children[n-1]);return t!==r.value&&(e.match(void 0,n,s)||e.match(void 0,n,((e,t,n)=>"emphasis"===e.type&&0===n),s))&&(t=t.replace(/^(\\?[*_])+/,(e=>e.replace(/\\/g,"")))),t}case"whitespace":{const n=e.getParentNode(),s=n.children.indexOf(r),i=n.children[s+1],a=i&&/^>|^([*+-]|#{1,6}|\d+[).])$/.test(i.value)?"never":t.proseWrap;return gv(e,r.value,{proseWrap:a})}case"emphasis":{let s;if(cv(r.children[0]))s=t.originalText[r.position.start.offset];else{const t=e.getParentNode(),n=t.children.indexOf(r),i=t.children[n-1],a=t.children[n+1];s=i&&"sentence"===i.type&&i.children.length>0&&"word"===Lx(i.children).type&&!Lx(i.children).hasTrailingPunctuation||a&&"sentence"===a.type&&a.children.length>0&&"word"===a.children[0].type&&!a.children[0].hasLeadingPunctuation||mv(e,"emphasis")?"*":"_"}return jx([s,Ev(e,t,n),s])}case"strong":return jx(["**",Ev(e,t,n),"**"]);case"delete":return jx(["~~",Ev(e,t,n),"~~"]);case"inlineCode":{const e=Ox(r.value,"`"),t="`".repeat(e||1),n=e&&!/^\s/.test(r.value)?" ":"";return jx([t,n,r.value,n,t])}case"wikiLink":{let e="";return e="preserve"===t.proseWrap?r.value:r.value.replace(/[\t\n]+/g," "),jx(["[[",e,"]]"])}case"link":switch(t.originalText[r.position.start.offset]){case"<":{const e="mailto:",n=r.url.startsWith(e)&&t.originalText.slice(r.position.start.offset+1,r.position.start.offset+1+e.length)!==e?r.url.slice(e.length):r.url;return jx(["<",n,">"])}case"[":return jx(["[",Ev(e,t,n),"](",Fv(r.url,")"),xv(r.title,t),")"]);default:return t.originalText.slice(r.position.start.offset,r.position.end.offset)}case"image":return jx(["![",r.alt||"","](",Fv(r.url,")"),xv(r.title,t),")"]);case"blockquote":return jx(["> ",Xx("> ",Ev(e,t,n))]);case"heading":return jx(["#".repeat(r.depth)+" ",Ev(e,t,n)]);case"code":{if(r.isIndented){const e=" ".repeat(4);return Xx(e,jx([e,jx(Zx(r.value,Wx))]))}const e=t.__inJsTemplate?"~":"`",n=e.repeat(Math.max(3,_x(r.value,e)+1));return jx([n,r.lang||"",r.meta?" "+r.meta:"",Wx,jx(Zx(rv(r,t.originalText),Wx)),Wx,n])}case"html":{const t=e.getParentNode(),n="root"===t.type&&Lx(t.children)===r?r.value.trimEnd():r.value,s=/^<!--[\S\s]*-->$/.test(n);return jx(Zx(n,s?Wx:Vx($x)))}case"list":{const s=fv(r,e.getParentNode()),i=sv(r,t);return Ev(e,t,n,{processor:(e,a)=>{const o=function(){const e=r.ordered?(0===a?r.start:i?1:r.start+a)+(s%2==0?". ":") "):s%2==0?"- ":"* ";return r.isAligned||r.hasIndentedCodeblock?function(e,t){const n=function(){const n=e.length%t.tabWidth;return 0===n?0:t.tabWidth-n}();return e+" ".repeat(n>=4?0:n)}(e,t):e}(),u=e.getValue();return 2===u.children.length&&"html"===u.children[1].type&&u.children[0].position.start.column!==u.children[1].position.start.column?jx([o,dv(e,t,n,o)]):jx([o,Xx(" ".repeat(o.length),dv(e,t,n,o))])}})}case"thematicBreak":{const t=Dv(e,"list");return-1===t?"---":fv(e.getParentNode(t),e.getParentNode(t+1))%2==0?"***":"---"}case"linkReference":return jx(["[",Ev(e,t,n),"]","full"===r.referenceType?jx(["[",r.identifier,"]"]):"collapsed"===r.referenceType?"[]":""]);case"imageReference":return"full"===r.referenceType?jx(["![",r.alt||"","][",r.identifier,"]"]):jx(["![",r.alt,"]","collapsed"===r.referenceType?"[]":""]);case"definition":{const e="always"===t.proseWrap?Ux:" ";return Kx(jx([jx(["[",r.identifier,"]:"]),Jx(jx([e,Fv(r.url),null===r.title?"":jx([e,xv(r.title,t,!1)])]))]))}case"footnote":return jx(["[^",Ev(e,t,n),"]"]);case"footnoteReference":return jx(["[^",r.identifier,"]"]);case"footnoteDefinition":{const s=e.getParentNode().children[e.getName()+1],i=1===r.children.length&&"paragraph"===r.children[0].type&&("never"===t.proseWrap||"preserve"===t.proseWrap&&r.children[0].position.start.line===r.children[0].position.end.line);return jx(["[^",r.identifier,"]: ",i?Ev(e,t,n):Kx(jx([Xx(" ".repeat(4),Ev(e,t,n,{processor:(e,t)=>0===t?Kx(jx([zx,e.call(n)])):e.call(n)})),s&&"footnoteDefinition"===s.type?zx:""]))])}case"table":return function(e,t,n){const r=Wx.parts[0],s=e.getValue(),i=[],a=e.map((e=>e.map(((e,r)=>{const s=Qx(e.call(n),t).formatted,a=Mx(s);return i[r]=Math.max(i[r]||3,a),{text:s,width:a}}),"children")),"children"),o=c(!1);if("never"!==t.proseWrap)return jx([Rx,o]);const u=c(!0);return jx([Rx,Kx(Hx(u,o))]);function c(e){const t=[p(a[0],e),l(e)];return a.length>1&&t.push(qx(r,a.slice(1).map((t=>p(t,e))))),qx(r,t)}function l(e){const t=i.map(((t,n)=>{const r=s.align[n],i="center"===r||"left"===r?":":"-",a="center"===r||"right"===r?":":"-",o=e?"-":"-".repeat(t-2);return"".concat(i).concat(o).concat(a)}));return"| ".concat(t.join(" | ")," |")}function p(e,t){const n=e.map((({text:e,width:n},r)=>{if(t)return e;const a=i[r]-n,o=s.align[r];let u=0;"right"===o?u=a:"center"===o&&(u=Math.floor(a/2));const c=a-u;return"".concat(" ".repeat(u)).concat(e).concat(" ".repeat(c))}));return"| ".concat(n.join(" | ")," |")}}(e,t,n);case"tableCell":return Ev(e,t,n);case"break":return/\s/.test(t.originalText[r.position.start.offset])?jx(["  ",Vx($x)]):jx(["\\",Wx]);case"liquidNode":return jx(Zx(r.value,Wx));case"importExport":return jx([r.value,Wx]);case"jsx":return r.value;case"math":return jx(["$$",Wx,r.value?jx([jx(Zx(r.value,Wx)),Wx]):"","$$"]);case"inlineMath":return t.originalText.slice(tv(r),nv(r));default:throw new Error("Unknown markdown type ".concat(JSON.stringify(r.type)))}},embed:function(e,t,n,r){const s=e.getValue();if("code"===s.type&&null!==s.lang){const e=hx(s.lang,r);if(e){const t=r.__inJsTemplate?"~":"`",i=t.repeat(Math.max(3,dx(s.value,t)+1)),a=n(Ex(s,r.originalText),{parser:e},{stripTrailingHardline:!0});return mx(Dx([i,s.lang,s.meta?" "+s.meta:"",fx,gx(a),fx,i]))}}switch(s.type){case"front-matter":return yx(s,n);case"importExport":return Dx([n(s.value,{parser:"babel"},{stripTrailingHardline:!0}),fx]);case"jsx":return n("<$>".concat(s.value,"</$>"),{parser:"__js_expression",rootMarker:"mdx"},{stripTrailingHardline:!0})}return null},massageAstNode:Ix,hasPrettierIgnore:function(e){const t=+e.getName();return 0!==t&&"next"===Av(e.getParentNode().children[t-1])},insertPragma:ev},Sv={proseWrap:FC.proseWrap,singleQuote:FC.singleQuote},Tv={name:"Markdown",type:"prose",color:"#083fa1",aliases:["pandoc"],aceMode:"markdown",codemirrorMode:"gfm",codemirrorMimeType:"text/x-gfm",wrap:!0,extensions:[".md",".markdown",".mdown",".mdwn",".mdx",".mkd",".mkdn",".mkdown",".ronn",".workbook"],filenames:["contents.lr"],tmScope:"source.gfm",languageId:222},wv={languages:[bu(Tv,(e=>({since:"1.8.0",parsers:["markdown"],vscodeLanguageIds:["markdown"],filenames:e.filenames.concat(["README"]),extensions:e.extensions.filter((e=>".mdx"!==e))}))),bu(Tv,(()=>({name:"MDX",since:"1.15.0",parsers:["mdx"],vscodeLanguageIds:["mdx"],filenames:[],extensions:[".mdx"]})))],options:Sv,printers:{mdast:vv},parsers:{get remark(){return{}.parsers.remark},get markdown(){return{}.parsers.remark},get mdx(){return{}.parsers.mdx}}};const{isFrontMatterNode:Bv}=Ot,Pv=new Set(["sourceSpan","startSourceSpan","endSourceSpan","nameSpan","valueSpan"]);function Nv(e,t){return"text"===e.type||"comment"===e.type||Bv(e)||"yaml"===e.type||"toml"===e.type?null:("attribute"===e.type&&delete t.value,void("docType"===e.type&&delete t.value))}Nv.ignoredProperties=Pv;var kv=Nv;const{inferParserByLanguage:Iv,isFrontMatterNode:Lv}=Ot,{CSS_DISPLAY_TAGS:Ov,CSS_DISPLAY_DEFAULT:_v,CSS_WHITE_SPACE_TAGS:Mv,CSS_WHITE_SPACE_DEFAULT:Rv}={CSS_DISPLAY_TAGS:{area:"none",base:"none",basefont:"none",datalist:"none",head:"none",link:"none",meta:"none",noembed:"none",noframes:"none",param:"block",rp:"none",script:"block",source:"block",style:"none",template:"inline",track:"block",title:"none",html:"block",body:"block",address:"block",blockquote:"block",center:"block",div:"block",figure:"block",figcaption:"block",footer:"block",form:"block",header:"block",hr:"block",legend:"block",listing:"block",main:"block",p:"block",plaintext:"block",pre:"block",xmp:"block",slot:"contents",ruby:"ruby",rt:"ruby-text",article:"block",aside:"block",h1:"block",h2:"block",h3:"block",h4:"block",h5:"block",h6:"block",hgroup:"block",nav:"block",section:"block",dir:"block",dd:"block",dl:"block",dt:"block",ol:"block",ul:"block",li:"list-item",table:"table",caption:"table-caption",colgroup:"table-column-group",col:"table-column",thead:"table-header-group",tbody:"table-row-group",tfoot:"table-footer-group",tr:"table-row",td:"table-cell",th:"table-cell",fieldset:"block",button:"inline-block",details:"block",summary:"block",dialog:"block",meter:"inline-block",progress:"inline-block",object:"inline-block",video:"inline-block",audio:"inline-block",select:"inline-block",option:"block",optgroup:"block"},CSS_DISPLAY_DEFAULT:"inline",CSS_WHITE_SPACE_TAGS:{listing:"pre",plaintext:"pre",pre:"pre",xmp:"pre",nobr:"nowrap",table:"initial",textarea:"pre-wrap"},CSS_WHITE_SPACE_DEFAULT:"normal"},jv=Wv(["a","abbr","acronym","address","applet","area","article","aside","audio","b","base","basefont","bdi","bdo","bgsound","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","command","content","data","datalist","dd","del","details","dfn","dialog","dir","div","dl","dt","element","em","embed","fieldset","figcaption","figure","font","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","image","img","input","ins","isindex","kbd","keygen","label","legend","li","link","listing","main","map","mark","marquee","math","menu","menuitem","meta","meter","multicol","nav","nextid","nobr","noembed","noframes","noscript","object","ol","optgroup","option","output","p","param","picture","plaintext","pre","progress","q","rb","rbc","rp","rt","rtc","ruby","s","samp","script","section","select","shadow","slot","small","source","spacer","span","strike","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","tt","u","ul","var","video","wbr","xmp"]),qv=function(e,t){const n=Object.create(null);for(const r of Object.keys(e))n[r]=t(e[r],r);return n}({"*":["accesskey","autocapitalize","autofocus","class","contenteditable","dir","draggable","enterkeyhint","hidden","id","inputmode","is","itemid","itemprop","itemref","itemscope","itemtype","lang","nonce","slot","spellcheck","style","tabindex","title","translate"],a:["accesskey","charset","coords","download","href","hreflang","name","ping","referrerpolicy","rel","rev","shape","tabindex","target","type"],abbr:["title"],applet:["align","alt","archive","code","codebase","height","hspace","name","object","vspace","width"],area:["accesskey","alt","coords","download","href","hreflang","nohref","ping","referrerpolicy","rel","shape","tabindex","target","type"],audio:["autoplay","controls","crossorigin","loop","muted","preload","src"],base:["href","target"],basefont:["color","face","size"],bdo:["dir"],blockquote:["cite"],body:["alink","background","bgcolor","link","text","vlink"],br:["clear"],button:["accesskey","autofocus","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","name","tabindex","type","value"],canvas:["height","width"],caption:["align"],col:["align","char","charoff","span","valign","width"],colgroup:["align","char","charoff","span","valign","width"],data:["value"],del:["cite","datetime"],details:["open"],dfn:["title"],dialog:["open"],dir:["compact"],div:["align"],dl:["compact"],embed:["height","src","type","width"],fieldset:["disabled","form","name"],font:["color","face","size"],form:["accept","accept-charset","action","autocomplete","enctype","method","name","novalidate","target"],frame:["frameborder","longdesc","marginheight","marginwidth","name","noresize","scrolling","src"],frameset:["cols","rows"],h1:["align"],h2:["align"],h3:["align"],h4:["align"],h5:["align"],h6:["align"],head:["profile"],hr:["align","noshade","size","width"],html:["manifest","version"],iframe:["align","allow","allowfullscreen","allowpaymentrequest","allowusermedia","frameborder","height","loading","longdesc","marginheight","marginwidth","name","referrerpolicy","sandbox","scrolling","src","srcdoc","width"],img:["align","alt","border","crossorigin","decoding","height","hspace","ismap","loading","longdesc","name","referrerpolicy","sizes","src","srcset","usemap","vspace","width"],input:["accept","accesskey","align","alt","autocomplete","autofocus","checked","dirname","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","height","ismap","list","max","maxlength","min","minlength","multiple","name","pattern","placeholder","readonly","required","size","src","step","tabindex","title","type","usemap","value","width"],ins:["cite","datetime"],isindex:["prompt"],label:["accesskey","for","form"],legend:["accesskey","align"],li:["type","value"],link:["as","charset","color","crossorigin","disabled","href","hreflang","imagesizes","imagesrcset","integrity","media","nonce","referrerpolicy","rel","rev","sizes","target","title","type"],map:["name"],menu:["compact"],meta:["charset","content","http-equiv","name","scheme"],meter:["high","low","max","min","optimum","value"],object:["align","archive","border","classid","codebase","codetype","data","declare","form","height","hspace","name","standby","tabindex","type","typemustmatch","usemap","vspace","width"],ol:["compact","reversed","start","type"],optgroup:["disabled","label"],option:["disabled","label","selected","value"],output:["for","form","name"],p:["align"],param:["name","type","value","valuetype"],pre:["width"],progress:["max","value"],q:["cite"],script:["async","charset","crossorigin","defer","integrity","language","nomodule","nonce","referrerpolicy","src","type"],select:["autocomplete","autofocus","disabled","form","multiple","name","required","size","tabindex"],slot:["name"],source:["media","sizes","src","srcset","type"],style:["media","nonce","title","type"],table:["align","bgcolor","border","cellpadding","cellspacing","frame","rules","summary","width"],tbody:["align","char","charoff","valign"],td:["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"],textarea:["accesskey","autocomplete","autofocus","cols","dirname","disabled","form","maxlength","minlength","name","placeholder","readonly","required","rows","tabindex","wrap"],tfoot:["align","char","charoff","valign"],th:["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"],thead:["align","char","charoff","valign"],time:["datetime"],tr:["align","bgcolor","char","charoff","valign"],track:["default","kind","label","src","srclang"],ul:["compact","type"],video:["autoplay","controls","crossorigin","height","loop","muted","playsinline","poster","preload","src","width"]},Wv),Uv=new Set(["\t","\n","\f","\r"," "]),$v=e=>e.replace(/[\t\n\f\r ]+$/,""),Vv=e=>e.match(/^[\t\n\f\r ]*/)[0];function Wv(e){const t=Object.create(null);for(const n of e)t[n]=!0;return t}function zv(e,t){return!("ieConditionalComment"!==e.type||!e.lastChild||e.lastChild.isSelfClosing||e.lastChild.endSourceSpan)||"ieConditionalComment"===e.type&&!e.complete||!(!rS(e)||!e.children.some((e=>"text"!==e.type&&"interpolation"!==e.type)))||!(!cS(e,t)||Gv(e)||"interpolation"===e.type)}function Hv(e){return"attribute"!==e.type&&!!e.parent&&"number"==typeof e.index&&0!==e.index&&function(e){return"comment"===e.type&&"prettier-ignore"===e.value.trim()}(e.parent.children[e.index-1])}function Gv(e){return"element"===e.type&&("script"===e.fullName||"style"===e.fullName||"svg:style"===e.fullName||sS(e)&&("script"===e.name||"style"===e.name))}function Xv(e){return iS(e).startsWith("pre")}function Jv(e){return"element"===e.type&&0!==e.children.length&&(["html","head","ul","ol","select"].includes(e.name)||e.cssDisplay.startsWith("table")&&"table-cell"!==e.cssDisplay)}function Kv(e){return eS(e)||"element"===e.type&&"br"===e.fullName||Yv(e)}function Yv(e){return Qv(e)&&Zv(e)}function Qv(e){return e.hasLeadingSpaces&&(e.prev?e.prev.sourceSpan.end.line<e.sourceSpan.start.line:"root"===e.parent.type||e.parent.startSourceSpan.end.line<e.sourceSpan.start.line)}function Zv(e){return e.hasTrailingSpaces&&(e.next?e.next.sourceSpan.start.line>e.sourceSpan.end.line:"root"===e.parent.type||e.parent.endSourceSpan&&e.parent.endSourceSpan.start.line>e.sourceSpan.end.line)}function eS(e){switch(e.type){case"ieConditionalComment":case"comment":case"directive":return!0;case"element":return["script","select"].includes(e.name)}return!1}function tS(e){const{type:t,lang:n}=e.attrMap;return"module"===t||"text/javascript"===t||"text/babel"===t||"application/javascript"===t||"jsx"===n?"babel":"application/x-typescript"===t||"ts"===n||"tsx"===n?"typescript":"text/markdown"===t?"markdown":"text/html"===t?"html":t&&(t.endsWith("json")||t.endsWith("importmap"))?"json":"text/x-handlebars-template"===t?"glimmer":void 0}function nS(e){return"block"===e||"list-item"===e||e.startsWith("table")}function rS(e){return iS(e).startsWith("pre")}function sS(e){return"element"===e.type&&!e.hasExplicitNamespace&&!["html","svg"].includes(e.namespace)}function iS(e){return"element"===e.type&&(!e.namespace||sS(e))&&Mv[e.name]||Rv}const aS=new Set(["template","style","script"]);function oS(e,t){return uS(e,t)&&!aS.has(e.fullName)}function uS(e,t){return"vue"===t.parser&&"element"===e.type&&"root"===e.parent.type&&"html"!==e.fullName.toLowerCase()}function cS(e,t){return uS(e,t)&&(oS(e,t)||e.attrMap.lang&&"html"!==e.attrMap.lang)}var lS={HTML_ELEMENT_ATTRIBUTES:qv,HTML_TAGS:jv,htmlTrim:e=>(e=>e.replace(/^[\t\n\f\r ]+/,""))($v(e)),htmlTrimPreserveIndentation:e=>(e=>e.replace(/^[\t\f\r ]*?\n/g,""))($v(e)),splitByHtmlWhitespace:e=>e.split(/[\t\n\f\r ]+/),hasHtmlWhitespace:e=>/[\t\n\f\r ]/.test(e),getLeadingAndTrailingHtmlWhitespace:e=>{const[,t,n,r]=e.match(/^([\t\n\f\r ]*)([\S\s]*?)([\t\n\f\r ]*)$/);return{leadingWhitespace:t,trailingWhitespace:r,text:n}},canHaveInterpolation:function(e){return e.children&&!Gv(e)},countChars:function(e,t){let n=0;for(let r=0;r<e.length;r++)e[r]===t&&n++;return n},countParents:function(e,t){let n=0;for(let r=e.stack.length-1;r>=0;r--){const s=e.stack[r];s&&"object"==typeof s&&!Array.isArray(s)&&t(s)&&n++}return n},dedentString:function(e,t=function(e){let t=1/0;for(const n of e.split("\n")){if(0===n.length)continue;if(!Uv.has(n[0]))return 0;const e=Vv(n).length;n.length!==e&&e<t&&(t=e)}return t===1/0?0:t}(e)){return 0===t?e:e.split("\n").map((e=>e.slice(t))).join("\n")},forceBreakChildren:Jv,forceBreakContent:function(e){return Jv(e)||"element"===e.type&&0!==e.children.length&&(["body","script","style"].includes(e.name)||e.children.some((e=>function(e){return e.children&&e.children.some((e=>"text"!==e.type))}(e))))||e.firstChild&&e.firstChild===e.lastChild&&"text"!==e.firstChild.type&&Qv(e.firstChild)&&(!e.lastChild.isTrailingSpaceSensitive||Zv(e.lastChild))},forceNextEmptyLine:function(e){return Lv(e)||e.next&&e.sourceSpan.end&&e.sourceSpan.end.line+1<e.next.sourceSpan.start.line},getLastDescendant:function e(t){return t.lastChild?e(t.lastChild):t},getNodeCssStyleDisplay:function(e,t){if(e.prev&&"comment"===e.prev.type){const t=e.prev.value.match(/^\s*display:\s*([a-z]+)\s*$/);if(t)return t[1]}let n=!1;if("element"===e.type&&"svg"===e.namespace){if(!function(e,t){let n=e;for(;n;){if(t(n))return!0;n=n.parent}return!1}(e,(e=>"svg:foreignObject"===e.fullName)))return"svg"===e.name?"inline-block":"block";n=!0}switch(t.htmlWhitespaceSensitivity){case"strict":return"inline";case"ignore":return"block";default:return"vue"===t.parser&&e.parent&&"root"===e.parent.type?"block":"element"===e.type&&(!e.namespace||n||sS(e))&&Ov[e.name]||_v}},getNodeCssStyleWhiteSpace:iS,getPrettierIgnoreAttributeCommentData:function(e){const t=e.trim().match(/^prettier-ignore-attribute(?:\s+([^]+))?$/);return!!t&&(!t[1]||t[1].split(/\s+/))},hasPrettierIgnore:Hv,inferScriptParser:function(e,t){return"script"!==e.name||e.attrMap.src?"style"===e.name?function(e){const{lang:t}=e.attrMap;return t&&"postcss"!==t&&"css"!==t?"scss"===t?"scss":"less"===t?"less":void 0:"css"}(e):t&&cS(e,t)?tS(e)||!("src"in e.attrMap)&&Iv(e.attrMap.lang,t):void 0:e.attrMap.lang||e.attrMap.type?tS(e):"babel"},isVueCustomBlock:oS,isVueNonHtmlBlock:cS,isVueSlotAttribute:function(e){const t=e.fullName;return"#"===t.charAt(0)||"slot-scope"===t||"v-slot"===t||t.startsWith("v-slot:")},isVueSfcBindingsAttribute:function(e,t){const n=e.parent;if(!uS(n,t))return!1;const r=n.fullName,s=e.fullName;return"script"===r&&"setup"===s||"style"===r&&"vars"===s},isDanglingSpaceSensitiveNode:function(e){return!(nS(t=e.cssDisplay)||"inline-block"===t||Gv(e));var t},isIndentationSensitiveNode:Xv,isLeadingSpaceSensitiveNode:function(e,t){const n=function(){return!(Lv(e)||("text"!==e.type&&"interpolation"!==e.type||!e.prev||"text"!==e.prev.type&&"interpolation"!==e.prev.type)&&(!e.parent||"none"===e.parent.cssDisplay||!rS(e.parent)&&(!e.prev&&("root"===e.parent.type||rS(e)&&e.parent||Gv(e.parent)||oS(e.parent,t)||(n=e.parent.cssDisplay,nS(n)||"inline-block"===n))||e.prev&&!function(e){return!nS(e)}(e.prev.cssDisplay))));var n}();return n&&!e.prev&&e.parent&&e.parent.tagDefinition&&e.parent.tagDefinition.ignoreFirstLf?"interpolation"===e.type:n},isPreLikeNode:rS,isScriptLikeTag:Gv,isTextLikeNode:function(e){return"text"===e.type||"comment"===e.type},isTrailingSpaceSensitiveNode:function(e,t){return!(Lv(e)||("text"!==e.type&&"interpolation"!==e.type||!e.next||"text"!==e.next.type&&"interpolation"!==e.next.type)&&(!e.parent||"none"===e.parent.cssDisplay||!rS(e.parent)&&(!e.next&&("root"===e.parent.type||rS(e)&&e.parent||Gv(e.parent)||oS(e.parent,t)||(n=e.parent.cssDisplay,nS(n)||"inline-block"===n))||e.next&&!function(e){return!nS(e)}(e.next.cssDisplay))));var n},isWhitespaceSensitiveNode:function(e){return Gv(e)||"interpolation"===e.type||Xv(e)},isUnknownNamespace:sS,preferHardlineAsLeadingSpaces:function(e){return eS(e)||e.prev&&Kv(e.prev)||Yv(e)},preferHardlineAsTrailingSpaces:Kv,shouldNotPrintClosingTag:function(e,t){return!e.isSelfClosing&&!e.endSourceSpan&&(Hv(e)||zv(e.parent,t))},shouldPreserveContent:zv,unescapeQuoteEntities:function(e){return e.replace(/&apos;/g,"'").replace(/&quot;/g,'"')}},pS=Me((function(e,t){function n(e){return t.$0<=e&&e<=t.$9}Object.defineProperty(t,"__esModule",{value:!0}),t.$EOF=0,t.$BSPACE=8,t.$TAB=9,t.$LF=10,t.$VTAB=11,t.$FF=12,t.$CR=13,t.$SPACE=32,t.$BANG=33,t.$DQ=34,t.$HASH=35,t.$$=36,t.$PERCENT=37,t.$AMPERSAND=38,t.$SQ=39,t.$LPAREN=40,t.$RPAREN=41,t.$STAR=42,t.$PLUS=43,t.$COMMA=44,t.$MINUS=45,t.$PERIOD=46,t.$SLASH=47,t.$COLON=58,t.$SEMICOLON=59,t.$LT=60,t.$EQ=61,t.$GT=62,t.$QUESTION=63,t.$0=48,t.$7=55,t.$9=57,t.$A=65,t.$E=69,t.$F=70,t.$X=88,t.$Z=90,t.$LBRACKET=91,t.$BACKSLASH=92,t.$RBRACKET=93,t.$CARET=94,t.$_=95,t.$a=97,t.$b=98,t.$e=101,t.$f=102,t.$n=110,t.$r=114,t.$t=116,t.$u=117,t.$v=118,t.$x=120,t.$z=122,t.$LBRACE=123,t.$BAR=124,t.$RBRACE=125,t.$NBSP=160,t.$PIPE=124,t.$TILDA=126,t.$AT=64,t.$BT=96,t.isWhitespace=function(e){return e>=t.$TAB&&e<=t.$SPACE||e==t.$NBSP},t.isDigit=n,t.isAsciiLetter=function(e){return e>=t.$a&&e<=t.$z||e>=t.$A&&e<=t.$Z},t.isAsciiHexDigit=function(e){return e>=t.$a&&e<=t.$f||e>=t.$A&&e<=t.$F||n(e)},t.isNewLine=function(e){return e===t.$LF||e===t.$CR},t.isOctalDigit=function(e){return t.$0<=e&&e<=t.$7}})),hS=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(e,t,n){this.filePath=e,this.name=t,this.members=n}assertNoMembers(){if(this.members.length)throw new Error("Illegal state: symbol without members expected, but got ".concat(JSON.stringify(this),"."))}}t.StaticSymbol=n,t.StaticSymbolCache=class{constructor(){this.cache=new Map}get(e,t,r){const s=(r=r||[]).length?".".concat(r.join(".")):"",i='"'.concat(e,'".').concat(t).concat(s);let a=this.cache.get(i);return a||(a=new n(e,t,r),this.cache.set(i,a)),a}}})),dS=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});const n=/-+([a-z0-9])/g;function r(e,t,n){const r=e.indexOf(t);return-1==r?n:[e.slice(0,r).trim(),e.slice(r+1).trim()]}function s(e,t,n){return Array.isArray(e)?t.visitArray(e,n):"object"==typeof(r=e)&&null!==r&&Object.getPrototypeOf(r)===o?t.visitStringMap(e,n):null==e||"string"==typeof e||"number"==typeof e||"boolean"==typeof e?t.visitPrimitive(e,n):t.visitOther(e,n);var r}t.dashCaseToCamelCase=function(e){return e.replace(n,((...e)=>e[1].toUpperCase()))},t.splitAtColon=function(e,t){return r(e,":",t)},t.splitAtPeriod=function(e,t){return r(e,".",t)},t.visitValue=s,t.isDefined=function(e){return null!=e},t.noUndefined=function(e){return void 0===e?null:e},t.ValueTransformer=class{visitArray(e,t){return e.map((e=>s(e,this,t)))}visitStringMap(e,t){const n={};return Object.keys(e).forEach((r=>{n[r]=s(e[r],this,t)})),n}visitPrimitive(e,t){return e}visitOther(e,t){return e}},t.SyncAsync={assertSync:e=>{if(u(e))throw new Error("Illegal state: value cannot be a promise");return e},then:(e,t)=>u(e)?e.then(t):t(e),all:e=>e.some(u)?Promise.all(e):e},t.error=function(e){throw new Error("Internal Error: ".concat(e))},t.syntaxError=function(e,t){const n=Error(e);return n[i]=!0,t&&(n[a]=t),n};const i="ngSyntaxError",a="ngParseErrors";t.isSyntaxError=function(e){return e[i]},t.getParseErrors=function(e){return e[a]||[]},t.escapeRegExp=function(e){return e.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")};const o=Object.getPrototypeOf({});function u(e){return!!e&&"function"==typeof e.then}t.utf8Encode=function(e){let t="";for(let n=0;n<e.length;n++){let r=e.charCodeAt(n);if(r>=55296&&r<=56319&&e.length>n+1){const t=e.charCodeAt(n+1);t>=56320&&t<=57343&&(n++,r=(r-55296<<10)+t-56320+65536)}r<=127?t+=String.fromCharCode(r):r<=2047?t+=String.fromCharCode(r>>6&31|192,63&r|128):r<=65535?t+=String.fromCharCode(r>>12|224,r>>6&63|128,63&r|128):r<=2097151&&(t+=String.fromCharCode(r>>18&7|240,r>>12&63|128,r>>6&63|128,63&r|128))}return t},t.stringify=function e(t){if("string"==typeof t)return t;if(t instanceof Array)return"["+t.map(e).join(", ")+"]";if(null==t)return""+t;if(t.overriddenName)return"".concat(t.overriddenName);if(t.name)return"".concat(t.name);if(!t.toString)return"object";const n=t.toString();if(null==n)return""+n;const r=n.indexOf("\n");return-1===r?n:n.substring(0,r)},t.resolveForwardRef=function(e){return"function"==typeof e&&e.hasOwnProperty("__forward_ref__")?e():e},t.isPromise=u,t.Version=class{constructor(e){this.full=e;const t=e.split(".");this.major=t[0],this.minor=t[1],this.patch=t.slice(2).join(".")}};const c="undefined"!=typeof window&&window,l="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,p=void 0!==_e&&_e||c||l;t.global=p})),fS=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});const n=/^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;function r(e){return e.replace(/\W/g,"_")}t.sanitizeIdentifier=r;let s=0;function i(e){if(!e||!e.reference)return null;const t=e.reference;if(t instanceof hS.StaticSymbol)return t.name;if(t.__anonymousType)return t.__anonymousType;let n=dS.stringify(t);return n.indexOf("(")>=0?(n="anonymous_".concat(s++),t.__anonymousType=n):n=r(n),n}var a;t.identifierName=i,t.identifierModuleUrl=function(e){const t=e.reference;return t instanceof hS.StaticSymbol?t.filePath:"./".concat(dS.stringify(t))},t.viewClassName=function(e,t){return"View_".concat(i({reference:e}),"_").concat(t)},t.rendererTypeName=function(e){return"RenderType_".concat(i({reference:e}))},t.hostViewClassName=function(e){return"HostView_".concat(i({reference:e}))},t.componentFactoryName=function(e){return"".concat(i({reference:e}),"NgFactory")},function(e){e[e.Pipe=0]="Pipe",e[e.Directive=1]="Directive",e[e.NgModule=2]="NgModule",e[e.Injectable=3]="Injectable"}(a=t.CompileSummaryKind||(t.CompileSummaryKind={})),t.tokenName=function(e){return null!=e.value?r(e.value):i(e.identifier)},t.tokenReference=function(e){return null!=e.identifier?e.identifier.reference:e.value},t.CompileStylesheetMetadata=class{constructor({moduleUrl:e,styles:t,styleUrls:n}={}){this.moduleUrl=e||null,this.styles=u(t),this.styleUrls=u(n)}},t.CompileTemplateMetadata=class{constructor({encapsulation:e,template:t,templateUrl:n,htmlAst:r,styles:s,styleUrls:i,externalStylesheets:a,animations:o,ngContentSelectors:l,interpolation:p,isInline:h,preserveWhitespaces:d}){if(this.encapsulation=e,this.template=t,this.templateUrl=n,this.htmlAst=r,this.styles=u(s),this.styleUrls=u(i),this.externalStylesheets=u(a),this.animations=o?c(o):[],this.ngContentSelectors=l||[],p&&2!=p.length)throw new Error("'interpolation' should have a start and an end symbol.");this.interpolation=p,this.isInline=h,this.preserveWhitespaces=d}toSummary(){return{ngContentSelectors:this.ngContentSelectors,encapsulation:this.encapsulation,styles:this.styles,animations:this.animations}}};class o{static create({isHost:e,type:t,isComponent:r,selector:s,exportAs:i,changeDetection:a,inputs:u,outputs:c,host:l,providers:p,viewProviders:h,queries:d,guards:f,viewQueries:D,entryComponents:m,template:g,componentViewType:y,rendererType:E,componentFactory:C}){const A={},b={},F={};null!=l&&Object.keys(l).forEach((e=>{const t=l[e],r=e.match(n);null===r?F[e]=t:null!=r[1]?b[r[1]]=t:null!=r[2]&&(A[r[2]]=t)}));const x={};null!=u&&u.forEach((e=>{const t=dS.splitAtColon(e,[e,e]);x[t[0]]=t[1]}));const v={};return null!=c&&c.forEach((e=>{const t=dS.splitAtColon(e,[e,e]);v[t[0]]=t[1]})),new o({isHost:e,type:t,isComponent:!!r,selector:s,exportAs:i,changeDetection:a,inputs:x,outputs:v,hostListeners:A,hostProperties:b,hostAttributes:F,providers:p,viewProviders:h,queries:d,guards:f,viewQueries:D,entryComponents:m,template:g,componentViewType:y,rendererType:E,componentFactory:C})}constructor({isHost:e,type:t,isComponent:n,selector:r,exportAs:s,changeDetection:i,inputs:a,outputs:o,hostListeners:c,hostProperties:l,hostAttributes:p,providers:h,viewProviders:d,queries:f,guards:D,viewQueries:m,entryComponents:g,template:y,componentViewType:E,rendererType:C,componentFactory:A}){this.isHost=!!e,this.type=t,this.isComponent=n,this.selector=r,this.exportAs=s,this.changeDetection=i,this.inputs=a,this.outputs=o,this.hostListeners=c,this.hostProperties=l,this.hostAttributes=p,this.providers=u(h),this.viewProviders=u(d),this.queries=u(f),this.guards=D,this.viewQueries=u(m),this.entryComponents=u(g),this.template=y,this.componentViewType=E,this.rendererType=C,this.componentFactory=A}toSummary(){return{summaryKind:a.Directive,type:this.type,isComponent:this.isComponent,selector:this.selector,exportAs:this.exportAs,inputs:this.inputs,outputs:this.outputs,hostListeners:this.hostListeners,hostProperties:this.hostProperties,hostAttributes:this.hostAttributes,providers:this.providers,viewProviders:this.viewProviders,queries:this.queries,guards:this.guards,viewQueries:this.viewQueries,entryComponents:this.entryComponents,changeDetection:this.changeDetection,template:this.template&&this.template.toSummary(),componentViewType:this.componentViewType,rendererType:this.rendererType,componentFactory:this.componentFactory}}}function u(e){return e||[]}function c(e){return e.reduce(((e,t)=>{const n=Array.isArray(t)?c(t):t;return e.concat(n)}),[])}function l(e){return e.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/,"ng:///")}t.CompileDirectiveMetadata=o,t.CompilePipeMetadata=class{constructor({type:e,name:t,pure:n}){this.type=e,this.name=t,this.pure=!!n}toSummary(){return{summaryKind:a.Pipe,type:this.type,name:this.name,pure:this.pure}}},t.CompileShallowModuleMetadata=class{},t.CompileNgModuleMetadata=class{constructor({type:e,providers:t,declaredDirectives:n,exportedDirectives:r,declaredPipes:s,exportedPipes:i,entryComponents:a,bootstrapComponents:o,importedModules:c,exportedModules:l,schemas:p,transitiveModule:h,id:d}){this.type=e||null,this.declaredDirectives=u(n),this.exportedDirectives=u(r),this.declaredPipes=u(s),this.exportedPipes=u(i),this.providers=u(t),this.entryComponents=u(a),this.bootstrapComponents=u(o),this.importedModules=u(c),this.exportedModules=u(l),this.schemas=u(p),this.id=d||null,this.transitiveModule=h||null}toSummary(){const e=this.transitiveModule;return{summaryKind:a.NgModule,type:this.type,entryComponents:e.entryComponents,providers:e.providers,modules:e.modules,exportedDirectives:e.exportedDirectives,exportedPipes:e.exportedPipes}}},t.TransitiveCompileNgModuleMetadata=class{constructor(){this.directivesSet=new Set,this.directives=[],this.exportedDirectivesSet=new Set,this.exportedDirectives=[],this.pipesSet=new Set,this.pipes=[],this.exportedPipesSet=new Set,this.exportedPipes=[],this.modulesSet=new Set,this.modules=[],this.entryComponentsSet=new Set,this.entryComponents=[],this.providers=[]}addProvider(e,t){this.providers.push({provider:e,module:t})}addDirective(e){this.directivesSet.has(e.reference)||(this.directivesSet.add(e.reference),this.directives.push(e))}addExportedDirective(e){this.exportedDirectivesSet.has(e.reference)||(this.exportedDirectivesSet.add(e.reference),this.exportedDirectives.push(e))}addPipe(e){this.pipesSet.has(e.reference)||(this.pipesSet.add(e.reference),this.pipes.push(e))}addExportedPipe(e){this.exportedPipesSet.has(e.reference)||(this.exportedPipesSet.add(e.reference),this.exportedPipes.push(e))}addModule(e){this.modulesSet.has(e.reference)||(this.modulesSet.add(e.reference),this.modules.push(e))}addEntryComponent(e){this.entryComponentsSet.has(e.componentType)||(this.entryComponentsSet.add(e.componentType),this.entryComponents.push(e))}},t.ProviderMeta=class{constructor(e,{useClass:t,useValue:n,useExisting:r,useFactory:s,deps:i,multi:a}){this.token=e,this.useClass=t||null,this.useValue=n,this.useExisting=r,this.useFactory=s||null,this.dependencies=i||null,this.multi=!!a}},t.flatten=c,t.templateSourceUrl=function(e,t,n){let r;return r=n.isInline?t.type.reference instanceof hS.StaticSymbol?"".concat(t.type.reference.filePath,".").concat(t.type.reference.name,".html"):"".concat(i(e),"/").concat(i(t.type),".html"):n.templateUrl,t.type.reference instanceof hS.StaticSymbol?r:l(r)},t.sharedStylesheetJitUrl=function(e,t){const n=e.moduleUrl.split(/\/\\/g),r=n[n.length-1];return l("css/".concat(t).concat(r,".ngstyle.js"))},t.ngModuleJitUrl=function(e){return l("".concat(i(e.type),"/module.ngfactory.js"))},t.templateJitUrl=function(e,t){return l("".concat(i(e),"/").concat(i(t.type),".ngfactory.js"))}})),DS=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(e,t,n,r){this.file=e,this.offset=t,this.line=n,this.col=r}toString(){return null!=this.offset?"".concat(this.file.url,"@").concat(this.line,":").concat(this.col):this.file.url}moveBy(e){const t=this.file.content,r=t.length;let s=this.offset,i=this.line,a=this.col;for(;s>0&&e<0;)if(s--,e++,t.charCodeAt(s)==pS.$LF){i--;const e=t.substr(0,s-1).lastIndexOf(String.fromCharCode(pS.$LF));a=e>0?s-e:s}else a--;for(;s<r&&e>0;){const n=t.charCodeAt(s);s++,e--,n==pS.$LF?(i++,a=0):a++}return new n(this.file,s,i,a)}getContext(e,t){const n=this.file.content;let r=this.offset;if(null!=r){r>n.length-1&&(r=n.length-1);let s=r,i=0,a=0;for(;i<e&&r>0&&(r--,i++,"\n"!=n[r]||++a!=t););for(i=0,a=0;i<e&&s<n.length-1&&(s++,i++,"\n"!=n[s]||++a!=t););return{before:n.substring(r,this.offset),after:n.substring(this.offset,s+1)}}return null}}t.ParseLocation=n;class r{constructor(e,t){this.content=e,this.url=t}}t.ParseSourceFile=r;class s{constructor(e,t,n=null){this.start=e,this.end=t,this.details=n}toString(){return this.start.file.content.substring(this.start.offset,this.end.offset)}}var i;t.ParseSourceSpan=s,t.EMPTY_PARSE_LOCATION=new n(new r("",""),0,0,0),t.EMPTY_SOURCE_SPAN=new s(t.EMPTY_PARSE_LOCATION,t.EMPTY_PARSE_LOCATION),function(e){e[e.WARNING=0]="WARNING",e[e.ERROR=1]="ERROR"}(i=t.ParseErrorLevel||(t.ParseErrorLevel={})),t.ParseError=class{constructor(e,t,n=i.ERROR){this.span=e,this.msg=t,this.level=n}contextualMessage(){const e=this.span.start.getContext(100,3);return e?"".concat(this.msg,' ("').concat(e.before,"[").concat(i[this.level]," ->]").concat(e.after,'")'):this.msg}toString(){const e=this.span.details?", ".concat(this.span.details):"";return"".concat(this.contextualMessage(),": ").concat(this.span.start).concat(e)}},t.typeSourceSpan=function(e,t){const i=fS.identifierModuleUrl(t),a=null!=i?"in ".concat(e," ").concat(fS.identifierName(t)," in ").concat(i):"in ".concat(e," ").concat(fS.identifierName(t)),o=new r("",a);return new s(new n(o,-1,-1,-1),new n(o,-1,-1,-1))},t.r3JitTypeSourceSpan=function(e,t,i){const a="in ".concat(e," ").concat(t," in ").concat(i),o=new r("",a);return new s(new n(o,-1,-1,-1),new n(o,-1,-1,-1))}}));const{ParseSourceSpan:mS}=DS,{htmlTrim:gS,getLeadingAndTrailingHtmlWhitespace:yS,hasHtmlWhitespace:ES,canHaveInterpolation:CS,getNodeCssStyleDisplay:AS,isDanglingSpaceSensitiveNode:bS,isIndentationSensitiveNode:FS,isLeadingSpaceSensitiveNode:xS,isTrailingSpaceSensitiveNode:vS,isWhitespaceSensitiveNode:SS}=lS,TS=[function(e){return e.map((e=>{if("element"===e.type&&e.tagDefinition.ignoreFirstLf&&0!==e.children.length&&"text"===e.children[0].type&&"\n"===e.children[0].value[0]){const[t,...n]=e.children;return e.clone({children:1===t.value.length?n:[t.clone({value:t.value.slice(1)}),...n]})}return e}))},function(e){const t=e=>"element"===e.type&&e.prev&&"ieConditionalStartComment"===e.prev.type&&e.prev.sourceSpan.end.offset===e.startSourceSpan.start.offset&&e.firstChild&&"ieConditionalEndComment"===e.firstChild.type&&e.firstChild.sourceSpan.start.offset===e.startSourceSpan.end.offset;return e.map((e=>{if(e.children){const n=e.children.map(t);if(n.some(Boolean)){const t=[];for(let r=0;r<e.children.length;r++){const s=e.children[r];if(!n[r+1])if(n[r]){const e=s.prev,n=s.firstChild,r=new mS(e.sourceSpan.start,n.sourceSpan.end),i=new mS(r.start,s.sourceSpan.end);t.push(s.clone({condition:e.condition,sourceSpan:i,startSourceSpan:r,children:s.children.slice(1)}))}else t.push(s)}return e.clone({children:t})}}return e}))},function(e){return function(e,t,n){return e.map((e=>{if(e.children){const r=e.children.map(t);if(r.some(Boolean)){const t=[];for(let s=0;s<e.children.length;s++){const i=e.children[s];if("text"!==i.type&&!r[s]){t.push(i);continue}const a="text"===i.type?i:i.clone({type:"text",value:n(i)});if(0===t.length||"text"!==t[t.length-1].type){t.push(a);continue}const o=t.pop();t.push(o.clone({value:o.value+a.value,sourceSpan:new mS(o.sourceSpan.start,a.sourceSpan.end)}))}return e.clone({children:t})}}return e}))}(e,(e=>"cdata"===e.type),(e=>"<![CDATA[".concat(e.value,"]]>")))},function(e,t){if("html"===t.parser)return e;const n=/{{([\S\s]+?)}}/g;return e.map((e=>{if(!CS(e))return e;const t=[];for(const r of e.children){if("text"!==r.type){t.push(r);continue}let e=r.sourceSpan.start,s=null;const i=r.value.split(n);for(let n=0;n<i.length;n++,e=s){const r=i[n];n%2!=0?(s=e.moveBy(r.length+4),t.push({type:"interpolation",sourceSpan:new mS(e,s),children:0===r.length?[]:[{type:"text",value:r,sourceSpan:new mS(e.moveBy(2),s.moveBy(-2))}]})):(s=e.moveBy(r.length),0!==r.length&&t.push({type:"text",value:r,sourceSpan:new mS(e,s)}))}}return e.clone({children:t})}))},function(e){const t="whitespace";return e.map((e=>{if(!e.children)return e;if(0===e.children.length||1===e.children.length&&"text"===e.children[0].type&&0===gS(e.children[0].value).length)return e.clone({children:[],hasDanglingSpaces:0!==e.children.length});const n=SS(e),r=FS(e);return e.clone({isWhitespaceSensitive:n,isIndentationSensitive:r,children:e.children.reduce(((e,r)=>{if("text"!==r.type||n)return e.concat(r);const s=[],{leadingWhitespace:i,text:a,trailingWhitespace:o}=yS(r.value);return i&&s.push({type:t}),a&&s.push({type:"text",value:a,sourceSpan:new mS(r.sourceSpan.start.moveBy(i.length),r.sourceSpan.end.moveBy(-o.length))}),o&&s.push({type:t}),e.concat(s)}),[]).reduce(((e,n,r,s)=>{if(n.type===t)return e;const i=0!==r&&s[r-1].type===t,a=r!==s.length-1&&s[r+1].type===t;return e.concat(Object.assign({},n,{hasLeadingSpaces:i,hasTrailingSpaces:a}))}),[])})}))},function(e,t){return e.map((e=>Object.assign(e,{cssDisplay:AS(e,t)})))},function(e){return e.map((e=>Object.assign(e,{isSelfClosing:!e.children||"element"===e.type&&(e.tagDefinition.isVoid||e.startSourceSpan===e.endSourceSpan)})))},function(e,t){return e.map((e=>"element"!==e.type?e:Object.assign(e,{hasHtmComponentClosingTag:e.endSourceSpan&&/^<\s*\/\s*\/\s*>$/.test(t.originalText.slice(e.endSourceSpan.start.offset,e.endSourceSpan.end.offset))})))},function(e,t){return e.map((e=>e.children?0===e.children.length?e.clone({isDanglingSpaceSensitive:bS(e)}):e.clone({children:e.children.map((e=>Object.assign({},e,{isLeadingSpaceSensitive:xS(e,t),isTrailingSpaceSensitive:vS(e,t)}))).map(((e,t,n)=>Object.assign({},e,{isLeadingSpaceSensitive:(0===t||n[t-1].isTrailingSpaceSensitive)&&e.isLeadingSpaceSensitive,isTrailingSpaceSensitive:(t===n.length-1||n[t+1].isLeadingSpaceSensitive)&&e.isTrailingSpaceSensitive})))}):e))},function(e){const t=e=>"element"===e.type&&0===e.attrs.length&&1===e.children.length&&"text"===e.firstChild.type&&!ES(e.children[0].value)&&!e.firstChild.hasLeadingSpaces&&!e.firstChild.hasTrailingSpaces&&e.isLeadingSpaceSensitive&&!e.hasLeadingSpaces&&e.isTrailingSpaceSensitive&&!e.hasTrailingSpaces&&e.prev&&"text"===e.prev.type&&e.next&&"text"===e.next.type;return e.map((e=>{if(e.children){const n=e.children.map(t);if(n.some(Boolean)){const t=[];for(let r=0;r<e.children.length;r++){const s=e.children[r];if(n[r]){const n=t.pop(),i=e.children[++r],{isTrailingSpaceSensitive:a,hasTrailingSpaces:o}=i;t.push(n.clone({value:n.value+"<".concat(s.rawName,">")+s.firstChild.value+"</".concat(s.rawName,">")+i.value,sourceSpan:new mS(n.sourceSpan.start,i.sourceSpan.end),isTrailingSpaceSensitive:a,hasTrailingSpaces:o}))}else t.push(s)}return e.clone({children:t})}}return e}))}];const{builders:{concat:wS,group:BS}}=cn;var PS={isVueEventBindingExpression:function(e){const t=e.trim();return/^([\w$]+|\([^)]*?\))\s*=>|^function\s*\(/.test(t)||/^[$A-Z_a-z][\w$]*(?:\.[$A-Z_a-z][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[$A-Z_a-z][\w$]*])*$/.test(t)},printVueFor:function(e,t){const{left:n,operator:r,right:s}=function(e){const t=/,([^,\]}]*)(?:,([^,\]}]*))?$/,n=e.match(/([^]*?)\s+(in|of)\s+([^]*)/);if(!n)return;const r={};r.for=n[3].trim();const s=n[1].trim().replace(/^\(|\)$/g,""),i=s.match(t);return i?(r.alias=s.replace(t,""),r.iterator1=i[1].trim(),i[2]&&(r.iterator2=i[2].trim())):r.alias=s,{left:"".concat([r.alias,r.iterator1,r.iterator2].filter(Boolean).join(",")),operator:n[2],right:r.for}}(e);return wS([BS(t("function _(".concat(n,") {}"),{parser:"babel",__isVueForBindingLeft:!0}))," ",r," ",t(s,{parser:"__js_expression"},{stripTrailingHardline:!0})])},printVueBindings:function(e,t){return t("function _(".concat(e,") {}"),{parser:"babel",__isVueBindings:!0},{stripTrailingHardline:!0})}},NS=Me((function(e){!function(t,n){e.exports?e.exports=n():t.parseSrcset=n()}(_e,(function(){return function(e,t){var n=t&&t.logger||console;function r(e){return" "===e||"\t"===e||"\n"===e||"\f"===e||"\r"===e}function s(t){var n,r=t.exec(e.substring(g));if(r)return n=r[0],g+=n.length,n}for(var i,a,o,u,c,l=e.length,p=/^[ \t\n\r\u000c]+/,h=/^[, \t\n\r\u000c]+/,d=/^[^ \t\n\r\u000c]+/,f=/[,]+$/,D=/^\d+$/,m=/^-?(?:[0-9]+|[0-9]*\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/,g=0,y=[];;){if(s(h),g>=l)return y;i=s(d),a=[],","===i.slice(-1)?(i=i.replace(f,""),C()):E()}function E(){for(s(p),o="",u="in descriptor";;){if(c=e.charAt(g),"in descriptor"===u)if(r(c))o&&(a.push(o),o="",u="after descriptor");else{if(","===c)return g+=1,o&&a.push(o),void C();if("("===c)o+=c,u="in parens";else{if(""===c)return o&&a.push(o),void C();o+=c}}else if("in parens"===u)if(")"===c)o+=c,u="in descriptor";else{if(""===c)return a.push(o),void C();o+=c}else if("after descriptor"===u)if(r(c));else{if(""===c)return void C();u="in descriptor",g-=1}g+=1}}function C(){var t,r,s,o,u,c,l,p,h,d=!1,f={};for(o=0;o<a.length;o++)c=(u=a[o])[u.length-1],l=u.substring(0,u.length-1),p=parseInt(l,10),h=parseFloat(l),D.test(l)&&"w"===c?((t||r)&&(d=!0),0===p?d=!0:t=p):m.test(l)&&"x"===c?((t||r||s)&&(d=!0),h<0?d=!0:r=h):D.test(l)&&"h"===c?((s||r)&&(d=!0),0===p?d=!0:s=p):d=!0;d?n&&n.error&&n.error("Invalid srcset descriptor found in '"+e+"' at '"+u+"'."):(f.url=i,t&&(f.w=t),r&&(f.d=r),s&&(f.h=s),y.push(f))}}}))}));const{builders:{concat:kS,ifBreak:IS,join:LS,line:OS}}=cn;var _S={printImgSrcset:function(e){const t=NS(e,{logger:{error(e){throw new Error(e)}}}),n=t.some((({w:e})=>e)),r=t.some((({h:e})=>e));if(n+r+t.some((({d:e})=>e))>1)throw new Error("Mixed descriptor in srcset is not supported");const s=n?"w":r?"h":"d",i=n?"w":r?"h":"x",a=e=>Math.max(...e),o=t.map((e=>e.url)),u=a(o.map((e=>e.length))),c=t.map((e=>e[s])).map((e=>e?e.toString():"")),l=c.map((e=>{const t=e.indexOf(".");return-1===t?e.length:t})),p=a(l);return LS(kS([",",OS]),o.map(((e,t)=>{const n=[e],r=c[t];if(r){const s=u-e.length+1,a=p-l[t],o=" ".repeat(s+a);n.push(IS(o," "),r+i)}return kS(n)})))},printClassNames:function(e){return e.trim().split(/\s+/).join(" ")}};const{builders:MS,utils:{mapDoc:RS,normalizeParts:jS}}=cn,{replaceEndOfLineWith:qS}=Ot,{print:US}=MC,{breakParent:$S,dedentToRoot:VS,fill:WS,group:zS,hardline:HS,ifBreak:GS,indent:XS,join:JS,line:KS,literalline:YS,softline:QS}=MS,{htmlTrimPreserveIndentation:ZS,splitByHtmlWhitespace:eT,countChars:tT,countParents:nT,dedentString:rT,forceBreakChildren:sT,forceBreakContent:iT,forceNextEmptyLine:aT,getLastDescendant:oT,getPrettierIgnoreAttributeCommentData:uT,hasPrettierIgnore:cT,inferScriptParser:lT,isVueCustomBlock:pT,isVueNonHtmlBlock:hT,isVueSlotAttribute:dT,isVueSfcBindingsAttribute:fT,isScriptLikeTag:DT,isTextLikeNode:mT,preferHardlineAsLeadingSpaces:gT,shouldNotPrintClosingTag:yT,shouldPreserveContent:ET,unescapeQuoteEntities:CT,isPreLikeNode:AT}=lS,{insertPragma:bT}={hasPragma:function(e){return/^\s*<!--\s*@(format|prettier)\s*-->/.test(e)},insertPragma:function(e){return"\x3c!-- @format --\x3e\n\n"+e.replace(/^\s*\n/,"")}},{locStart:FT,locEnd:xT}={locStart:function(e){return e.sourceSpan.start.offset},locEnd:function(e){return e.sourceSpan.end.offset}},{printVueFor:vT,printVueBindings:ST,isVueEventBindingExpression:TT}=PS,{printImgSrcset:wT,printClassNames:BT}=_S;function PT(e){const t=jS(e);return 0===t.length?"":1===t.length?t[0]:MS.concat(t)}function NT(e,t,n){const r=e.getValue();if(sT(r))return PT([$S,PT(e.map((e=>{const t=e.getValue(),n=t.prev?a(t.prev,t):"";return PT([n?PT([n,aT(t.prev)?HS:""]):"",i(e)])}),"children"))]);const s=r.children.map((()=>Symbol("")));return PT(e.map(((e,t)=>{const n=e.getValue();if(mT(n)){if(n.prev&&mT(n.prev)){const t=a(n.prev,n);if(t)return aT(n.prev)?PT([HS,HS,i(e)]):PT([t,i(e)])}return i(e)}const r=[],o=[],u=[],c=[],l=n.prev?a(n.prev,n):"",p=n.next?a(n,n.next):"";return l&&(aT(n.prev)?r.push(HS,HS):l===HS?r.push(HS):mT(n.prev)?o.push(l):o.push(GS("",QS,{groupId:s[t-1]}))),p&&(aT(n)?mT(n.next)&&c.push(HS,HS):p===HS?mT(n.next)&&c.push(HS):u.push(p)),PT([].concat(r,zS(PT([PT(o),zS(PT([i(e),PT(u)]),{id:s[t]})])),c))}),"children"));function i(e){const r=e.getValue();return cT(r)?PT([].concat(zT(r,t),qS(t.originalText.slice(FT(r)+(r.prev&&qT(r.prev)?XT(r).length:0),xT(r)-(r.next&&$T(r.next)?YT(r,t).length:0)),YS),GT(r,t))):n(e)}function a(e,t){return mT(e)&&mT(t)?e.isTrailingSpaceSensitive?e.hasTrailingSpaces?gT(t)?HS:KS:"":gT(t)?HS:QS:qT(e)&&(cT(t)||t.firstChild||t.isSelfClosing||"element"===t.type&&0!==t.attrs.length)||"element"===e.type&&e.isSelfClosing&&$T(t)?"":!t.isLeadingSpaceSensitive||gT(t)||$T(t)&&e.lastChild&&WT(e.lastChild)&&e.lastChild.lastChild&&WT(e.lastChild.lastChild)?HS:t.hasLeadingSpaces?KS:QS}}function kT(e,t){let n=e.startSourceSpan.end.offset;e.firstChild&&UT(e.firstChild)&&(n-=JT(e).length);let r=e.endSourceSpan.start.offset;return e.lastChild&&WT(e.lastChild)?r+=KT(e,t).length:VT(e)&&(r-=YT(e.lastChild,t).length),t.originalText.slice(n,r)}function IT(e,t,n){const r=e.getValue();if(!r.attrs||0===r.attrs.length)return r.isSelfClosing?" ":"";const s=r.prev&&"comment"===r.prev.type&&uT(r.prev.value),i="boolean"==typeof s?()=>s:Array.isArray(s)?e=>s.includes(e.rawName):()=>!1,a=e.map((e=>{const r=e.getValue();return i(r)?PT(qS(t.originalText.slice(FT(r),xT(r)),YS)):n(e)}),"attrs"),o="element"===r.type&&"script"===r.fullName&&1===r.attrs.length&&"src"===r.attrs[0].fullName&&0===r.children.length,u=[XS(PT([o?" ":KS,JS(KS,a)]))];return r.firstChild&&UT(r.firstChild)||r.isSelfClosing&&VT(r.parent)||o?u.push(r.isSelfClosing?" ":""):u.push(r.isSelfClosing?KS:QS),PT(u)}function LT(e,t,n){const r=e.getValue();return PT([OT(r,t),IT(e,t,n),r.isSelfClosing?"":_T(r)])}function OT(e,t){return e.prev&&qT(e.prev)?"":PT([zT(e,t),XT(e)])}function _T(e){return e.firstChild&&UT(e.firstChild)?"":JT(e)}function MT(e,t){return PT([e.isSelfClosing?"":RT(e,t),jT(e,t)])}function RT(e,t){return e.lastChild&&WT(e.lastChild)?"":PT([HT(e,t),KT(e,t)])}function jT(e,t){return(e.next?$T(e.next):VT(e.parent))?"":PT([YT(e,t),GT(e,t)])}function qT(e){return e.next&&!mT(e.next)&&mT(e)&&e.isTrailingSpaceSensitive&&!e.hasTrailingSpaces}function UT(e){return!e.prev&&e.isLeadingSpaceSensitive&&!e.hasLeadingSpaces}function $T(e){return e.prev&&"docType"!==e.prev.type&&!mT(e.prev)&&e.isLeadingSpaceSensitive&&!e.hasLeadingSpaces}function VT(e){return e.lastChild&&e.lastChild.isTrailingSpaceSensitive&&!e.lastChild.hasTrailingSpaces&&!mT(oT(e.lastChild))&&!AT(e)}function WT(e){return!e.next&&!e.hasTrailingSpaces&&e.isTrailingSpaceSensitive&&mT(oT(e))}function zT(e,t){return UT(e)?JT(e.parent):$T(e)?YT(e.prev,t):""}function HT(e,t){return VT(e)?YT(e.lastChild,t):""}function GT(e,t){return WT(e)?KT(e.parent,t):qT(e)?XT(e.next):""}function XT(e){switch(e.type){case"ieConditionalComment":case"ieConditionalStartComment":return"\x3c!--[if ".concat(e.condition);case"ieConditionalEndComment":return"\x3c!--<!";case"interpolation":return"{{";case"docType":return"<!DOCTYPE";case"element":if(e.condition)return"\x3c!--[if ".concat(e.condition,"]>\x3c!--\x3e<").concat(e.rawName);default:return"<".concat(e.rawName)}}function JT(e){switch(za(!e.isSelfClosing),e.type){case"ieConditionalComment":return"]>";case"element":if(e.condition)return">\x3c!--<![endif]--\x3e";default:return">"}}function KT(e,t){if(za(!e.isSelfClosing),yT(e,t))return"";switch(e.type){case"ieConditionalComment":return"<!";case"element":if(e.hasHtmComponentClosingTag)return"<//";default:return"</".concat(e.rawName)}}function YT(e,t){if(yT(e,t))return"";switch(e.type){case"ieConditionalComment":case"ieConditionalEndComment":return"[endif]--\x3e";case"ieConditionalStartComment":return"]>\x3c!--\x3e";case"interpolation":return"}}";case"element":if(e.isSelfClosing)return"/>";default:return">"}}function QT(e,t=e.value){return e.parent.isWhitespaceSensitive?e.parent.isIndentationSensitive?qS(t,YS):qS(rT(ZS(t)),HS):JS(KS,eT(t)).parts}var ZT={preprocess:function(e,t){for(const n of TS)e=n(e,t);return e},print:function(e,t,n){const r=e.getValue();switch(r.type){case"front-matter":return PT(qS(r.raw,YS));case"root":return t.__onHtmlRoot&&t.__onHtmlRoot(r),MS.concat([zS(NT(e,t,n)),HS]);case"element":case"ieConditionalComment":{if(ET(r,t))return PT([].concat(zT(r,t),zS(LT(e,t,n)),qS(kT(r,t),YS),MT(r,t),GT(r,t)));const i=1===r.children.length&&"interpolation"===r.firstChild.type&&r.firstChild.isLeadingSpaceSensitive&&!r.firstChild.hasLeadingSpaces&&r.lastChild.isTrailingSpaceSensitive&&!r.lastChild.hasTrailingSpaces,a=Symbol("element-attr-group-id");return PT([zS(PT([zS(LT(e,t,n),{id:a}),0===r.children.length?r.hasDanglingSpaces&&r.isDanglingSpaceSensitive?KS:"":PT([iT(r)?$S:"",(s=PT([i?GS(QS,"",{groupId:a}):r.firstChild.hasLeadingSpaces&&r.firstChild.isLeadingSpaceSensitive?KS:"text"===r.firstChild.type&&r.isWhitespaceSensitive&&r.isIndentationSensitive?VS(QS):QS,NT(e,t,n)]),i?GS(XS(s),s,{groupId:a}):!DT(r)&&!pT(r,t)||"root"!==r.parent.type||"vue"!==t.parser||t.vueIndentScriptAndStyle?XS(s):s),(r.next?$T(r.next):VT(r.parent))?r.lastChild.hasTrailingSpaces&&r.lastChild.isTrailingSpaceSensitive?" ":"":i?GS(QS,"",{groupId:a}):r.lastChild.hasTrailingSpaces&&r.lastChild.isTrailingSpaceSensitive?KS:("comment"===r.lastChild.type||"text"===r.lastChild.type&&r.isWhitespaceSensitive&&r.isIndentationSensitive)&&new RegExp("\\n[\\t ]{".concat(t.tabWidth*nT(e,(e=>e.parent&&"root"!==e.parent.type)),"}$")).test(r.lastChild.value)?"":QS])])),MT(r,t)])}case"ieConditionalStartComment":case"ieConditionalEndComment":return PT([OT(r),jT(r)]);case"interpolation":return PT([OT(r,t),PT(e.map(n,"children")),jT(r,t)]);case"text":if("interpolation"===r.parent.type){const e=/\n[^\S\n]*?$/,t=e.test(r.value),n=t?r.value.replace(e,""):r.value;return PT([PT(qS(n,YS)),t?HS:""])}return WS(jS([].concat(zT(r,t),QT(r),GT(r,t))));case"docType":return PT([zS(PT([OT(r,t)," ",r.value.replace(/^html\b/i,"html").replace(/\s+/g," ")])),jT(r,t)]);case"comment":return PT([zT(r,t),PT(qS(t.originalText.slice(FT(r),xT(r)),YS)),GT(r,t)]);case"attribute":{if(null===r.value)return r.rawName;const e=CT(r.value),t=tT(e,"'")<tT(e,'"')?"'":'"';return PT([r.rawName,PT(["=",t,PT(qS('"'===t?e.replace(/"/g,"&quot;"):e.replace(/'/g,"&apos;"),YS)),t])])}default:throw new Error("Unexpected node type ".concat(r.type))}var s},insertPragma:bT,massageAstNode:kv,embed:function(e,t,n,r){const s=e.getValue();switch(s.type){case"element":if(DT(s)||"interpolation"===s.type)return;if(!s.isSelfClosing&&hT(s,r)){const i=lT(s,r);if(!i)return;const a=kT(s,r);let o=/^\s*$/.test(a),u="";return o||(u=n(ZS(a),{parser:i},{stripTrailingHardline:!0}),o=""===u),PT([zT(s,r),zS(LT(e,r,t)),o?"":HS,u,o?"":HS,MT(s,r),GT(s,r)])}break;case"text":if(DT(s.parent)){const e=lT(s.parent);if(e){const t="markdown"===e?rT(s.value.replace(/^[^\S\n]*?\n/,"")):s.value,i={parser:e};if("html"===r.parser&&"babel"===e){let e="script";const{attrMap:t}=s.parent;t&&("module"===t.type||"text/babel"===t.type&&"module"===t["data-type"])&&(e="module"),i.__babelSourceType=e}return MS.concat([PT([$S,zT(s,r),n(t,i,{stripTrailingHardline:!0}),GT(s,r)])])}}else if("interpolation"===s.parent.type)return PT([XS(PT([KS,n(s.value,Object.assign({__isInHtmlInterpolation:!0},"angular"===r.parser?{parser:"__ng_interpolation",trailingComma:"none"}:"vue"===r.parser?{parser:"__vue_expression"}:{parser:"__js_expression"}),{stripTrailingHardline:!0})])),s.parent.next&&$T(s.parent.next)?" ":KS]);break;case"attribute":{if(!s.value)break;if(/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(r.originalText.slice(s.valueSpan.start.offset,s.valueSpan.end.offset)))return PT([s.rawName,"=",s.value]);if("lwc"===r.parser&&/^{[\S\s]*}$/.test(r.originalText.slice(s.valueSpan.start.offset,s.valueSpan.end.offset)))return PT([s.rawName,"=",s.value]);const e=function(e,t,n){const r=t=>new RegExp(t.join("|")).test(e.fullName),s=()=>CT(e.value);let i=!1;const a=(e,t)=>{const n="NGRoot"===e.type?"NGMicrosyntax"===e.node.type&&1===e.node.body.length&&"NGMicrosyntaxExpression"===e.node.body[0].type?e.node.body[0].expression:e.node:"JsExpressionRoot"===e.type?e.node:e;!n||"ObjectExpression"!==n.type&&"ArrayExpression"!==n.type&&("__vue_expression"!==t.parser||"TemplateLiteral"!==n.type&&"StringLiteral"!==n.type)||(i=!0)},o=(e,t=!0)=>zS(PT([XS(PT([QS,e])),t?QS:""])),u=e=>i?(e=>zS(e))(e):o(e),c=(e,n)=>t(e,Object.assign({__onHtmlBindingRoot:a},n));if("srcset"===e.fullName&&("img"===e.parent.fullName||"source"===e.parent.fullName))return o(wT(s()));if("class"===e.fullName&&!n.parentParser){const e=s();if(!e.includes("{{"))return BT(e)}if("style"===e.fullName&&!n.parentParser){const e=s();if(!e.includes("{{"))return o(c(e,{parser:"css",__isHTMLStyleAttribute:!0}))}if("vue"===n.parser){if("v-for"===e.fullName)return vT(s(),c);if(dT(e)||fT(e,n))return ST(s(),c);const t=["^:","^v-bind:"],i=["^v-"];if(r(["^@","^v-on:"])){const e=s();return u(c(e,{parser:TT(e)?"__js_expression":"__vue_event_binding"}))}if(r(t))return u(c(s(),{parser:"__vue_expression"}));if(r(i))return u(c(s(),{parser:"__js_expression"}))}if("angular"===n.parser){const t=(e,t)=>c(e,Object.assign({},t,{trailingComma:"none"})),n=["^\\*"],i=["^\\[.+\\]$","^bind(on)?-","^ng-(if|show|hide|class|style)$"],a=["^i18n(-.+)?$"];if(r(["^\\(.+\\)$","^on-"]))return u(t(s(),{parser:"__ng_action"}));if(r(i))return u(t(s(),{parser:"__ng_binding"}));if(r(a)){const t=s().trim();return o(WS(QT(e,t)),!t.includes("@@"))}if(r(n))return u(t(s(),{parser:"__ng_directive"}));const l=/{{([\S\s]+?)}}/g,p=s();if(l.test(p)){const e=[];return p.split(l).forEach(((n,r)=>{if(r%2==0)e.push(PT(qS(n,YS)));else try{e.push(zS(PT(["{{",XS(PT([KS,t(n,{parser:"__ng_interpolation",__isInHtmlInterpolation:!0})])),KS,"}}"])))}catch(t){e.push("{{",PT(qS(n,YS)),"}}")}})),zS(PT(e))}}return null}(s,((e,t)=>n(e,Object.assign({__isInHtmlAttribute:!0},t),{stripTrailingHardline:!0})),r);if(e)return PT([s.rawName,'="',zS(RS(e,(e=>"string"==typeof e?e.replace(/"/g,"&quot;"):e))),'"']);break}case"front-matter":return US(s,n)}}};const ew="HTML";var tw={htmlWhitespaceSensitivity:{since:"1.15.0",category:ew,type:"choice",default:"css",description:"How to handle whitespaces in HTML.",choices:[{value:"css",description:"Respect the default value of CSS display property."},{value:"strict",description:"Whitespaces are considered sensitive."},{value:"ignore",description:"Whitespaces are considered insensitive."}]},vueIndentScriptAndStyle:{since:"1.19.0",category:ew,type:"boolean",default:!1,description:"Indent script and style tags in Vue files."}},nw={name:"HTML",type:"markup",tmScope:"text.html.basic",aceMode:"html",codemirrorMode:"htmlmixed",codemirrorMimeType:"text/html",color:"#e34c26",aliases:["xhtml"],extensions:[".html",".htm",".html.hl",".inc",".st",".xht",".xhtml"],languageId:146},rw={languages:[bu(nw,(()=>({name:"Angular",since:"1.15.0",parsers:["angular"],vscodeLanguageIds:["html"],extensions:[".component.html"],filenames:[]}))),bu(nw,(e=>({since:"1.15.0",parsers:["html"],vscodeLanguageIds:["html"],extensions:e.extensions.concat([".mjml"])}))),bu(nw,(()=>({name:"Lightning Web Components",since:"1.17.0",parsers:["lwc"],vscodeLanguageIds:["html"],extensions:[],filenames:[]}))),bu({name:"Vue",type:"markup",color:"#2c3e50",extensions:[".vue"],tmScope:"text.html.vue",aceMode:"html",languageId:391},(()=>({since:"1.10.0",parsers:["vue"],vscodeLanguageIds:["vue"]})))],printers:{html:ZT},options:tw,parsers:{get html(){return{}.parsers.html},get vue(){return{}.parsers.vue},get angular(){return{}.parsers.angular},get lwc(){return{}.parsers.lwc}}};const{getLast:sw}=Ot;function iw(e,t){return e&&"string"==typeof e.type&&(!t||t.includes(e.type))}function aw(e){return"prettier-ignore"===e.value.trim()}function ow(e){return e&&e.leadingComments&&0!==e.leadingComments.length}function uw(e){return e&&e.middleComments&&0!==e.middleComments.length}function cw(e){return e&&e.indicatorComment}function lw(e){return e&&e.trailingComment}function pw(e){return e&&e.endComments&&0!==e.endComments.length}function hw(e){const t=[];let n;for(const r of e.split(/( +)/g))" "!==r?" "===n?t.push(r):t.push((t.pop()||"")+r):void 0===n&&t.unshift(""),n=r;return" "===n&&t.push((t.pop()||"")+" "),""===t[0]&&(t.shift(),t.unshift(" "+(t.shift()||""))),t}var dw={getLast:sw,getAncestorCount:function(e,t){let n=0;const r=e.stack.length-1;for(let s=0;s<r;s++){const r=e.stack[s];iw(r)&&t(r)&&n++}return n},isNode:iw,isEmptyNode:function(e){return!(e.children&&0!==e.children.length||function(e){return ow(e)||uw(e)||cw(e)||lw(e)||pw(e)}(e))},mapNode:function e(t,n,r){return n("children"in t?Object.assign({},t,{children:t.children.map((r=>e(r,n,t)))}):t,r)},defineShortcut:function(e,t,n){Object.defineProperty(e,t,{get:n,enumerable:!1})},isNextLineEmpty:function(e,t){let n=0;const r=t.length;for(let s=e.position.end.offset-1;s<r;s++){const e=t[s];if("\n"===e&&n++,1===n&&/\S/.test(e))return!1;if(2===n)return!0}return!1},isLastDescendantNode:function(e){switch(e.getValue().type){case"tag":case"anchor":case"comment":return!1}const t=e.stack.length;for(let n=1;n<t;n++){const t=e.stack[n],r=e.stack[n-1];if(Array.isArray(r)&&"number"==typeof t&&t!==r.length-1)return!1}return!0},getBlockValueLineContents:function(e,{parentIndent:t,isLastDescendant:n,options:r}){const s=e.position.start.line===e.position.end.line?"":r.originalText.slice(e.position.start.offset,e.position.end.offset).match(/^[^\n]*?\n([\S\s]*)$/)[1],i=null===e.indent?(a=s.match(/^( *)\S/m))?a[1].length:1/0:e.indent-1+t;var a;const o=s.split("\n").map((e=>e.slice(i)));return"preserve"===r.proseWrap||"blockLiteral"===e.type?u(o.map((e=>0===e.length?[]:[e]))):u(o.map((e=>0===e.length?[]:hw(e))).reduce(((e,t,n)=>0===n||0===o[n-1].length||0===t.length||/^\s/.test(t[0])||/^\s|\s$/.test(sw(e))?e.concat([t]):e.concat([e.pop().concat(t)])),[]).map((e=>e.reduce(((e,t)=>0!==e.length&&/\s$/.test(sw(e))?e.concat(e.pop()+" "+t):e.concat(t)),[]))).map((e=>"never"===r.proseWrap?[e.join(" ")]:e)));function u(t){if("keep"===e.chomping)return 0===sw(t).length?t.slice(0,-1):t;let r=0;for(let e=t.length-1;e>=0&&0===t[e].length;e--)r++;return 0===r?t:r>=2&&!n?t.slice(0,-(r-1)):t.slice(0,-r)}},getFlowScalarLineContents:function(e,t,n){const r=t.split("\n").map(((e,t,n)=>0===t&&t===n.length-1?e:0!==t&&t!==n.length-1?e.trim():0===t?e.trimEnd():e.trimStart()));return"preserve"===n.proseWrap?r.map((e=>0===e.length?[]:[e])):r.map((e=>0===e.length?[]:hw(e))).reduce(((t,n,s)=>0===s||0===r[s-1].length||0===n.length||"quoteDouble"===e&&sw(sw(t)).endsWith("\\")?t.concat([n]):t.concat([t.pop().concat(n)])),[]).map((e=>"never"===n.proseWrap?[e.join(" ")]:e))},getLastDescendantNode:function e(t){return"children"in t&&0!==t.children.length?e(sw(t.children)):t},hasPrettierIgnore:function(e){const t=e.getValue();if("documentBody"===t.type){const t=e.getParentNode();return pw(t.head)&&aw(sw(t.head.endComments))}return ow(t)&&aw(sw(t.leadingComments))},hasLeadingComments:ow,hasMiddleComments:uw,hasIndicatorComment:cw,hasTrailingComment:lw,hasEndComments:pw};const fw=cn.builders,{conditionalGroup:Dw,breakParent:mw,concat:gw,dedent:yw,dedentToRoot:Ew,fill:Cw,group:Aw,hardline:bw,ifBreak:Fw,join:xw,line:vw,lineSuffix:Sw,literalline:Tw,markAsRoot:ww,softline:Bw}=fw,{replaceEndOfLineWith:Pw,isPreviousLineEmpty:Nw}=Ot,{insertPragma:kw,isPragma:Iw}={isPragma:function(e){return/^\s*@(prettier|format)\s*$/.test(e)},hasPragma:function(e){return/^\s*#[^\S\n]*@(prettier|format)\s*?(\n|$)/.test(e)},insertPragma:function(e){return"# @format\n\n".concat(e)}},{locStart:Lw}={locStart:function(e){return e.position.start.offset},locEnd:function(e){return e.position.end.offset}},{getAncestorCount:Ow,getBlockValueLineContents:_w,getFlowScalarLineContents:Mw,getLast:Rw,getLastDescendantNode:jw,hasLeadingComments:qw,hasMiddleComments:Uw,hasIndicatorComment:$w,hasTrailingComment:Vw,hasEndComments:Ww,hasPrettierIgnore:zw,isLastDescendantNode:Hw,isNextLineEmpty:Gw,isNode:Xw,isEmptyNode:Jw,defineShortcut:Kw,mapNode:Yw}=dw;function Qw(e){switch(e.type){case"document":Kw(e,"head",(()=>e.children[0])),Kw(e,"body",(()=>e.children[1]));break;case"documentBody":case"sequenceItem":case"flowSequenceItem":case"mappingKey":case"mappingValue":Kw(e,"content",(()=>e.children[0]));break;case"mappingItem":case"flowMappingItem":Kw(e,"key",(()=>e.children[0])),Kw(e,"value",(()=>e.children[1]))}return e}function Zw(e,t,n,r,s){switch(e.type){case"root":return gw([xw(bw,n.map(((t,r)=>{const i=e.children[r],a=e.children[r+1];return gw([s(t),rB(i,a)?gw([bw,"...",Vw(i)?gw([" ",n.call(s,"trailingComment")]):""]):!a||Vw(a.head)?"":gw([bw,"---"])])}),"children")),0===e.children.length||(a=jw(e),Xw(a,["blockLiteral","blockFolded"])&&"keep"===a.chomping)?"":bw]);case"document":{const i=t.children[n.getName()+1];return xw(bw,["head"===sB(e,i,t,r)?xw(bw,[0===e.head.children.length&&0===e.head.endComments.length?"":n.call(s,"head"),gw(["---",Vw(e.head)?gw([" ",n.call(s,"head","trailingComment")]):""])].filter(Boolean)):"",nB(e)?n.call(s,"body"):""].filter(Boolean))}case"documentHead":return xw(bw,[].concat(n.map(s,"children"),n.map(s,"endComments")));case"documentBody":{const t=xw(bw,n.map(s,"children")).parts,r=xw(bw,n.map(s,"endComments")).parts,i=0===t.length||0===r.length?"":(e=>Xw(e,["blockFolded","blockLiteral"])?"keep"===e.chomping?"":gw([bw,bw]):bw)(jw(e));return gw([].concat(t,i,r))}case"directive":return gw(["%",xw(" ",[e.name].concat(e.parameters))]);case"comment":return gw(["#",e.value]);case"alias":return gw(["*",e.value]);case"tag":return r.originalText.slice(e.position.start.offset,e.position.end.offset);case"anchor":return gw(["&",e.value]);case"plain":return lB(e.type,r.originalText.slice(e.position.start.offset,e.position.end.offset),r);case"quoteDouble":case"quoteSingle":{const t="'",n='"',s=r.originalText.slice(e.position.start.offset+1,e.position.end.offset-1);if("quoteSingle"===e.type&&s.includes("\\")||"quoteDouble"===e.type&&/\\[^"]/.test(s)){const i="quoteDouble"===e.type?n:t;return gw([i,lB(e.type,s,r),i])}if(s.includes(n))return gw([t,lB(e.type,"quoteDouble"===e.type?s.replace(/\\"/g,n).replace(/'/g,t.repeat(2)):s,r),t]);if(s.includes(t))return gw([n,lB(e.type,"quoteSingle"===e.type?s.replace(/''/g,t):s,r),n]);const i=r.singleQuote?t:n;return gw([i,lB(e.type,s,r),i])}case"blockFolded":case"blockLiteral":{const t=Ow(n,(e=>Xw(e,["sequence","mapping"]))),i=Hw(n);return gw(["blockFolded"===e.type?">":"|",null===e.indent?"":e.indent.toString(),"clip"===e.chomping?"":"keep"===e.chomping?"+":"-",$w(e)?gw([" ",n.call(s,"indicatorComment")]):"",(null===e.indent?yw:Ew)(eB(null===e.indent?r.tabWidth:e.indent-1+t,gw(_w(e,{parentIndent:t,isLastDescendant:i,options:r}).reduce(((t,n,r,s)=>t.concat(0===r?bw:"",Cw(xw(vw,n).parts),r!==s.length-1?0===n.length?bw:ww(Tw):"keep"===e.chomping&&i?0===n.length?Ew(bw):Ew(Tw):"")),[]))))])}case"sequence":case"mapping":return xw(bw,n.map(s,"children"));case"sequenceItem":return gw(["- ",eB(2,e.content?n.call(s,"content"):"")]);case"mappingKey":case"mappingValue":return e.content?n.call(s,"content"):"";case"mappingItem":case"flowMappingItem":{const i=Jw(e.key),a=Jw(e.value);if(i&&a)return gw([": "]);const u=n.call(s,"key"),c=n.call(s,"value");if(a)return"flowMappingItem"===e.type&&"flowMapping"===t.type?u:"mappingItem"!==e.type||!iB(e.key.content,r)||Vw(e.key.content)||t.tag&&"tag:yaml.org,2002:set"===t.tag.value?gw(["? ",eB(2,u)]):gw([u,aB(e)?" ":"",":"]);if(i)return gw([": ",eB(2,c)]);const l=Symbol("mappingKey");return qw(e.value)||!tB(e.key.content)?gw(["? ",eB(2,u),bw,xw("",n.map(s,"value","leadingComments").map((e=>gw([e,bw])))),": ",eB(2,c)]):!function(e){if(!e)return!0;switch(e.type){case"plain":case"quoteDouble":case"quoteSingle":return e.position.start.line===e.position.end.line;case"alias":return!0;default:return!1}}(e.key.content)||qw(e.key.content)||Uw(e.key.content)||Vw(e.key.content)||Ww(e.key)||qw(e.value.content)||Uw(e.value.content)||Ww(e.value)||!iB(e.value.content,r)?Dw([gw([Aw(gw([Fw("? "),Aw(eB(2,u),{id:l})])),Fw(gw([bw,": ",eB(2,c)]),o(gw([aB(e)?" ":"",":",qw(e.value.content)||Ww(e.value)&&e.value.content&&!Xw(e.value.content,["mapping","sequence"])||"mapping"===t.type&&Vw(e.key.content)&&tB(e.value.content)||Xw(e.value.content,["mapping","sequence"])&&null===e.value.content.tag&&null===e.value.content.anchor?bw:e.value.content?vw:"",c])),{groupId:l})])]):gw([u,aB(e)?" ":"",": ",c])}case"flowMapping":case"flowSequence":{const t="flowMapping"===e.type?"{":"[",a="flowMapping"===e.type?"}":"]",u="flowMapping"===e.type&&0!==e.children.length&&r.bracketSpacing?vw:Bw,c=0!==e.children.length&&"flowMappingItem"===(i=Rw(e.children)).type&&Jw(i.key)&&Jw(i.value),l="none"===r.trailingComma?"":Fw(",","");return gw([t,o(gw([u,gw(n.map(((t,n)=>gw([s(t),n===e.children.length-1?"":gw([",",vw,e.children[n].position.start.line!==e.children[n+1].position.start.line?cB(t,r.originalText):""])])),"children")),l,Ww(e)?gw([bw,xw(bw,n.map(s,"endComments"))]):""])),c?"":u,a])}case"flowSequenceItem":return n.call(s,"content");default:throw new Error("Unexpected node type ".concat(e.type))}var i,a;function o(e){return fw.align(" ".repeat(r.tabWidth),e)}}function eB(e,t){return"number"==typeof e&&e>0?fw.align(" ".repeat(e),t):fw.align(e,t)}function tB(e){if(!e)return!0;switch(e.type){case"plain":case"quoteDouble":case"quoteSingle":case"alias":case"flowMapping":case"flowSequence":return!0;default:return!1}}function nB(e){return 0!==e.body.children.length||Ww(e.body)}function rB(e,t){return Vw(e)||t&&(0!==t.head.children.length||Ww(t.head))}function sB(e,t,n,r){return n.children[0]===e&&/---(\s|$)/.test(r.originalText.slice(Lw(e),Lw(e)+4))||0!==e.head.children.length||Ww(e.head)||Vw(e.head)?"head":!rB(e,t)&&!!t&&"root"}function iB(e,t){if(!e)return!0;switch(e.type){case"plain":case"quoteSingle":case"quoteDouble":break;case"alias":return!0;default:return!1}if("preserve"===t.proseWrap)return e.position.start.line===e.position.end.line;if(/\\$/m.test(t.originalText.slice(e.position.start.offset,e.position.end.offset)))return!1;switch(t.proseWrap){case"never":return!e.value.includes("\n");case"always":return!/[\n ]/.test(e.value);default:return!1}}function aB(e){return e.key.content&&"alias"===e.key.content.type}function oB(e){return Ww(e)&&!Xw(e,["documentHead","documentBody","flowMapping","flowSequence"])}const uB=new WeakMap;function cB(e,t){const n=e.getValue(),r=e.stack[0];let s;return uB.has(r)?s=uB.get(r):(s=new Set,uB.set(r,s)),s.has(n.position.end.line)||(s.add(n.position.end.line),!Gw(n,t)||oB(e.getParentNode()))?"":Bw}function lB(e,t,n){const r=Mw(e,t,n);return xw(bw,r.map((e=>Cw(xw(vw,e).parts))))}var pB={preprocess:function(e){return Yw(e,Qw)},print:function(e,t,n){const r=e.getValue(),s=e.getParentNode(),i=r.tag?e.call(n,"tag"):"",a=r.anchor?e.call(n,"anchor"):"",o=Xw(r,["mapping","sequence","comment","directive","mappingItem","sequenceItem"])&&!Hw(e)?cB(e,t.originalText):"";return gw(["mappingValue"!==r.type&&qw(r)?gw([xw(bw,e.map(n,"leadingComments")),bw]):"",i,i&&a?" ":"",a,i||a?Xw(r,["sequence","mapping"])&&!Uw(r)?bw:" ":"",Uw(r)?gw([1===r.middleComments.length?"":bw,xw(bw,e.map(n,"middleComments")),bw]):"",zw(e)?gw(Pw(t.originalText.slice(r.position.start.offset,r.position.end.offset).trimEnd(),Tw)):Aw(Zw(r,s,e,t,n)),Vw(r)&&!Xw(r,["document","documentHead"])?Sw(gw(["mappingValue"!==r.type||r.content?" ":"","mappingKey"===s.type&&"mapping"===e.getParentNode(2).type&&tB(r)?"":mw,e.call(n,"trailingComment")])):"",oB(r)?eB("sequenceItem"===r.type?2:0,gw([bw,xw(bw,e.map((e=>gw([Nw(t.originalText,e.getValue(),Lw)?bw:"",n(e)])),"endComments"))])):"",o])},massageAstNode:function(e,t){if(Xw(t))switch(delete t.position,t.type){case"comment":if(Iw(t.value))return null;break;case"quoteDouble":case"quoteSingle":t.type="quote"}},insertPragma:kw},hB={bracketSpacing:FC.bracketSpacing,singleQuote:FC.singleQuote,proseWrap:FC.proseWrap},dB=[wC,wb,IF,QF,wv,rw,{languages:[bu({name:"YAML",type:"data",color:"#cb171e",tmScope:"source.yaml",aliases:["yml"],extensions:[".yml",".mir",".reek",".rviz",".sublime-syntax",".syntax",".yaml",".yaml-tmlanguage",".yaml.sed",".yml.mysql"],filenames:[".clang-format",".clang-tidy",".gemrc","glide.lock","yarn.lock"],aceMode:"yaml",codemirrorMode:"yaml",codemirrorMimeType:"text/x-yaml",languageId:407},(e=>({since:"1.14.0",parsers:["yaml"],vscodeLanguageIds:["yaml","ansible","home-assistant"],filenames:e.filenames.filter((e=>"yarn.lock"!==e))})))],printers:{yaml:pB},options:hB,parsers:{get yaml(){return{}.parsers.yaml}}}];const{version:fB}=r,{getSupportInfo:DB}=mt,mB=dB.map((t=>e(t,["parsers"])));function gB(e,t=1){return(...n)=>{const r=n[t]||{},s=r.plugins||[];return n[t]=Object.assign({},r,{plugins:[...mB,...Array.isArray(s)?s:Object.values(s)]}),e(...n)}}const yB=gB(Yo.formatWithCursor);return{formatWithCursor:yB,format:(e,t)=>yB(e,t).formatted,check(e,t){const{formatted:n}=yB(e,t);return n===e},doc:cn,getSupportInfo:gB(DB,0),version:fB,util:Au,__debug:{parse:gB(Yo.parse),formatAST:gB(Yo.formatAST),formatDoc:gB(Yo.formatDoc),printToDoc:gB(Yo.printToDoc),printDocToString:gB(Yo.printDocToString)}}}()},379:(e,t,n)=>{"use strict";var r,s=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),i=[];function a(e){for(var t=-1,n=0;n<i.length;n++)if(i[n].identifier===e){t=n;break}return t}function o(e,t){for(var n={},r=[],s=0;s<e.length;s++){var o=e[s],u=t.base?o[0]+t.base:o[0],c=n[u]||0,l="".concat(u," ").concat(c);n[u]=c+1;var p=a(l),h={css:o[1],media:o[2],sourceMap:o[3]};-1!==p?(i[p].references++,i[p].updater(h)):i.push({identifier:l,updater:D(h,t),references:1}),r.push(l)}return r}function u(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=s(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var c,l=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function p(e,t,n,r){var s=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=l(t,s);else{var i=document.createTextNode(s),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function h(e,t,n){var r=n.css,s=n.media,i=n.sourceMap;if(s?e.setAttribute("media",s):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var d=null,f=0;function D(e,t){var n,r,s;if(t.singleton){var i=f++;n=d||(d=u(t)),r=p.bind(null,n,i,!1),s=p.bind(null,n,i,!0)}else n=u(t),r=h.bind(null,n,t),s=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else s()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=o(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var s=a(n[r]);i[s].references--}for(var u=o(e,t),c=0;c<n.length;c++){var l=a(n[c]);0===i[l].references&&(i[l].updater(),i.splice(l,1))}n=u}}}}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var i=t[r]={id:r,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=n(379),t=n.n(e),r=n(402);function s(e){return"Minified Redux error #"+e+"; visit https://redux.js.org/Errors?code="+e+" for the full message or use the non-minified dev environment for full errors. "}t()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;var i="function"==typeof Symbol&&Symbol.observable||"@@observable",a=function(){return Math.random().toString(36).substring(7).split("").join(".")},o={INIT:"@@redux/INIT"+a(),REPLACE:"@@redux/REPLACE"+a(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+a()}};function u(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}const c="BugAdded",l="BugRemoved",p="BugResolved";let h=0;const d=function e(t,n,r){var a;if("function"==typeof n&&"function"==typeof r||"function"==typeof r&&"function"==typeof arguments[3])throw new Error(s(0));if("function"==typeof n&&void 0===r&&(r=n,n=void 0),void 0!==r){if("function"!=typeof r)throw new Error(s(1));return r(e)(t,n)}if("function"!=typeof t)throw new Error(s(2));var c=t,l=n,p=[],h=p,d=!1;function f(){h===p&&(h=p.slice())}function D(){if(d)throw new Error(s(3));return l}function m(e){if("function"!=typeof e)throw new Error(s(4));if(d)throw new Error(s(5));var t=!0;return f(),h.push(e),function(){if(t){if(d)throw new Error(s(6));t=!1,f();var n=h.indexOf(e);h.splice(n,1),p=null}}}function g(e){if(!u(e))throw new Error(s(7));if(void 0===e.type)throw new Error(s(8));if(d)throw new Error(s(9));try{d=!0,l=c(l,e)}finally{d=!1}for(var t=p=h,n=0;n<t.length;n++)(0,t[n])();return e}function y(e){if("function"!=typeof e)throw new Error(s(10));c=e,g({type:o.REPLACE})}function E(){var e,t=m;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new Error(s(11));function n(){e.next&&e.next(D())}return n(),{unsubscribe:t(n)}}})[i]=function(){return this},e}return g({type:o.INIT}),(a={dispatch:g,subscribe:m,getState:D,replaceReducer:y})[i]=E,a}((function(e=[],t){switch(t.type){case c:return[...e,{id:++h,description:t.payload.description,resolved:!1}];case p:return e.map((e=>e.id===t.payload.id?{...e,resolved:!0}:e));case l:return e.filter((e=>e.id!==t.payload.id));default:return e}})),f=e=>({type:c,payload:{description:e}});d.subscribe((()=>console.log("store changed",d.getState()))),d.dispatch(f("my first bug")),d.dispatch(f("my bug 2")),d.dispatch({type:l,payload:{id:1}}),d.dispatch({type:p,payload:{id:2}}),console.log(d.getState());var D=n(945),m=n.n(D),g=n(237),y=n.n(g),E=n(182),C=n.n(E);const A=document.getElementsByTagName("head")[0],b=document.createElement("title");b.innerText="Apache Kafka Course",A.appendChild(b);const F=document.getElementsByTagName("body")[0],x=document.createElement("div");x.id="navbar",F.appendChild(x);const v=document.createElement("div");v.id="logocontainer",x.appendChild(v);const S=document.createElement("p");S.classList.add("logotext1"),S.innerText="by",v.appendChild(S);const T=document.createElement("img");T.src="./data/LogoCondensed.svg",T.classList.add("logo1"),v.appendChild(T);const w=document.createElement("div");w.id="nav_menu",x.appendChild(w);const B=document.createElement("p");B.classList.add("lessonnumbertext"),B.innerText="Lesson #",w.appendChild(B);const P=document.createElement("div");P.id="lessons",F.appendChild(P);var N=0;const k=document.getElementById("lessons");for(let e=0;e<=19;e++){let t="les"+e;e<10&&(t="les0"+e);const n=e,r=document.createElement("section");r.classList.add("section"),k.appendChild(r),r.id=n,r.appendChild(L(n));const s=document.createElement("a");s.classList.add("menu-item"),s.innerText=n+" ",s.href="#",s.addEventListener("click",(()=>O(n))),w.appendChild(s);const i="./data/"+t+".json";try{const e=async()=>{const e=await fetch(i),t=await e.json(),s=document.createElement("h1");if(s.classList.add("title"),s.innerHTML="Lesson "+n+" "+t.title,r.appendChild(s),null!=t.paragraphs)for(let e=0;e<t.paragraphs.length;e++){const n=t.paragraphs[e];if(null==n)continue;const s=document.createElement("div");if(r.appendChild(s),s.classList.add("paragraph"),e%2==0?s.classList.add("paragraph-even"):s.classList.add("paragraph-odd"),null!=n.text){const e=document.createElement("p");e.classList.add("paragraph"),s.appendChild(e),e.innerHTML=n.text}if(null!=n.code&&(Array.isArray(n.code)?n.code.forEach((e=>I(s,e))):I(s,n.code)),null!=n.conclusion){const e=document.createElement("p");e.classList.add("conclusion"),s.appendChild(e),e.innerHTML=n.conclusion}}r.appendChild(L(n)),_()};e()}catch(e){continue}}function I(e,t){if(null!=t.script){const n=document.createElement("pre");return e.classList.add("code"),e.appendChild(n),void(n.innerText=t.script)}const n=t.language,r=t.path;let s=r.lastIndexOf("/");s<0?s=0:s++;const i=r.substring(s);if("zip"===n){const n=document.createElement("div");n.classList.add("download"),e.appendChild(n);const r=document.createElement("a");return r.href=t.path,r.innerText="download "+i,n.appendChild(r),void(r.target="_blank")}const a=document.createElement("div");e.appendChild(a);const o=document.createElement("span");a.appendChild(o),o.className="caret",o.innerText="show "+i;const u=document.createElement("pre");a.appendChild(u),u.style.display="none",function(e,t){try{(async()=>{const n=await fetch(e),r=await n.text();t.innerText=r;const s=document.createElement("button");s.innerText="copy to clipboard",s.addEventListener("click",(()=>function(e){if(navigator.clipboard)return navigator.clipboard.writeText(e);if(window.clipboardData&&window.clipboardData.setData)return window.clipboardData.setData("Text",e),Promise.resolve();{console.log("workaround used");const t=document.createElement("input",{type:"text"});return t.value=e,document.body.append(t),t.focus(),t.select(),document.execCommand("copy"),t.remove(),Promise.resolve()}}(r))),t.appendChild(s)})()}catch(e){console.log(e)}}(r,u),o.addEventListener("click",(()=>{"none"===u.style.display?(u.style.display="block",o.className="caret-down",o.innerText="hide "+i):(u.style.display="none",o.className="caret",o.innerText="show "+i)}))}function L(e){const t=document.createElement("div");if(t.classList.add("buttonBox"),t.style.display="flex",e>0){const e=document.createElement("section");e.classList.add("button-previous"),e.innerText="previous lesson",e.addEventListener("click",(e=>(N>=0&&N--,void _()))),t.appendChild(e)}if(e<19){const e=document.createElement("section");e.classList.add("button-next"),e.addEventListener("click",(e=>(N<19&&N++,void _()))),e.innerText="next lesson",t.appendChild(e)}return t}function O(e){N=e,_()}function _(){for(var e=0;e<=19;e++){const t=document.getElementById(e);null!=t&&(t.style.display="none")}const t=document.getElementById(N);null!=t&&(t.style.display="block")}m().format("<div><div>  abc</div><div>  abc</div><div>  abc</div><div>  abc</div><div>  abc</div><div>  abc</div><div>  abc</div><div>  abc</div><div>  abc</div><div>  abc</div><div>  abc</div></div>",{parser:"html",plugins:[y()],useTabs:!0}),m().format('function setCurrentLesson() {\n\n    for (var i = 0; i < lessons.length; i++) {\n        document.getElementById(i).style.display = "none";\n    }\n    document.getElementById(currentLesson).style.display = "block";\n}',{parser:"babel",plugins:[C()],useTabs:!0,noBracketSpacing:!0})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,